#
# ice-modules - loads all modules specific to ICE platform and handles specific tasks
#
# Version 0.1 - 10.11.11 RC

description     "loads modules for the ICE box"


start on started udev
#start on startup
#start on ice-kernel-configured

task
console output
emits ice-modules-loaded

script

    . /etc/default/ice-modules.conf

    echo "loading platform_config..."
    #cat /proc/sys/vm/overcommit_*
    modprobe osal_linux
    modprobe pal_linux
    modprobe platform_config

    i=0
    SOC_NAME=""
    while ! SOC_NAME=`get_soc_info_utility NAME STRING` ; do
	echo "got SOC_NAME $SOC_NAME, waiting"
        i=$((i+1))
        sleep 1
    done

    lsmod | grep platform_config
    echo "Loading modules for Reel ICE ($SOC_NAME) (waited $i seconds)"

    case $SOC_NAME in
	    SOC_NAME_CE4100)
		    MODULES="$BASE_MODULES $ISMD_MODULES_CE41XX $MISC_MODULES"
		    ;;
	    SOC_NAME_CE4200)
		    MODULES="$BASE_MODULES $ISMD_MODULES_CE42XX $MISC_MODULES"
		    ;;
	    *)
		    echo "Unknown platform $SOC_NAME"
		    ;;
    esac


    if $ENABLE_ENCODING ; then
	MODULES="$MODULES $ISMD_MODULES_ENCODING"
    fi

    ### start
    for module in $MODULES ; do
	if [ "$module" != "" ] && echo $module | grep -qv ^# ; then
            if grep -q $module /proc/modules ; then
                echo "module $module already loaded. Skipping."
                continue
            else
	        echo "loading kernel module $module..."
            fi
	    case $module in
		edl_thermal)
		    modprobe $module
			if [ "$SOC_NAME" = "SOC_NAME_CE3100" ] || [ "$SOC_NAME" = "SOC_NAME_CE4100" ]; then
			#GEN5 has DAC config as switches on board, not loading DAC driver
		    		modprobe edl_audio_dac_drv_linux
				#Configure 2ch DAC
				audio_dac_config dac_id=0 volume=100 output_phase_inverted=0
				#Configure 8ch DAC
				audio_dac_config dac_id=1 volume=100 output_phase_inverted=0
			fi
		    ;;
		idl_i2c)
		    modprobe $module
		    mkdir /dev/i2c
		    /sbin/create_dev.sh make_dev i2c i2c/0
		    /sbin/create_dev.sh make_dev i2c i2c/1
		    /sbin/create_dev.sh make_dev i2c i2c/2
		    /sbin/create_dev.sh make_dev i2c i2c/3
		    ;;
		ismdclock_recovery)
		    echo "loading firmware:"
		    ismd_fw_load
		    modprobe $module
		    ;;
		pwm)
		    modprobe $module
		    /sbin/create_dev.sh make_dev_minor pwm pwm0_ch0 0
                    /sbin/create_dev.sh make_dev_minor pwm pwm0_ch1 1
                    /sbin/create_dev.sh make_dev_minor pwm pwm0_ch2 2
                    /sbin/create_dev.sh make_dev_minor pwm pwm0_ch3 3
		    ;;
		sec_kernel)
		    modprobe $module
		    if [ "$SOC_NAME" = "SOC_NAME_CE4100" ]; then
			FW_FILE=`find  /lib/firmware/sec -name sec_fw_4000.ce4100`
			if [ -z "$FW_FILE" ];then
			    FW_FILE=`find  /lib/firmware/sec -name sec_fw_4000*ce4100`
			fi
			echo FW_FILE: $FW_FILE
			if [ -n "$FW_FILE" ];then
			    /sbin/sec_init_tdp $FW_FILE
			fi
		    fi
		    ;;
		system_utils_linux)
		    modprobe $module
		    case "$SOC_NAME" in
		        "SOC_NAME_CE4100")
		            /usr/sbin/mcu_config 0 2 -1 -1
		            ;;
		        "SOC_NAME_CE4200")
	                    /usr/sbin/mcu_config 0 2 -1 -1
		            ;;
		    esac
		    ;;
		alsa_shim)
		    modprobe $module
		    if [ -f /dev/.have_frontpanel ]; then
			bootlogo="/usr/share/reel/bootlogo2_avg.png"
		    else
			bootlogo="/usr/share/reel/bootlogo2_ncl.png"
		    fi
		    /usr/sbin/splash $bootlogo &
		    ;;
		*)
		    modprobe $module
		    ;;
	    esac
	fi
    done
    exit 0

end script
