#ifndef HDVCAP_REGOFFS_H
#define HDVCAP_REGOFFS_H 1
/*

  This file is provided under a dual BSD/GPLv2 license.  When using or 
  redistributing this file, you may do so under either license.

  GPL LICENSE SUMMARY

  Copyright(c) 2007-2009 Intel Corporation. All rights reserved.

  This program is free software; you can redistribute it and/or modify 
  it under the terms of version 2 of the GNU General Public License as
  published by the Free Software Foundation.

  This program is distributed in the hope that it will be useful, but 
  WITHOUT ANY WARRANTY; without even the implied warranty of 
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
  General Public License for more details.

  You should have received a copy of the GNU General Public License 
  along with this program; if not, write to the Free Software 
  Foundation, Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
  The full GNU General Public License is included in this distribution 
  in the file called LICENSE.GPL.

  Contact Information:
    Intel Corporation
    2200 Mission College Blvd.
    Santa Clara, CA  97052

  BSD LICENSE 

  Copyright(c) 2007-2009 Intel Corporation. All rights reserved.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without 
  modification, are permitted provided that the following conditions 
  are met:

    * Redistributions of source code must retain the above copyright 
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright 
      notice, this list of conditions and the following disclaimer in 
      the documentation and/or other materials provided with the 
      distribution.
    * Neither the name of Intel Corporation nor the names of its 
      contributors may be used to endorse or promote products derived 
      from this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*/


/* Module HDVCAP CSR Definitions */
/* WARNING: This file is Machine Generated using sven_csr.c */


#define ROFF_HDVCAP_GLOBAL_CTL	0x0 /*  */ 
	#define BITFIELD_HDVCAP_GLOBAL_CTL	 0x0000, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_GLOBAL_CTL */
	#define BLSB_HDVCAP_GLOBAL_CTL_CAP_INPUT_DISABLE	2
	#define BLSB_HDVCAP_GLOBAL_CTL_CAP_CLK_INV_CTRL	1
	#define BLSB_HDVCAP_GLOBAL_CTL_HDVCAP_ENABLE	0
	/* Register Bit Widths for HDVCAP_GLOBAL_CTL */
	#define BWID_HDVCAP_GLOBAL_CTL_CAP_INPUT_DISABLE	1
	#define BWID_HDVCAP_GLOBAL_CTL_CAP_CLK_INV_CTRL	1
	#define BWID_HDVCAP_GLOBAL_CTL_HDVCAP_ENABLE	1
	/* Register Bit MASKS for HDVCAP_GLOBAL_CTL */
	#define BMSK_HDVCAP_GLOBAL_CTL_CAP_INPUT_DISABLE	(1<<2) /* == 0x00000004:  */
	#define BMSK_HDVCAP_GLOBAL_CTL_CAP_CLK_INV_CTRL	(1<<1) /* == 0x00000002:  */
	#define BMSK_HDVCAP_GLOBAL_CTL_HDVCAP_ENABLE	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for HDVCAP_GLOBAL_CTL - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_GLOBAL_CTL_CAP_INPUT_DISABLE	 0x0000, 2, 1, 0x00000004
	#define BITFIELD_HDVCAP_GLOBAL_CTL_CAP_CLK_INV_CTRL	 0x0000, 1, 1, 0x00000002
	#define BITFIELD_HDVCAP_GLOBAL_CTL_HDVCAP_ENABLE	 0x0000, 0, 1, 0x00000001
#define ROFF_HDVCAP_VIDEO_CTL	0x4 /*  */ 
	#define BITFIELD_HDVCAP_VIDEO_CTL	 0x0004, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_VIDEO_CTL */
	#define BLSB_HDVCAP_VIDEO_CTL_BT656_VIDEO_TEST_PATTERN_GEN_MODE_SEL	21
	#define BLSB_HDVCAP_VIDEO_CTL_BT656_VIDEO_TEST_PATTERN_GEN_EN	20
	#define BLSB_HDVCAP_VIDEO_CTL_12BIT_TO_10_8Bit_DITHERING	17
	#define BLSB_HDVCAP_VIDEO_CTL_444_TO_422_CONV_FILTER	15
	#define BLSB_HDVCAP_VIDEO_CTL_CSC_EN	14
	#define BLSB_HDVCAP_VIDEO_CTL_EXT_DE_POLARITY	13
	#define BLSB_HDVCAP_VIDEO_CTL_EXT_VSYNC_POLARITY	12
	#define BLSB_HDVCAP_VIDEO_CTL_EXT_HSYNC_POLARITY	11
	#define BLSB_HDVCAP_VIDEO_CTL_PROGRESSIVE_SCAN_MODE	10
	#define BLSB_HDVCAP_VIDEO_CTL_BT656_SWAP_MODE	8
	#define BLSB_HDVCAP_VIDEO_CTL_VIDEO_INPUT_MODE	5
	#define BLSB_HDVCAP_VIDEO_CTL_VIDEO_FMT_MODE	0
	/* Register Bit Widths for HDVCAP_VIDEO_CTL */
	#define BWID_HDVCAP_VIDEO_CTL_BT656_VIDEO_TEST_PATTERN_GEN_MODE_SEL	4
	#define BWID_HDVCAP_VIDEO_CTL_BT656_VIDEO_TEST_PATTERN_GEN_EN	1
	#define BWID_HDVCAP_VIDEO_CTL_12BIT_TO_10_8Bit_DITHERING	3
	#define BWID_HDVCAP_VIDEO_CTL_444_TO_422_CONV_FILTER	2
	#define BWID_HDVCAP_VIDEO_CTL_CSC_EN	1
	#define BWID_HDVCAP_VIDEO_CTL_EXT_DE_POLARITY	1
	#define BWID_HDVCAP_VIDEO_CTL_EXT_VSYNC_POLARITY	1
	#define BWID_HDVCAP_VIDEO_CTL_EXT_HSYNC_POLARITY	1
	#define BWID_HDVCAP_VIDEO_CTL_PROGRESSIVE_SCAN_MODE	1
	#define BWID_HDVCAP_VIDEO_CTL_BT656_SWAP_MODE	2
	#define BWID_HDVCAP_VIDEO_CTL_VIDEO_INPUT_MODE	3
	#define BWID_HDVCAP_VIDEO_CTL_VIDEO_FMT_MODE	5
	/* Register Bit MASKS for HDVCAP_VIDEO_CTL */
	#define BMSK_HDVCAP_VIDEO_CTL_BT656_VIDEO_TEST_PATTERN_GEN_MODE_SEL	0x01e00000 /*  */
	#define BMSK_HDVCAP_VIDEO_CTL_BT656_VIDEO_TEST_PATTERN_GEN_EN	(1<<20) /* == 0x00100000:  */
	#define BMSK_HDVCAP_VIDEO_CTL_12BIT_TO_10_8Bit_DITHERING	0x000e0000 /*  */
	#define BMSK_HDVCAP_VIDEO_CTL_444_TO_422_CONV_FILTER	0x00018000 /*  */
	#define BMSK_HDVCAP_VIDEO_CTL_CSC_EN	(1<<14) /* == 0x00004000:  */
	#define BMSK_HDVCAP_VIDEO_CTL_EXT_DE_POLARITY	(1<<13) /* == 0x00002000:  */
	#define BMSK_HDVCAP_VIDEO_CTL_EXT_VSYNC_POLARITY	(1<<12) /* == 0x00001000:  */
	#define BMSK_HDVCAP_VIDEO_CTL_EXT_HSYNC_POLARITY	(1<<11) /* == 0x00000800:  */
	#define BMSK_HDVCAP_VIDEO_CTL_PROGRESSIVE_SCAN_MODE	(1<<10) /* == 0x00000400:  */
	#define BMSK_HDVCAP_VIDEO_CTL_BT656_SWAP_MODE	0x00000300 /*  */
	#define BMSK_HDVCAP_VIDEO_CTL_VIDEO_INPUT_MODE	0x000000e0 /*  */
	#define BMSK_HDVCAP_VIDEO_CTL_VIDEO_FMT_MODE	0x0000001f /*  */
	/* Register BITFIELD for HDVCAP_VIDEO_CTL - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_VIDEO_CTL_BT656_VIDEO_TEST_PATTERN_GEN_MODE_SEL	 0x0004, 21, 4, 0x01e00000
	#define BITFIELD_HDVCAP_VIDEO_CTL_BT656_VIDEO_TEST_PATTERN_GEN_EN	 0x0004, 20, 1, 0x00100000
	#define BITFIELD_HDVCAP_VIDEO_CTL_12BIT_TO_10_8Bit_DITHERING	 0x0004, 17, 3, 0x000e0000
	#define BITFIELD_HDVCAP_VIDEO_CTL_444_TO_422_CONV_FILTER	 0x0004, 15, 2, 0x00018000
	#define BITFIELD_HDVCAP_VIDEO_CTL_CSC_EN	 0x0004, 14, 1, 0x00004000
	#define BITFIELD_HDVCAP_VIDEO_CTL_EXT_DE_POLARITY	 0x0004, 13, 1, 0x00002000
	#define BITFIELD_HDVCAP_VIDEO_CTL_EXT_VSYNC_POLARITY	 0x0004, 12, 1, 0x00001000
	#define BITFIELD_HDVCAP_VIDEO_CTL_EXT_HSYNC_POLARITY	 0x0004, 11, 1, 0x00000800
	#define BITFIELD_HDVCAP_VIDEO_CTL_PROGRESSIVE_SCAN_MODE	 0x0004, 10, 1, 0x00000400
	#define BITFIELD_HDVCAP_VIDEO_CTL_BT656_SWAP_MODE	 0x0004, 8, 2, 0x00000300
	#define BITFIELD_HDVCAP_VIDEO_CTL_VIDEO_INPUT_MODE	 0x0004, 5, 3, 0x000000e0
	#define BITFIELD_HDVCAP_VIDEO_CTL_VIDEO_FMT_MODE	 0x0004, 0, 5, 0x0000001f
#define ROFF_HDVCAP_PDMA_CTL	0x8 /*  */ 
	#define BITFIELD_HDVCAP_PDMA_CTL	 0x0008, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_PDMA_CTL */
	#define BLSB_HDVCAP_PDMA_CTL_RESERVED	24
	#define BLSB_HDVCAP_PDMA_CTL_ALPHA_VALUE	16
	#define BLSB_HDVCAP_PDMA_CTL_UNUSED_2	7
	#define BLSB_HDVCAP_PDMA_CTL_ADDRESS_OUT_OF_RANGE_ENABLE	6
	#define BLSB_HDVCAP_PDMA_CTL_FIELD_0_FIRST	5
	#define BLSB_HDVCAP_PDMA_CTL_STALL_PIXEL_DMA	4
	#define BLSB_HDVCAP_PDMA_CTL_PACK_MODE	3
	#define BLSB_HDVCAP_PDMA_CTL_PDMA_FIFO_AUTO_CLEAR_DISABLE	2
	#define BLSB_HDVCAP_PDMA_CTL_UNUSED_1	0
	/* Register Bit Widths for HDVCAP_PDMA_CTL */
	#define BWID_HDVCAP_PDMA_CTL_RESERVED	8
	#define BWID_HDVCAP_PDMA_CTL_ALPHA_VALUE	8
	#define BWID_HDVCAP_PDMA_CTL_UNUSED_2	9
	#define BWID_HDVCAP_PDMA_CTL_ADDRESS_OUT_OF_RANGE_ENABLE	1
	#define BWID_HDVCAP_PDMA_CTL_FIELD_0_FIRST	1
	#define BWID_HDVCAP_PDMA_CTL_STALL_PIXEL_DMA	1
	#define BWID_HDVCAP_PDMA_CTL_PACK_MODE	1
	#define BWID_HDVCAP_PDMA_CTL_PDMA_FIFO_AUTO_CLEAR_DISABLE	1
	#define BWID_HDVCAP_PDMA_CTL_UNUSED_1	2
	/* Register Bit MASKS for HDVCAP_PDMA_CTL */
	#define BMSK_HDVCAP_PDMA_CTL_RESERVED	0xff000000 /*  */
	#define BMSK_HDVCAP_PDMA_CTL_ALPHA_VALUE	0x00ff0000 /*  */
	#define BMSK_HDVCAP_PDMA_CTL_UNUSED_2	0x0000ff80 /*  */
	#define BMSK_HDVCAP_PDMA_CTL_ADDRESS_OUT_OF_RANGE_ENABLE	(1<<6) /* == 0x00000040:  */
	#define BMSK_HDVCAP_PDMA_CTL_FIELD_0_FIRST	(1<<5) /* == 0x00000020:  */
	#define BMSK_HDVCAP_PDMA_CTL_STALL_PIXEL_DMA	(1<<4) /* == 0x00000010:  */
	#define BMSK_HDVCAP_PDMA_CTL_PACK_MODE	(1<<3) /* == 0x00000008:  */
	#define BMSK_HDVCAP_PDMA_CTL_PDMA_FIFO_AUTO_CLEAR_DISABLE	(1<<2) /* == 0x00000004:  */
	#define BMSK_HDVCAP_PDMA_CTL_UNUSED_1	0x00000003 /*  */
	/* Register BITFIELD for HDVCAP_PDMA_CTL - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_PDMA_CTL_RESERVED	 0x0008, 24, 8, 0xff000000
	#define BITFIELD_HDVCAP_PDMA_CTL_ALPHA_VALUE	 0x0008, 16, 8, 0x00ff0000
	#define BITFIELD_HDVCAP_PDMA_CTL_UNUSED_2	 0x0008, 7, 9, 0x0000ff80
	#define BITFIELD_HDVCAP_PDMA_CTL_ADDRESS_OUT_OF_RANGE_ENABLE	 0x0008, 6, 1, 0x00000040
	#define BITFIELD_HDVCAP_PDMA_CTL_FIELD_0_FIRST	 0x0008, 5, 1, 0x00000020
	#define BITFIELD_HDVCAP_PDMA_CTL_STALL_PIXEL_DMA	 0x0008, 4, 1, 0x00000010
	#define BITFIELD_HDVCAP_PDMA_CTL_PACK_MODE	 0x0008, 3, 1, 0x00000008
	#define BITFIELD_HDVCAP_PDMA_CTL_PDMA_FIFO_AUTO_CLEAR_DISABLE	 0x0008, 2, 1, 0x00000004
	#define BITFIELD_HDVCAP_PDMA_CTL_UNUSED_1	 0x0008, 0, 2, 0x00000003
#define ROFF_HDVCAP_INT_STATUS	0xc /*  */ 
	#define BITFIELD_HDVCAP_INT_STATUS	 0x000c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_INT_STATUS */
	#define BLSB_HDVCAP_INT_STATUS_RESERVED	8
	#define BLSB_HDVCAP_INT_STATUS_BUF1_FIELD1_DNE_INT	7
	#define BLSB_HDVCAP_INT_STATUS_BUF1_FIELD0_DNE_INT	6
	#define BLSB_HDVCAP_INT_STATUS_BUF0_FIELD1_DNE_INT	5
	#define BLSB_HDVCAP_INT_STATUS_BUF0_FIELD0_DNE_INT	4
	#define BLSB_HDVCAP_INT_STATUS_BUF_B_OUT_OF_RANGE_INT	3
	#define BLSB_HDVCAP_INT_STATUS_BUF_A_OUT_OF_RANGE_INT	2
	#define BLSB_HDVCAP_INT_STATUS_PDMA_STALL_INT	1
	#define BLSB_HDVCAP_INT_STATUS_VIDEO_SYNC_LOSS_INT	0
	/* Register Bit Widths for HDVCAP_INT_STATUS */
	#define BWID_HDVCAP_INT_STATUS_RESERVED	24
	#define BWID_HDVCAP_INT_STATUS_BUF1_FIELD1_DNE_INT	1
	#define BWID_HDVCAP_INT_STATUS_BUF1_FIELD0_DNE_INT	1
	#define BWID_HDVCAP_INT_STATUS_BUF0_FIELD1_DNE_INT	1
	#define BWID_HDVCAP_INT_STATUS_BUF0_FIELD0_DNE_INT	1
	#define BWID_HDVCAP_INT_STATUS_BUF_B_OUT_OF_RANGE_INT	1
	#define BWID_HDVCAP_INT_STATUS_BUF_A_OUT_OF_RANGE_INT	1
	#define BWID_HDVCAP_INT_STATUS_PDMA_STALL_INT	1
	#define BWID_HDVCAP_INT_STATUS_VIDEO_SYNC_LOSS_INT	1
	/* Register Bit MASKS for HDVCAP_INT_STATUS */
	#define BMSK_HDVCAP_INT_STATUS_RESERVED	0xffffff00 /*  */
	#define BMSK_HDVCAP_INT_STATUS_BUF1_FIELD1_DNE_INT	(1<<7) /* == 0x00000080:  */
	#define BMSK_HDVCAP_INT_STATUS_BUF1_FIELD0_DNE_INT	(1<<6) /* == 0x00000040:  */
	#define BMSK_HDVCAP_INT_STATUS_BUF0_FIELD1_DNE_INT	(1<<5) /* == 0x00000020:  */
	#define BMSK_HDVCAP_INT_STATUS_BUF0_FIELD0_DNE_INT	(1<<4) /* == 0x00000010:  */
	#define BMSK_HDVCAP_INT_STATUS_BUF_B_OUT_OF_RANGE_INT	(1<<3) /* == 0x00000008:  */
	#define BMSK_HDVCAP_INT_STATUS_BUF_A_OUT_OF_RANGE_INT	(1<<2) /* == 0x00000004:  */
	#define BMSK_HDVCAP_INT_STATUS_PDMA_STALL_INT	(1<<1) /* == 0x00000002:  */
	#define BMSK_HDVCAP_INT_STATUS_VIDEO_SYNC_LOSS_INT	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for HDVCAP_INT_STATUS - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_INT_STATUS_RESERVED	 0x000c, 8, 24, 0xffffff00
	#define BITFIELD_HDVCAP_INT_STATUS_BUF1_FIELD1_DNE_INT	 0x000c, 7, 1, 0x00000080
	#define BITFIELD_HDVCAP_INT_STATUS_BUF1_FIELD0_DNE_INT	 0x000c, 6, 1, 0x00000040
	#define BITFIELD_HDVCAP_INT_STATUS_BUF0_FIELD1_DNE_INT	 0x000c, 5, 1, 0x00000020
	#define BITFIELD_HDVCAP_INT_STATUS_BUF0_FIELD0_DNE_INT	 0x000c, 4, 1, 0x00000010
	#define BITFIELD_HDVCAP_INT_STATUS_BUF_B_OUT_OF_RANGE_INT	 0x000c, 3, 1, 0x00000008
	#define BITFIELD_HDVCAP_INT_STATUS_BUF_A_OUT_OF_RANGE_INT	 0x000c, 2, 1, 0x00000004
	#define BITFIELD_HDVCAP_INT_STATUS_PDMA_STALL_INT	 0x000c, 1, 1, 0x00000002
	#define BITFIELD_HDVCAP_INT_STATUS_VIDEO_SYNC_LOSS_INT	 0x000c, 0, 1, 0x00000001
#define ROFF_HDVCAP_INT_MASK	0x10 /*  */ 
	#define BITFIELD_HDVCAP_INT_MASK	 0x0010, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_INT_MASK */
	#define BLSB_HDVCAP_INT_MASK_RESERVED	8
	#define BLSB_HDVCAP_INT_MASK_BUF1_FIELD1_DNE_INT	7
	#define BLSB_HDVCAP_INT_MASK_BUF1_FIELD0_DNE_INT	6
	#define BLSB_HDVCAP_INT_MASK_BUF0_FIELD1_DNE_INT	5
	#define BLSB_HDVCAP_INT_MASK_BUF0_FIELD0_DNE_INT	4
	#define BLSB_HDVCAP_INT_MASK_BUF_B_OUT_OF_RANGE_INT	3
	#define BLSB_HDVCAP_INT_MASK_BUF_A_OUT_OF_RANGE_INT	2
	#define BLSB_HDVCAP_INT_MASK_PDMA_STALL_INT	1
	#define BLSB_HDVCAP_INT_MASK_VIDEO_SYNC_LOSS_INT	0
	/* Register Bit Widths for HDVCAP_INT_MASK */
	#define BWID_HDVCAP_INT_MASK_RESERVED	24
	#define BWID_HDVCAP_INT_MASK_BUF1_FIELD1_DNE_INT	1
	#define BWID_HDVCAP_INT_MASK_BUF1_FIELD0_DNE_INT	1
	#define BWID_HDVCAP_INT_MASK_BUF0_FIELD1_DNE_INT	1
	#define BWID_HDVCAP_INT_MASK_BUF0_FIELD0_DNE_INT	1
	#define BWID_HDVCAP_INT_MASK_BUF_B_OUT_OF_RANGE_INT	1
	#define BWID_HDVCAP_INT_MASK_BUF_A_OUT_OF_RANGE_INT	1
	#define BWID_HDVCAP_INT_MASK_PDMA_STALL_INT	1
	#define BWID_HDVCAP_INT_MASK_VIDEO_SYNC_LOSS_INT	1
	/* Register Bit MASKS for HDVCAP_INT_MASK */
	#define BMSK_HDVCAP_INT_MASK_RESERVED	0xffffff00 /*  */
	#define BMSK_HDVCAP_INT_MASK_BUF1_FIELD1_DNE_INT	(1<<7) /* == 0x00000080:  */
	#define BMSK_HDVCAP_INT_MASK_BUF1_FIELD0_DNE_INT	(1<<6) /* == 0x00000040:  */
	#define BMSK_HDVCAP_INT_MASK_BUF0_FIELD1_DNE_INT	(1<<5) /* == 0x00000020:  */
	#define BMSK_HDVCAP_INT_MASK_BUF0_FIELD0_DNE_INT	(1<<4) /* == 0x00000010:  */
	#define BMSK_HDVCAP_INT_MASK_BUF_B_OUT_OF_RANGE_INT	(1<<3) /* == 0x00000008:  */
	#define BMSK_HDVCAP_INT_MASK_BUF_A_OUT_OF_RANGE_INT	(1<<2) /* == 0x00000004:  */
	#define BMSK_HDVCAP_INT_MASK_PDMA_STALL_INT	(1<<1) /* == 0x00000002:  */
	#define BMSK_HDVCAP_INT_MASK_VIDEO_SYNC_LOSS_INT	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for HDVCAP_INT_MASK - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_INT_MASK_RESERVED	 0x0010, 8, 24, 0xffffff00
	#define BITFIELD_HDVCAP_INT_MASK_BUF1_FIELD1_DNE_INT	 0x0010, 7, 1, 0x00000080
	#define BITFIELD_HDVCAP_INT_MASK_BUF1_FIELD0_DNE_INT	 0x0010, 6, 1, 0x00000040
	#define BITFIELD_HDVCAP_INT_MASK_BUF0_FIELD1_DNE_INT	 0x0010, 5, 1, 0x00000020
	#define BITFIELD_HDVCAP_INT_MASK_BUF0_FIELD0_DNE_INT	 0x0010, 4, 1, 0x00000010
	#define BITFIELD_HDVCAP_INT_MASK_BUF_B_OUT_OF_RANGE_INT	 0x0010, 3, 1, 0x00000008
	#define BITFIELD_HDVCAP_INT_MASK_BUF_A_OUT_OF_RANGE_INT	 0x0010, 2, 1, 0x00000004
	#define BITFIELD_HDVCAP_INT_MASK_PDMA_STALL_INT	 0x0010, 1, 1, 0x00000002
	#define BITFIELD_HDVCAP_INT_MASK_VIDEO_SYNC_LOSS_INT	 0x0010, 0, 1, 0x00000001
#define ROFF_HDVCAP_LINE_START_0	0x14 /*  */ 
	#define BITFIELD_HDVCAP_LINE_START_0	 0x0014, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_LINE_START_0 */
	#define BLSB_HDVCAP_LINE_START_0_RESERVED	13
	#define BLSB_HDVCAP_LINE_START_0_LINE_START_NUM_FOR_FIELD0_CAP	0
	/* Register Bit Widths for HDVCAP_LINE_START_0 */
	#define BWID_HDVCAP_LINE_START_0_RESERVED	19
	#define BWID_HDVCAP_LINE_START_0_LINE_START_NUM_FOR_FIELD0_CAP	13
	/* Register Bit MASKS for HDVCAP_LINE_START_0 */
	#define BMSK_HDVCAP_LINE_START_0_RESERVED	0xffffe000 /*  */
	#define BMSK_HDVCAP_LINE_START_0_LINE_START_NUM_FOR_FIELD0_CAP	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_LINE_START_0 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_LINE_START_0_RESERVED	 0x0014, 13, 19, 0xffffe000
	#define BITFIELD_HDVCAP_LINE_START_0_LINE_START_NUM_FOR_FIELD0_CAP	 0x0014, 0, 13, 0x00001fff
#define ROFF_HDVCAP_LINE_END_0	0x18 /*  */ 
	#define BITFIELD_HDVCAP_LINE_END_0	 0x0018, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_LINE_END_0 */
	#define BLSB_HDVCAP_LINE_END_0_RESERVED	13
	#define BLSB_HDVCAP_LINE_END_0_LINE_END_NUM_FOR_FIELD0_CAP	0
	/* Register Bit Widths for HDVCAP_LINE_END_0 */
	#define BWID_HDVCAP_LINE_END_0_RESERVED	19
	#define BWID_HDVCAP_LINE_END_0_LINE_END_NUM_FOR_FIELD0_CAP	13
	/* Register Bit MASKS for HDVCAP_LINE_END_0 */
	#define BMSK_HDVCAP_LINE_END_0_RESERVED	0xffffe000 /*  */
	#define BMSK_HDVCAP_LINE_END_0_LINE_END_NUM_FOR_FIELD0_CAP	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_LINE_END_0 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_LINE_END_0_RESERVED	 0x0018, 13, 19, 0xffffe000
	#define BITFIELD_HDVCAP_LINE_END_0_LINE_END_NUM_FOR_FIELD0_CAP	 0x0018, 0, 13, 0x00001fff
#define ROFF_HDVCAP_LINE_START_1	0x1c /*  */ 
	#define BITFIELD_HDVCAP_LINE_START_1	 0x001c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_LINE_START_1 */
	#define BLSB_HDVCAP_LINE_START_1_RESERVED	13
	#define BLSB_HDVCAP_LINE_START_1_LINE_START_NUM_FOR_FIELD1_CAP	0
	/* Register Bit Widths for HDVCAP_LINE_START_1 */
	#define BWID_HDVCAP_LINE_START_1_RESERVED	19
	#define BWID_HDVCAP_LINE_START_1_LINE_START_NUM_FOR_FIELD1_CAP	13
	/* Register Bit MASKS for HDVCAP_LINE_START_1 */
	#define BMSK_HDVCAP_LINE_START_1_RESERVED	0xffffe000 /*  */
	#define BMSK_HDVCAP_LINE_START_1_LINE_START_NUM_FOR_FIELD1_CAP	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_LINE_START_1 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_LINE_START_1_RESERVED	 0x001c, 13, 19, 0xffffe000
	#define BITFIELD_HDVCAP_LINE_START_1_LINE_START_NUM_FOR_FIELD1_CAP	 0x001c, 0, 13, 0x00001fff
#define ROFF_HDVCAP_LINE_END_1	0x20 /*  */ 
	#define BITFIELD_HDVCAP_LINE_END_1	 0x0020, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_LINE_END_1 */
	#define BLSB_HDVCAP_LINE_END_1_RESERVED	13
	#define BLSB_HDVCAP_LINE_END_1_LINE_END_NUM_FOR_FIELD1_CAP	0
	/* Register Bit Widths for HDVCAP_LINE_END_1 */
	#define BWID_HDVCAP_LINE_END_1_RESERVED	19
	#define BWID_HDVCAP_LINE_END_1_LINE_END_NUM_FOR_FIELD1_CAP	13
	/* Register Bit MASKS for HDVCAP_LINE_END_1 */
	#define BMSK_HDVCAP_LINE_END_1_RESERVED	0xffffe000 /*  */
	#define BMSK_HDVCAP_LINE_END_1_LINE_END_NUM_FOR_FIELD1_CAP	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_LINE_END_1 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_LINE_END_1_RESERVED	 0x0020, 13, 19, 0xffffe000
	#define BITFIELD_HDVCAP_LINE_END_1_LINE_END_NUM_FOR_FIELD1_CAP	 0x0020, 0, 13, 0x00001fff
#define ROFF_HDVCAP_BUF_A_FRAME_0	0x24 /*  */ 
	#define BITFIELD_HDVCAP_BUF_A_FRAME_0	 0x0024, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_BUF_A_FRAME_0 */
	#define BLSB_HDVCAP_BUF_A_FRAME_0_BUF_A_FRAME_0_BASE_ADDR_PTR	0
	/* Register Bit Widths for HDVCAP_BUF_A_FRAME_0 */
	#define BWID_HDVCAP_BUF_A_FRAME_0_BUF_A_FRAME_0_BASE_ADDR_PTR	32
	/* Register Bit MASKS for HDVCAP_BUF_A_FRAME_0 */
	#define BMSK_HDVCAP_BUF_A_FRAME_0_BUF_A_FRAME_0_BASE_ADDR_PTR	0x00000000 /*  */
	/* Register BITFIELD for HDVCAP_BUF_A_FRAME_0 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_BUF_A_FRAME_0_BUF_A_FRAME_0_BASE_ADDR_PTR	 0x0024, 0, 32, 0x00000000
#define ROFF_HDVCAP_BUF_B_FRAME_0	0x28 /*  */ 
	#define BITFIELD_HDVCAP_BUF_B_FRAME_0	 0x0028, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_BUF_B_FRAME_0 */
	#define BLSB_HDVCAP_BUF_B_FRAME_0_BUF_B_FRAME_0_BASE_ADDR_PTR	0
	/* Register Bit Widths for HDVCAP_BUF_B_FRAME_0 */
	#define BWID_HDVCAP_BUF_B_FRAME_0_BUF_B_FRAME_0_BASE_ADDR_PTR	32
	/* Register Bit MASKS for HDVCAP_BUF_B_FRAME_0 */
	#define BMSK_HDVCAP_BUF_B_FRAME_0_BUF_B_FRAME_0_BASE_ADDR_PTR	0x00000000 /*  */
	/* Register BITFIELD for HDVCAP_BUF_B_FRAME_0 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_BUF_B_FRAME_0_BUF_B_FRAME_0_BASE_ADDR_PTR	 0x0028, 0, 32, 0x00000000
#define ROFF_HDVCAP_BUF_A_FRAME_1	0x2c /*  */ 
	#define BITFIELD_HDVCAP_BUF_A_FRAME_1	 0x002c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_BUF_A_FRAME_1 */
	#define BLSB_HDVCAP_BUF_A_FRAME_1_BUF_A_FRAME_1_BASE_ADDR_PTR	0
	/* Register Bit Widths for HDVCAP_BUF_A_FRAME_1 */
	#define BWID_HDVCAP_BUF_A_FRAME_1_BUF_A_FRAME_1_BASE_ADDR_PTR	32
	/* Register Bit MASKS for HDVCAP_BUF_A_FRAME_1 */
	#define BMSK_HDVCAP_BUF_A_FRAME_1_BUF_A_FRAME_1_BASE_ADDR_PTR	0x00000000 /*  */
	/* Register BITFIELD for HDVCAP_BUF_A_FRAME_1 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_BUF_A_FRAME_1_BUF_A_FRAME_1_BASE_ADDR_PTR	 0x002c, 0, 32, 0x00000000
#define ROFF_HDVCAP_BUF_B_FRAME_1	0x30 /*  */ 
	#define BITFIELD_HDVCAP_BUF_B_FRAME_1	 0x0030, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_BUF_B_FRAME_1 */
	#define BLSB_HDVCAP_BUF_B_FRAME_1_BUF_B_FRAME_1_BASE_ADDR_PTR	0
	/* Register Bit Widths for HDVCAP_BUF_B_FRAME_1 */
	#define BWID_HDVCAP_BUF_B_FRAME_1_BUF_B_FRAME_1_BASE_ADDR_PTR	32
	/* Register Bit MASKS for HDVCAP_BUF_B_FRAME_1 */
	#define BMSK_HDVCAP_BUF_B_FRAME_1_BUF_B_FRAME_1_BASE_ADDR_PTR	0x00000000 /*  */
	/* Register BITFIELD for HDVCAP_BUF_B_FRAME_1 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_BUF_B_FRAME_1_BUF_B_FRAME_1_BASE_ADDR_PTR	 0x0030, 0, 32, 0x00000000
#define ROFF_HDVCAP_PITCH	0x34 /*  */ 
	#define BITFIELD_HDVCAP_PITCH	 0x0034, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_PITCH */
	#define BLSB_HDVCAP_PITCH_RESERVED	16
	#define BLSB_HDVCAP_PITCH_HORIZONTAL_PITCH_IN_BYTES	0
	/* Register Bit Widths for HDVCAP_PITCH */
	#define BWID_HDVCAP_PITCH_RESERVED	16
	#define BWID_HDVCAP_PITCH_HORIZONTAL_PITCH_IN_BYTES	16
	/* Register Bit MASKS for HDVCAP_PITCH */
	#define BMSK_HDVCAP_PITCH_RESERVED	0xffff0000 /*  */
	#define BMSK_HDVCAP_PITCH_HORIZONTAL_PITCH_IN_BYTES	0x0000ffff /*  */
	/* Register BITFIELD for HDVCAP_PITCH - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_PITCH_RESERVED	 0x0034, 16, 16, 0xffff0000
	#define BITFIELD_HDVCAP_PITCH_HORIZONTAL_PITCH_IN_BYTES	 0x0034, 0, 16, 0x0000ffff
#define ROFF_HDVCAP_BUF_A_SIZE	0x38 /*  */ 
	#define BITFIELD_HDVCAP_BUF_A_SIZE	 0x0038, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_BUF_A_SIZE */
	#define BLSB_HDVCAP_BUF_A_SIZE_BUF_A_SIZE_IN_BYTES	0
	/* Register Bit Widths for HDVCAP_BUF_A_SIZE */
	#define BWID_HDVCAP_BUF_A_SIZE_BUF_A_SIZE_IN_BYTES	32
	/* Register Bit MASKS for HDVCAP_BUF_A_SIZE */
	#define BMSK_HDVCAP_BUF_A_SIZE_BUF_A_SIZE_IN_BYTES	0x00000000 /*  */
	/* Register BITFIELD for HDVCAP_BUF_A_SIZE - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_BUF_A_SIZE_BUF_A_SIZE_IN_BYTES	 0x0038, 0, 32, 0x00000000
#define ROFF_HDVCAP_BUF_B_SIZE	0x3c /*  */ 
	#define BITFIELD_HDVCAP_BUF_B_SIZE	 0x003c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_BUF_B_SIZE */
	#define BLSB_HDVCAP_BUF_B_SIZE_BUF_B_SIZE_IN_BYTES	0
	/* Register Bit Widths for HDVCAP_BUF_B_SIZE */
	#define BWID_HDVCAP_BUF_B_SIZE_BUF_B_SIZE_IN_BYTES	32
	/* Register Bit MASKS for HDVCAP_BUF_B_SIZE */
	#define BMSK_HDVCAP_BUF_B_SIZE_BUF_B_SIZE_IN_BYTES	0x00000000 /*  */
	/* Register BITFIELD for HDVCAP_BUF_B_SIZE - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_BUF_B_SIZE_BUF_B_SIZE_IN_BYTES	 0x003c, 0, 32, 0x00000000
#define ROFF_HDVCAP_TS_CTL	0x40 /*  */ 
	#define BITFIELD_HDVCAP_TS_CTL	 0x0040, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_TS_CTL */
	#define BLSB_HDVCAP_TS_CTL_RESERVED	1
	#define BLSB_HDVCAP_TS_CTL_LOAD_TS_COUNTER	0
	/* Register Bit Widths for HDVCAP_TS_CTL */
	#define BWID_HDVCAP_TS_CTL_RESERVED	31
	#define BWID_HDVCAP_TS_CTL_LOAD_TS_COUNTER	1
	/* Register Bit MASKS for HDVCAP_TS_CTL */
	#define BMSK_HDVCAP_TS_CTL_RESERVED	0xfffffffe /*  */
	#define BMSK_HDVCAP_TS_CTL_LOAD_TS_COUNTER	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for HDVCAP_TS_CTL - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_TS_CTL_RESERVED	 0x0040, 1, 31, 0xfffffffe
	#define BITFIELD_HDVCAP_TS_CTL_LOAD_TS_COUNTER	 0x0040, 0, 1, 0x00000001
#define ROFF_HDVCAP_TS_PRELOAD_LSB	0x44 /*  */ 
	#define BITFIELD_HDVCAP_TS_PRELOAD_LSB	 0x0044, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_TS_PRELOAD_LSB */
	#define BLSB_HDVCAP_TS_PRELOAD_LSB_TS_PRELOAD_COUNTER_LSB	0
	/* Register Bit Widths for HDVCAP_TS_PRELOAD_LSB */
	#define BWID_HDVCAP_TS_PRELOAD_LSB_TS_PRELOAD_COUNTER_LSB	32
	/* Register Bit MASKS for HDVCAP_TS_PRELOAD_LSB */
	#define BMSK_HDVCAP_TS_PRELOAD_LSB_TS_PRELOAD_COUNTER_LSB	0x00000000 /*  */
	/* Register BITFIELD for HDVCAP_TS_PRELOAD_LSB - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_TS_PRELOAD_LSB_TS_PRELOAD_COUNTER_LSB	 0x0044, 0, 32, 0x00000000
#define ROFF_HDVCAP_TS_PRELOAD_MSB	0x48 /*  */ 
	#define BITFIELD_HDVCAP_TS_PRELOAD_MSB	 0x0048, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_TS_PRELOAD_MSB */
	#define BLSB_HDVCAP_TS_PRELOAD_MSB_RESERVED	1
	#define BLSB_HDVCAP_TS_PRELOAD_MSB_TS_PRELOAD_COUNTER_MSB	0
	/* Register Bit Widths for HDVCAP_TS_PRELOAD_MSB */
	#define BWID_HDVCAP_TS_PRELOAD_MSB_RESERVED	31
	#define BWID_HDVCAP_TS_PRELOAD_MSB_TS_PRELOAD_COUNTER_MSB	1
	/* Register Bit MASKS for HDVCAP_TS_PRELOAD_MSB */
	#define BMSK_HDVCAP_TS_PRELOAD_MSB_RESERVED	0xfffffffe /*  */
	#define BMSK_HDVCAP_TS_PRELOAD_MSB_TS_PRELOAD_COUNTER_MSB	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for HDVCAP_TS_PRELOAD_MSB - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_TS_PRELOAD_MSB_RESERVED	 0x0048, 1, 31, 0xfffffffe
	#define BITFIELD_HDVCAP_TS_PRELOAD_MSB_TS_PRELOAD_COUNTER_MSB	 0x0048, 0, 1, 0x00000001
#define ROFF_HDVCAP_TS_LSB	0x4c /*  */ 
	#define BITFIELD_HDVCAP_TS_LSB	 0x004c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_TS_LSB */
	#define BLSB_HDVCAP_TS_LSB_CAP_TS_LSB_0	0
	/* Register Bit Widths for HDVCAP_TS_LSB */
	#define BWID_HDVCAP_TS_LSB_CAP_TS_LSB_0	32
	/* Register Bit MASKS for HDVCAP_TS_LSB */
	#define BMSK_HDVCAP_TS_LSB_CAP_TS_LSB_0	0x00000000 /*  */
	/* Register BITFIELD for HDVCAP_TS_LSB - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_TS_LSB_CAP_TS_LSB_0	 0x004c, 0, 32, 0x00000000
#define ROFF_HDVCAP_TS_MSB	0x50 /*  */ 
	#define BITFIELD_HDVCAP_TS_MSB	 0x0050, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_TS_MSB */
	#define BLSB_HDVCAP_TS_MSB_RESERVED	1
	#define BLSB_HDVCAP_TS_MSB_CAP_TS_MSB_0	0
	/* Register Bit Widths for HDVCAP_TS_MSB */
	#define BWID_HDVCAP_TS_MSB_RESERVED	31
	#define BWID_HDVCAP_TS_MSB_CAP_TS_MSB_0	1
	/* Register Bit MASKS for HDVCAP_TS_MSB */
	#define BMSK_HDVCAP_TS_MSB_RESERVED	0xfffffffe /*  */
	#define BMSK_HDVCAP_TS_MSB_CAP_TS_MSB_0	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for HDVCAP_TS_MSB - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_TS_MSB_RESERVED	 0x0050, 1, 31, 0xfffffffe
	#define BITFIELD_HDVCAP_TS_MSB_CAP_TS_MSB_0	 0x0050, 0, 1, 0x00000001
#define ROFF_HDVCAP_TS_LSB_1	0x54 /*  */ 
	#define BITFIELD_HDVCAP_TS_LSB_1	 0x0054, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_TS_LSB_1 */
	#define BLSB_HDVCAP_TS_LSB_1_CAP_TS_LSB_1	0
	/* Register Bit Widths for HDVCAP_TS_LSB_1 */
	#define BWID_HDVCAP_TS_LSB_1_CAP_TS_LSB_1	32
	/* Register Bit MASKS for HDVCAP_TS_LSB_1 */
	#define BMSK_HDVCAP_TS_LSB_1_CAP_TS_LSB_1	0x00000000 /*  */
	/* Register BITFIELD for HDVCAP_TS_LSB_1 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_TS_LSB_1_CAP_TS_LSB_1	 0x0054, 0, 32, 0x00000000
#define ROFF_HDVCAP_TS_MSB_1	0x58 /*  */ 
	#define BITFIELD_HDVCAP_TS_MSB_1	 0x0058, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_TS_MSB_1 */
	#define BLSB_HDVCAP_TS_MSB_1_RESERVED	1
	#define BLSB_HDVCAP_TS_MSB_1_CAP_TS_MSB_1	0
	/* Register Bit Widths for HDVCAP_TS_MSB_1 */
	#define BWID_HDVCAP_TS_MSB_1_RESERVED	31
	#define BWID_HDVCAP_TS_MSB_1_CAP_TS_MSB_1	1
	/* Register Bit MASKS for HDVCAP_TS_MSB_1 */
	#define BMSK_HDVCAP_TS_MSB_1_RESERVED	0xfffffffe /*  */
	#define BMSK_HDVCAP_TS_MSB_1_CAP_TS_MSB_1	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for HDVCAP_TS_MSB_1 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_TS_MSB_1_RESERVED	 0x0058, 1, 31, 0xfffffffe
	#define BITFIELD_HDVCAP_TS_MSB_1_CAP_TS_MSB_1	 0x0058, 0, 1, 0x00000001
#define ROFF_HDVCAP_TS_COUNTER_LSB	0x5c /*  */ 
	#define BITFIELD_HDVCAP_TS_COUNTER_LSB	 0x005c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_TS_COUNTER_LSB */
	#define BLSB_HDVCAP_TS_COUNTER_LSB_CAP_TS_LSB_1	0
	/* Register Bit Widths for HDVCAP_TS_COUNTER_LSB */
	#define BWID_HDVCAP_TS_COUNTER_LSB_CAP_TS_LSB_1	32
	/* Register Bit MASKS for HDVCAP_TS_COUNTER_LSB */
	#define BMSK_HDVCAP_TS_COUNTER_LSB_CAP_TS_LSB_1	0x00000000 /*  */
	/* Register BITFIELD for HDVCAP_TS_COUNTER_LSB - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_TS_COUNTER_LSB_CAP_TS_LSB_1	 0x005c, 0, 32, 0x00000000
#define ROFF_HDVCAP_TS_COUNTER_MSB	0x60 /*  */ 
	#define BITFIELD_HDVCAP_TS_COUNTER_MSB	 0x0060, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_TS_COUNTER_MSB */
	#define BLSB_HDVCAP_TS_COUNTER_MSB_RESERVED	1
	#define BLSB_HDVCAP_TS_COUNTER_MSB_REALTIME_TS_COUNTER_VAL_MSB	0
	/* Register Bit Widths for HDVCAP_TS_COUNTER_MSB */
	#define BWID_HDVCAP_TS_COUNTER_MSB_RESERVED	31
	#define BWID_HDVCAP_TS_COUNTER_MSB_REALTIME_TS_COUNTER_VAL_MSB	1
	/* Register Bit MASKS for HDVCAP_TS_COUNTER_MSB */
	#define BMSK_HDVCAP_TS_COUNTER_MSB_RESERVED	0xfffffffe /*  */
	#define BMSK_HDVCAP_TS_COUNTER_MSB_REALTIME_TS_COUNTER_VAL_MSB	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for HDVCAP_TS_COUNTER_MSB - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_TS_COUNTER_MSB_RESERVED	 0x0060, 1, 31, 0xfffffffe
	#define BITFIELD_HDVCAP_TS_COUNTER_MSB_REALTIME_TS_COUNTER_VAL_MSB	 0x0060, 0, 1, 0x00000001
#define ROFF_HDVCAP_CSC_C	0x64 /*  */ 
	#define BITFIELD_HDVCAP_CSC_C	 0x0064, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_CSC_C */
	#define BLSB_HDVCAP_CSC_C_RESERVED	6
	#define BLSB_HDVCAP_CSC_C_VAL_SHIFT_FACTOR	5
	#define BLSB_HDVCAP_CSC_C_VAL_SHIFT_EN	4
	#define BLSB_HDVCAP_CSC_C_C_OCLAMP_SEL	3
	#define BLSB_HDVCAP_CSC_C_EN_OCLAMP	2
	#define BLSB_HDVCAP_CSC_C_C_ICLAMP_SEL	1
	#define BLSB_HDVCAP_CSC_C_EN_ICLAMP	0
	/* Register Bit Widths for HDVCAP_CSC_C */
	#define BWID_HDVCAP_CSC_C_RESERVED	26
	#define BWID_HDVCAP_CSC_C_VAL_SHIFT_FACTOR	1
	#define BWID_HDVCAP_CSC_C_VAL_SHIFT_EN	1
	#define BWID_HDVCAP_CSC_C_C_OCLAMP_SEL	1
	#define BWID_HDVCAP_CSC_C_EN_OCLAMP	1
	#define BWID_HDVCAP_CSC_C_C_ICLAMP_SEL	1
	#define BWID_HDVCAP_CSC_C_EN_ICLAMP	1
	/* Register Bit MASKS for HDVCAP_CSC_C */
	#define BMSK_HDVCAP_CSC_C_RESERVED	0xffffffc0 /*  */
	#define BMSK_HDVCAP_CSC_C_VAL_SHIFT_FACTOR	(1<<5) /* == 0x00000020:  */
	#define BMSK_HDVCAP_CSC_C_VAL_SHIFT_EN	(1<<4) /* == 0x00000010:  */
	#define BMSK_HDVCAP_CSC_C_C_OCLAMP_SEL	(1<<3) /* == 0x00000008:  */
	#define BMSK_HDVCAP_CSC_C_EN_OCLAMP	(1<<2) /* == 0x00000004:  */
	#define BMSK_HDVCAP_CSC_C_C_ICLAMP_SEL	(1<<1) /* == 0x00000002:  */
	#define BMSK_HDVCAP_CSC_C_EN_ICLAMP	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for HDVCAP_CSC_C - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_CSC_C_RESERVED	 0x0064, 6, 26, 0xffffffc0
	#define BITFIELD_HDVCAP_CSC_C_VAL_SHIFT_FACTOR	 0x0064, 5, 1, 0x00000020
	#define BITFIELD_HDVCAP_CSC_C_VAL_SHIFT_EN	 0x0064, 4, 1, 0x00000010
	#define BITFIELD_HDVCAP_CSC_C_C_OCLAMP_SEL	 0x0064, 3, 1, 0x00000008
	#define BITFIELD_HDVCAP_CSC_C_EN_OCLAMP	 0x0064, 2, 1, 0x00000004
	#define BITFIELD_HDVCAP_CSC_C_C_ICLAMP_SEL	 0x0064, 1, 1, 0x00000002
	#define BITFIELD_HDVCAP_CSC_C_EN_ICLAMP	 0x0064, 0, 1, 0x00000001
#define ROFF_HDVCAP_CSC_YG	0x68 /*  */ 
	#define BITFIELD_HDVCAP_CSC_YG	 0x0068, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_CSC_YG */
	#define BLSB_HDVCAP_CSC_YG_RESERVED	29
	#define BLSB_HDVCAP_CSC_YG_YG_OOFF	16
	#define BLSB_HDVCAP_CSC_YG_UNUSED	13
	#define BLSB_HDVCAP_CSC_YG_YG_IOFF	0
	/* Register Bit Widths for HDVCAP_CSC_YG */
	#define BWID_HDVCAP_CSC_YG_RESERVED	3
	#define BWID_HDVCAP_CSC_YG_YG_OOFF	13
	#define BWID_HDVCAP_CSC_YG_UNUSED	3
	#define BWID_HDVCAP_CSC_YG_YG_IOFF	13
	/* Register Bit MASKS for HDVCAP_CSC_YG */
	#define BMSK_HDVCAP_CSC_YG_RESERVED	0xe0000000 /*  */
	#define BMSK_HDVCAP_CSC_YG_YG_OOFF	0x1fff0000 /*  */
	#define BMSK_HDVCAP_CSC_YG_UNUSED	0x0000e000 /*  */
	#define BMSK_HDVCAP_CSC_YG_YG_IOFF	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_CSC_YG - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_CSC_YG_RESERVED	 0x0068, 29, 3, 0xe0000000
	#define BITFIELD_HDVCAP_CSC_YG_YG_OOFF	 0x0068, 16, 13, 0x1fff0000
	#define BITFIELD_HDVCAP_CSC_YG_UNUSED	 0x0068, 13, 3, 0x0000e000
	#define BITFIELD_HDVCAP_CSC_YG_YG_IOFF	 0x0068, 0, 13, 0x00001fff
#define ROFF_HDVCAP_CSC_CB	0x6c /*  */ 
	#define BITFIELD_HDVCAP_CSC_CB	 0x006c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_CSC_CB */
	#define BLSB_HDVCAP_CSC_CB_RESERVED	29
	#define BLSB_HDVCAP_CSC_CB_CB_OOFF	16
	#define BLSB_HDVCAP_CSC_CB_UNUSED	13
	#define BLSB_HDVCAP_CSC_CB_CB_IOFF	0
	/* Register Bit Widths for HDVCAP_CSC_CB */
	#define BWID_HDVCAP_CSC_CB_RESERVED	3
	#define BWID_HDVCAP_CSC_CB_CB_OOFF	13
	#define BWID_HDVCAP_CSC_CB_UNUSED	3
	#define BWID_HDVCAP_CSC_CB_CB_IOFF	13
	/* Register Bit MASKS for HDVCAP_CSC_CB */
	#define BMSK_HDVCAP_CSC_CB_RESERVED	0xe0000000 /*  */
	#define BMSK_HDVCAP_CSC_CB_CB_OOFF	0x1fff0000 /*  */
	#define BMSK_HDVCAP_CSC_CB_UNUSED	0x0000e000 /*  */
	#define BMSK_HDVCAP_CSC_CB_CB_IOFF	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_CSC_CB - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_CSC_CB_RESERVED	 0x006c, 29, 3, 0xe0000000
	#define BITFIELD_HDVCAP_CSC_CB_CB_OOFF	 0x006c, 16, 13, 0x1fff0000
	#define BITFIELD_HDVCAP_CSC_CB_UNUSED	 0x006c, 13, 3, 0x0000e000
	#define BITFIELD_HDVCAP_CSC_CB_CB_IOFF	 0x006c, 0, 13, 0x00001fff
#define ROFF_HDVCAP_CSC_CR	0x70 /*  */ 
	#define BITFIELD_HDVCAP_CSC_CR	 0x0070, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_CSC_CR */
	#define BLSB_HDVCAP_CSC_CR_RESERVED	29
	#define BLSB_HDVCAP_CSC_CR_CB_OOFF	16
	#define BLSB_HDVCAP_CSC_CR_UNUSED	13
	#define BLSB_HDVCAP_CSC_CR_CB_IOFF	0
	/* Register Bit Widths for HDVCAP_CSC_CR */
	#define BWID_HDVCAP_CSC_CR_RESERVED	3
	#define BWID_HDVCAP_CSC_CR_CB_OOFF	13
	#define BWID_HDVCAP_CSC_CR_UNUSED	3
	#define BWID_HDVCAP_CSC_CR_CB_IOFF	13
	/* Register Bit MASKS for HDVCAP_CSC_CR */
	#define BMSK_HDVCAP_CSC_CR_RESERVED	0xe0000000 /*  */
	#define BMSK_HDVCAP_CSC_CR_CB_OOFF	0x1fff0000 /*  */
	#define BMSK_HDVCAP_CSC_CR_UNUSED	0x0000e000 /*  */
	#define BMSK_HDVCAP_CSC_CR_CB_IOFF	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_CSC_CR - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_CSC_CR_RESERVED	 0x0070, 29, 3, 0xe0000000
	#define BITFIELD_HDVCAP_CSC_CR_CB_OOFF	 0x0070, 16, 13, 0x1fff0000
	#define BITFIELD_HDVCAP_CSC_CR_UNUSED	 0x0070, 13, 3, 0x0000e000
	#define BITFIELD_HDVCAP_CSC_CR_CB_IOFF	 0x0070, 0, 13, 0x00001fff
#define ROFF_HDVCAP_CSC_C01	0x74 /*  */ 
	#define BITFIELD_HDVCAP_CSC_C01	 0x0074, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_CSC_C01 */
	#define BLSB_HDVCAP_CSC_C01_RESERVED	29
	#define BLSB_HDVCAP_CSC_C01_C1	16
	#define BLSB_HDVCAP_CSC_C01_UNUSED	13
	#define BLSB_HDVCAP_CSC_C01_C0	0
	/* Register Bit Widths for HDVCAP_CSC_C01 */
	#define BWID_HDVCAP_CSC_C01_RESERVED	3
	#define BWID_HDVCAP_CSC_C01_C1	13
	#define BWID_HDVCAP_CSC_C01_UNUSED	3
	#define BWID_HDVCAP_CSC_C01_C0	13
	/* Register Bit MASKS for HDVCAP_CSC_C01 */
	#define BMSK_HDVCAP_CSC_C01_RESERVED	0xe0000000 /*  */
	#define BMSK_HDVCAP_CSC_C01_C1	0x1fff0000 /*  */
	#define BMSK_HDVCAP_CSC_C01_UNUSED	0x0000e000 /*  */
	#define BMSK_HDVCAP_CSC_C01_C0	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_CSC_C01 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_CSC_C01_RESERVED	 0x0074, 29, 3, 0xe0000000
	#define BITFIELD_HDVCAP_CSC_C01_C1	 0x0074, 16, 13, 0x1fff0000
	#define BITFIELD_HDVCAP_CSC_C01_UNUSED	 0x0074, 13, 3, 0x0000e000
	#define BITFIELD_HDVCAP_CSC_C01_C0	 0x0074, 0, 13, 0x00001fff
#define ROFF_HDVCAP_CSC_C23	0x78 /*  */ 
	#define BITFIELD_HDVCAP_CSC_C23	 0x0078, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_CSC_C23 */
	#define BLSB_HDVCAP_CSC_C23_RESERVED	29
	#define BLSB_HDVCAP_CSC_C23_C3	16
	#define BLSB_HDVCAP_CSC_C23_UNUSED	13
	#define BLSB_HDVCAP_CSC_C23_C2	0
	/* Register Bit Widths for HDVCAP_CSC_C23 */
	#define BWID_HDVCAP_CSC_C23_RESERVED	3
	#define BWID_HDVCAP_CSC_C23_C3	13
	#define BWID_HDVCAP_CSC_C23_UNUSED	3
	#define BWID_HDVCAP_CSC_C23_C2	13
	/* Register Bit MASKS for HDVCAP_CSC_C23 */
	#define BMSK_HDVCAP_CSC_C23_RESERVED	0xe0000000 /*  */
	#define BMSK_HDVCAP_CSC_C23_C3	0x1fff0000 /*  */
	#define BMSK_HDVCAP_CSC_C23_UNUSED	0x0000e000 /*  */
	#define BMSK_HDVCAP_CSC_C23_C2	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_CSC_C23 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_CSC_C23_RESERVED	 0x0078, 29, 3, 0xe0000000
	#define BITFIELD_HDVCAP_CSC_C23_C3	 0x0078, 16, 13, 0x1fff0000
	#define BITFIELD_HDVCAP_CSC_C23_UNUSED	 0x0078, 13, 3, 0x0000e000
	#define BITFIELD_HDVCAP_CSC_C23_C2	 0x0078, 0, 13, 0x00001fff
#define ROFF_HDVCAP_CSC_C45	0x7c /*  */ 
	#define BITFIELD_HDVCAP_CSC_C45	 0x007c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_CSC_C45 */
	#define BLSB_HDVCAP_CSC_C45_RESERVED	29
	#define BLSB_HDVCAP_CSC_C45_C5	16
	#define BLSB_HDVCAP_CSC_C45_UNUSED	13
	#define BLSB_HDVCAP_CSC_C45_C4	0
	/* Register Bit Widths for HDVCAP_CSC_C45 */
	#define BWID_HDVCAP_CSC_C45_RESERVED	3
	#define BWID_HDVCAP_CSC_C45_C5	13
	#define BWID_HDVCAP_CSC_C45_UNUSED	3
	#define BWID_HDVCAP_CSC_C45_C4	13
	/* Register Bit MASKS for HDVCAP_CSC_C45 */
	#define BMSK_HDVCAP_CSC_C45_RESERVED	0xe0000000 /*  */
	#define BMSK_HDVCAP_CSC_C45_C5	0x1fff0000 /*  */
	#define BMSK_HDVCAP_CSC_C45_UNUSED	0x0000e000 /*  */
	#define BMSK_HDVCAP_CSC_C45_C4	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_CSC_C45 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_CSC_C45_RESERVED	 0x007c, 29, 3, 0xe0000000
	#define BITFIELD_HDVCAP_CSC_C45_C5	 0x007c, 16, 13, 0x1fff0000
	#define BITFIELD_HDVCAP_CSC_C45_UNUSED	 0x007c, 13, 3, 0x0000e000
	#define BITFIELD_HDVCAP_CSC_C45_C4	 0x007c, 0, 13, 0x00001fff
#define ROFF_HDVCAP_CSC_C67	0x80 /*  */ 
	#define BITFIELD_HDVCAP_CSC_C67	 0x0080, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_CSC_C67 */
	#define BLSB_HDVCAP_CSC_C67_RESERVED	29
	#define BLSB_HDVCAP_CSC_C67_C7	16
	#define BLSB_HDVCAP_CSC_C67_UNUSED	13
	#define BLSB_HDVCAP_CSC_C67_C6	0
	/* Register Bit Widths for HDVCAP_CSC_C67 */
	#define BWID_HDVCAP_CSC_C67_RESERVED	3
	#define BWID_HDVCAP_CSC_C67_C7	13
	#define BWID_HDVCAP_CSC_C67_UNUSED	3
	#define BWID_HDVCAP_CSC_C67_C6	13
	/* Register Bit MASKS for HDVCAP_CSC_C67 */
	#define BMSK_HDVCAP_CSC_C67_RESERVED	0xe0000000 /*  */
	#define BMSK_HDVCAP_CSC_C67_C7	0x1fff0000 /*  */
	#define BMSK_HDVCAP_CSC_C67_UNUSED	0x0000e000 /*  */
	#define BMSK_HDVCAP_CSC_C67_C6	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_CSC_C67 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_CSC_C67_RESERVED	 0x0080, 29, 3, 0xe0000000
	#define BITFIELD_HDVCAP_CSC_C67_C7	 0x0080, 16, 13, 0x1fff0000
	#define BITFIELD_HDVCAP_CSC_C67_UNUSED	 0x0080, 13, 3, 0x0000e000
	#define BITFIELD_HDVCAP_CSC_C67_C6	 0x0080, 0, 13, 0x00001fff
#define ROFF_HDVCAP_CSC_C8	0x84 /*  */ 
	#define BITFIELD_HDVCAP_CSC_C8	 0x0084, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_CSC_C8 */
	#define BLSB_HDVCAP_CSC_C8_RESERVED	13
	#define BLSB_HDVCAP_CSC_C8_C8	0
	/* Register Bit Widths for HDVCAP_CSC_C8 */
	#define BWID_HDVCAP_CSC_C8_RESERVED	19
	#define BWID_HDVCAP_CSC_C8_C8	13
	/* Register Bit MASKS for HDVCAP_CSC_C8 */
	#define BMSK_HDVCAP_CSC_C8_RESERVED	0xffffe000 /*  */
	#define BMSK_HDVCAP_CSC_C8_C8	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_CSC_C8 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_CSC_C8_RESERVED	 0x0084, 13, 19, 0xffffe000
	#define BITFIELD_HDVCAP_CSC_C8_C8	 0x0084, 0, 13, 0x00001fff
#define ROFF_HDVCAP_FILTER_C01	0x88 /*  */ 
	#define BITFIELD_HDVCAP_FILTER_C01	 0x0088, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_FILTER_C01 */
	#define BLSB_HDVCAP_FILTER_C01_RESERVED	26
	#define BLSB_HDVCAP_FILTER_C01_C1	16
	#define BLSB_HDVCAP_FILTER_C01_UNUSED	10
	#define BLSB_HDVCAP_FILTER_C01_C0	0
	/* Register Bit Widths for HDVCAP_FILTER_C01 */
	#define BWID_HDVCAP_FILTER_C01_RESERVED	6
	#define BWID_HDVCAP_FILTER_C01_C1	10
	#define BWID_HDVCAP_FILTER_C01_UNUSED	6
	#define BWID_HDVCAP_FILTER_C01_C0	10
	/* Register Bit MASKS for HDVCAP_FILTER_C01 */
	#define BMSK_HDVCAP_FILTER_C01_RESERVED	0xfc000000 /*  */
	#define BMSK_HDVCAP_FILTER_C01_C1	0x03ff0000 /*  */
	#define BMSK_HDVCAP_FILTER_C01_UNUSED	0x0000fc00 /*  */
	#define BMSK_HDVCAP_FILTER_C01_C0	0x000003ff /*  */
	/* Register BITFIELD for HDVCAP_FILTER_C01 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_FILTER_C01_RESERVED	 0x0088, 26, 6, 0xfc000000
	#define BITFIELD_HDVCAP_FILTER_C01_C1	 0x0088, 16, 10, 0x03ff0000
	#define BITFIELD_HDVCAP_FILTER_C01_UNUSED	 0x0088, 10, 6, 0x0000fc00
	#define BITFIELD_HDVCAP_FILTER_C01_C0	 0x0088, 0, 10, 0x000003ff
#define ROFF_HDVCAP_FILTER_C23	0x8c /*  */ 
	#define BITFIELD_HDVCAP_FILTER_C23	 0x008c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_FILTER_C23 */
	#define BLSB_HDVCAP_FILTER_C23_RESERVED	26
	#define BLSB_HDVCAP_FILTER_C23_C3	16
	#define BLSB_HDVCAP_FILTER_C23_UNUSED	10
	#define BLSB_HDVCAP_FILTER_C23_C2	0
	/* Register Bit Widths for HDVCAP_FILTER_C23 */
	#define BWID_HDVCAP_FILTER_C23_RESERVED	6
	#define BWID_HDVCAP_FILTER_C23_C3	10
	#define BWID_HDVCAP_FILTER_C23_UNUSED	6
	#define BWID_HDVCAP_FILTER_C23_C2	10
	/* Register Bit MASKS for HDVCAP_FILTER_C23 */
	#define BMSK_HDVCAP_FILTER_C23_RESERVED	0xfc000000 /*  */
	#define BMSK_HDVCAP_FILTER_C23_C3	0x03ff0000 /*  */
	#define BMSK_HDVCAP_FILTER_C23_UNUSED	0x0000fc00 /*  */
	#define BMSK_HDVCAP_FILTER_C23_C2	0x000003ff /*  */
	/* Register BITFIELD for HDVCAP_FILTER_C23 - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_FILTER_C23_RESERVED	 0x008c, 26, 6, 0xfc000000
	#define BITFIELD_HDVCAP_FILTER_C23_C3	 0x008c, 16, 10, 0x03ff0000
	#define BITFIELD_HDVCAP_FILTER_C23_UNUSED	 0x008c, 10, 6, 0x0000fc00
	#define BITFIELD_HDVCAP_FILTER_C23_C2	 0x008c, 0, 10, 0x000003ff
#define ROFF_HDVCAP_PRNGSR	0x90 /*  */ 
	#define BITFIELD_HDVCAP_PRNGSR	 0x0090, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_PRNGSR */
	#define BLSB_HDVCAP_PRNGSR_RESERVED	30
	#define BLSB_HDVCAP_PRNGSR_PRNG_SEED2	16
	#define BLSB_HDVCAP_PRNGSR_UNUSED	13
	#define BLSB_HDVCAP_PRNGSR_PRNG_SEED1	0
	/* Register Bit Widths for HDVCAP_PRNGSR */
	#define BWID_HDVCAP_PRNGSR_RESERVED	2
	#define BWID_HDVCAP_PRNGSR_PRNG_SEED2	13
	#define BWID_HDVCAP_PRNGSR_UNUSED	3
	#define BWID_HDVCAP_PRNGSR_PRNG_SEED1	13
	/* Register Bit MASKS for HDVCAP_PRNGSR */
	#define BMSK_HDVCAP_PRNGSR_RESERVED	0xc0000000 /*  */
	#define BMSK_HDVCAP_PRNGSR_PRNG_SEED2	0x1fff0000 /*  */
	#define BMSK_HDVCAP_PRNGSR_UNUSED	0x0000e000 /*  */
	#define BMSK_HDVCAP_PRNGSR_PRNG_SEED1	0x00001fff /*  */
	/* Register BITFIELD for HDVCAP_PRNGSR - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_PRNGSR_RESERVED	 0x0090, 30, 2, 0xc0000000
	#define BITFIELD_HDVCAP_PRNGSR_PRNG_SEED2	 0x0090, 16, 13, 0x1fff0000
	#define BITFIELD_HDVCAP_PRNGSR_UNUSED	 0x0090, 13, 3, 0x0000e000
	#define BITFIELD_HDVCAP_PRNGSR_PRNG_SEED1	 0x0090, 0, 13, 0x00001fff
#define ROFF_HDVCAP_STAT_TOTAL	0x94 /*  */ 
	#define BITFIELD_HDVCAP_STAT_TOTAL	 0x0094, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_STAT_TOTAL */
	#define BLSB_HDVCAP_STAT_TOTAL_PIXEL_PER_FRAME	16
	#define BLSB_HDVCAP_STAT_TOTAL_PIXEL_PER_LINE	0
	/* Register Bit Widths for HDVCAP_STAT_TOTAL */
	#define BWID_HDVCAP_STAT_TOTAL_PIXEL_PER_FRAME	16
	#define BWID_HDVCAP_STAT_TOTAL_PIXEL_PER_LINE	16
	/* Register Bit MASKS for HDVCAP_STAT_TOTAL */
	#define BMSK_HDVCAP_STAT_TOTAL_PIXEL_PER_FRAME	0xffff0000 /*  */
	#define BMSK_HDVCAP_STAT_TOTAL_PIXEL_PER_LINE	0x0000ffff /*  */
	/* Register BITFIELD for HDVCAP_STAT_TOTAL - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_STAT_TOTAL_PIXEL_PER_FRAME	 0x0094, 16, 16, 0xffff0000
	#define BITFIELD_HDVCAP_STAT_TOTAL_PIXEL_PER_LINE	 0x0094, 0, 16, 0x0000ffff
#define ROFF_HDVCAP_STAT_ACTIVE	0x98 /*  */ 
	#define BITFIELD_HDVCAP_STAT_ACTIVE	 0x0098, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for HDVCAP_STAT_ACTIVE */
	#define BLSB_HDVCAP_STAT_ACTIVE_PIXEL_PER_FRAME	16
	#define BLSB_HDVCAP_STAT_ACTIVE_PIXEL_PER_LINE	0
	/* Register Bit Widths for HDVCAP_STAT_ACTIVE */
	#define BWID_HDVCAP_STAT_ACTIVE_PIXEL_PER_FRAME	16
	#define BWID_HDVCAP_STAT_ACTIVE_PIXEL_PER_LINE	16
	/* Register Bit MASKS for HDVCAP_STAT_ACTIVE */
	#define BMSK_HDVCAP_STAT_ACTIVE_PIXEL_PER_FRAME	0xffff0000 /*  */
	#define BMSK_HDVCAP_STAT_ACTIVE_PIXEL_PER_LINE	0x0000ffff /*  */
	/* Register BITFIELD for HDVCAP_STAT_ACTIVE - roff, lsb, width, mask */
	#define BITFIELD_HDVCAP_STAT_ACTIVE_PIXEL_PER_FRAME	 0x0098, 16, 16, 0xffff0000
	#define BITFIELD_HDVCAP_STAT_ACTIVE_PIXEL_PER_LINE	 0x0098, 0, 16, 0x0000ffff


/* Module HDVCAP SPECIFIC SVEN Events */


#define SVEN_MODULE_EVENT_HDVCAP_IN_DEQUEUE	0x64
#define SVEN_MODULE_EVENT_HDVCAP_OUT_ENQUEUE	0x65
#define SVEN_MODULE_EVENT_HDVCAP_CONTENT_TIME_GAP	0x66
#define SVEN_MODULE_EVENT_HDVCAP_CLOSE	0x68
#define SVEN_MODULE_EVENT_HDVCAP_STATE_CHANGE	0x6b
#define SVEN_MODULE_EVENT_HDVCAP_FLUSH_START	0x6c
#define SVEN_MODULE_EVENT_HDVCAP_FLUSH_COMPLETE	0x6d
#define SVEN_MODULE_EVENT_HDVCAP_NEW_SEG_IN	0x6e
#define SVEN_MODULE_EVENT_HDVCAP_NEW_SEG_OUT	0x6f
#define SVEN_MODULE_EVENT_HDVCAP_OPEN	0x67
#define SVEN_MODULE_EVENT_HDVCAP_PORT_WRITE_FAILED	0x1
#define SVEN_MODULE_EVENT_HDVCAP_VIDEO_MODE_CHANGE	0x2
#define SVEN_MODULE_EVENT_HDVCAP_AUDIO_MODE_CHANGE	0x3
#define SVEN_MODULE_EVENT_HDVCAP_FRAME_RX	0x4
#define SVEN_MODULE_EVENT_HDVCAP_PLAY	0x5
#define SVEN_MODULE_EVENT_HDVCAP_STOP	0x6
#define SVEN_MODULE_EVENT_HDVCAP_SUBMIT_VIDEO_BUFFER	0x7
#define SVEN_MODULE_EVENT_HDVCAP_SUBMIT_AUDIO_BUFFER	0x8
#define SVEN_MODULE_EVENT_HDVCAP_NEW_SEGMENT_OUT	0x9
#define SVEN_MODULE_EVENT_HDVCAP_SUBMIT_VBI_BUFFER	0xa


#endif /* HDVCAP_REGOFFS_H */
