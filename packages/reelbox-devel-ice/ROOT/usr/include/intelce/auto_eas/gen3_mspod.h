#ifndef MSPOD_REGOFFS_H
#define MSPOD_REGOFFS_H 1
/*

  This file is provided under a dual BSD/GPLv2 license.  When using or 
  redistributing this file, you may do so under either license.

  GPL LICENSE SUMMARY

  Copyright(c) 2007-2009 Intel Corporation. All rights reserved.

  This program is free software; you can redistribute it and/or modify 
  it under the terms of version 2 of the GNU General Public License as
  published by the Free Software Foundation.

  This program is distributed in the hope that it will be useful, but 
  WITHOUT ANY WARRANTY; without even the implied warranty of 
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
  General Public License for more details.

  You should have received a copy of the GNU General Public License 
  along with this program; if not, write to the Free Software 
  Foundation, Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
  The full GNU General Public License is included in this distribution 
  in the file called LICENSE.GPL.

  Contact Information:
    Intel Corporation
    2200 Mission College Blvd.
    Santa Clara, CA  97052

  BSD LICENSE 

  Copyright(c) 2007-2009 Intel Corporation. All rights reserved.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without 
  modification, are permitted provided that the following conditions 
  are met:

    * Redistributions of source code must retain the above copyright 
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright 
      notice, this list of conditions and the following disclaimer in 
      the documentation and/or other materials provided with the 
      distribution.
    * Neither the name of Intel Corporation nor the names of its 
      contributors may be used to endorse or promote products derived 
      from this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*/


/* Module MSPOD CSR Definitions */
/* WARNING: This file is Machine Generated using sven_csr.c */


#define ROFF_MSPOD_MS_HIF_CNTL	0x0 /* MS-CableCARD Host Interface Control Register */ 
	#define BITFIELD_MSPOD_MS_HIF_CNTL	 0x0000, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
#define ROFF_MSPOD_MS_HIF_STAT	0x4 /* MS-CableCARD Host Interface Status Register */ 
	#define BITFIELD_MSPOD_MS_HIF_STAT	 0x0004, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
#define ROFF_MSPOD_MS_HIF_IER	0x8 /* MS-CableCARD Host Interface Interrupt Enable Register */ 
	#define BITFIELD_MSPOD_MS_HIF_IER	 0x0008, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
#define ROFF_MSPOD_MS_HIF_ISR	0xc /* MS-CableCARD Host Interface Interrupt Status Register */ 
	#define BITFIELD_MSPOD_MS_HIF_ISR	 0x000c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
#define ROFF_MSPOD_MS_HIF_RXDROP	0x18 /* MS-CableCARD Host Interface Rx Drops */ 
	#define BITFIELD_MSPOD_MS_HIF_RXDROP	 0x0018, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
#define ROFF_MSPOD_CDMA_1394_IER	0x20 /* UDMA 1394 Interface Interrupt Enable Register */ 
	#define BITFIELD_MSPOD_CDMA_1394_IER	 0x0020, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_CDMA_1394_IER */
	#define BLSB_MSPOD_CDMA_1394_IER_RESERVED	4
	#define BLSB_MSPOD_CDMA_1394_IER_1394_OUT_LL_DN_EN	3
	#define BLSB_MSPOD_CDMA_1394_IER_1394_OUT_DN_EN	2
	#define BLSB_MSPOD_CDMA_1394_IER_1394_IN_LL_DN_EN	1
	#define BLSB_MSPOD_CDMA_1394_IER_1394_IN_DN_EN	0
	/* Register Bit Widths for MSPOD_CDMA_1394_IER */
	#define BWID_MSPOD_CDMA_1394_IER_RESERVED	28
	#define BWID_MSPOD_CDMA_1394_IER_1394_OUT_LL_DN_EN	1
	#define BWID_MSPOD_CDMA_1394_IER_1394_OUT_DN_EN	1
	#define BWID_MSPOD_CDMA_1394_IER_1394_IN_LL_DN_EN	1
	#define BWID_MSPOD_CDMA_1394_IER_1394_IN_DN_EN	1
	/* Register Bit MASKS for MSPOD_CDMA_1394_IER */
	#define BMSK_MSPOD_CDMA_1394_IER_RESERVED	0xfffffff0 /*  */
	#define BMSK_MSPOD_CDMA_1394_IER_1394_OUT_LL_DN_EN	(1<<3) /* == 0x00000008:  */
	#define BMSK_MSPOD_CDMA_1394_IER_1394_OUT_DN_EN	(1<<2) /* == 0x00000004:  */
	#define BMSK_MSPOD_CDMA_1394_IER_1394_IN_LL_DN_EN	(1<<1) /* == 0x00000002:  */
	#define BMSK_MSPOD_CDMA_1394_IER_1394_IN_DN_EN	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_CDMA_1394_IER - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_CDMA_1394_IER_RESERVED	 0x0020, 4, 28, 0xfffffff0
	#define BITFIELD_MSPOD_CDMA_1394_IER_1394_OUT_LL_DN_EN	 0x0020, 3, 1, 0x00000008
	#define BITFIELD_MSPOD_CDMA_1394_IER_1394_OUT_DN_EN	 0x0020, 2, 1, 0x00000004
	#define BITFIELD_MSPOD_CDMA_1394_IER_1394_IN_LL_DN_EN	 0x0020, 1, 1, 0x00000002
	#define BITFIELD_MSPOD_CDMA_1394_IER_1394_IN_DN_EN	 0x0020, 0, 1, 0x00000001
#define ROFF_MSPOD_CDMA_1394_ISR	0x24 /* UDMA 1394 Interface Interrupt Status Register */ 
	#define BITFIELD_MSPOD_CDMA_1394_ISR	 0x0024, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_CDMA_1394_ISR */
	#define BLSB_MSPOD_CDMA_1394_ISR_RESERVED	4
	#define BLSB_MSPOD_CDMA_1394_ISR_1394_OUT_LL_DN	3
	#define BLSB_MSPOD_CDMA_1394_ISR_1394_OUT_DN	2
	#define BLSB_MSPOD_CDMA_1394_ISR_1394_IN_LL_DN	1
	#define BLSB_MSPOD_CDMA_1394_ISR_1394_IN_DN	0
	/* Register Bit Widths for MSPOD_CDMA_1394_ISR */
	#define BWID_MSPOD_CDMA_1394_ISR_RESERVED	28
	#define BWID_MSPOD_CDMA_1394_ISR_1394_OUT_LL_DN	1
	#define BWID_MSPOD_CDMA_1394_ISR_1394_OUT_DN	1
	#define BWID_MSPOD_CDMA_1394_ISR_1394_IN_LL_DN	1
	#define BWID_MSPOD_CDMA_1394_ISR_1394_IN_DN	1
	/* Register Bit MASKS for MSPOD_CDMA_1394_ISR */
	#define BMSK_MSPOD_CDMA_1394_ISR_RESERVED	0xfffffff0 /*  */
	#define BMSK_MSPOD_CDMA_1394_ISR_1394_OUT_LL_DN	(1<<3) /* == 0x00000008:  */
	#define BMSK_MSPOD_CDMA_1394_ISR_1394_OUT_DN	(1<<2) /* == 0x00000004:  */
	#define BMSK_MSPOD_CDMA_1394_ISR_1394_IN_LL_DN	(1<<1) /* == 0x00000002:  */
	#define BMSK_MSPOD_CDMA_1394_ISR_1394_IN_DN	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_CDMA_1394_ISR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_CDMA_1394_ISR_RESERVED	 0x0024, 4, 28, 0xfffffff0
	#define BITFIELD_MSPOD_CDMA_1394_ISR_1394_OUT_LL_DN	 0x0024, 3, 1, 0x00000008
	#define BITFIELD_MSPOD_CDMA_1394_ISR_1394_OUT_DN	 0x0024, 2, 1, 0x00000004
	#define BITFIELD_MSPOD_CDMA_1394_ISR_1394_IN_LL_DN	 0x0024, 1, 1, 0x00000002
	#define BITFIELD_MSPOD_CDMA_1394_ISR_1394_IN_DN	 0x0024, 0, 1, 0x00000001
#define ROFF_MSPOD_CDMA_P2P_IER	0x28 /* UDMA P2P Interrupt Enable Register */ 
	#define BITFIELD_MSPOD_CDMA_P2P_IER	 0x0028, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
#define ROFF_MSPOD_CDMA_P2P_ISR	0x2c /* UDMA P2P Interrupt Status Register */ 
	#define BITFIELD_MSPOD_CDMA_P2P_ISR	 0x002c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
#define ROFF_MSPOD_MSPOD_RX_CURR_DESCR	0x88 /* OFFSET 0x08  | Current Descriptor Address Pointer */ 
	#define BITFIELD_MSPOD_MSPOD_RX_CURR_DESCR	 0x0088, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_RX_CURR_DESCR */
	#define BLSB_MSPOD_MSPOD_RX_CURR_DESCR_CURDESC	0
	/* Register Bit Widths for MSPOD_MSPOD_RX_CURR_DESCR */
	#define BWID_MSPOD_MSPOD_RX_CURR_DESCR_CURDESC	32
	/* Register Bit MASKS for MSPOD_MSPOD_RX_CURR_DESCR */
	#define BMSK_MSPOD_MSPOD_RX_CURR_DESCR_CURDESC	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_RX_CURR_DESCR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_RX_CURR_DESCR_CURDESC	 0x0088, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_RX_NEXT_DESCR	0x8c /* OFFSET 0x0C  | Next Descriptor Address Pointer */ 
	#define BITFIELD_MSPOD_MSPOD_RX_NEXT_DESCR	 0x008c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_RX_NEXT_DESCR */
	#define BLSB_MSPOD_MSPOD_RX_NEXT_DESCR_NEXTDESC	2
	#define BLSB_MSPOD_MSPOD_RX_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	1
	#define BLSB_MSPOD_MSPOD_RX_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	0
	/* Register Bit Widths for MSPOD_MSPOD_RX_NEXT_DESCR */
	#define BWID_MSPOD_MSPOD_RX_NEXT_DESCR_NEXTDESC	30
	#define BWID_MSPOD_MSPOD_RX_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	1
	#define BWID_MSPOD_MSPOD_RX_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	1
	/* Register Bit MASKS for MSPOD_MSPOD_RX_NEXT_DESCR */
	#define BMSK_MSPOD_MSPOD_RX_NEXT_DESCR_NEXTDESC	0xfffffffc /*  */
	#define BMSK_MSPOD_MSPOD_RX_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	(1<<1) /* == 0x00000002:  */
	#define BMSK_MSPOD_MSPOD_RX_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_MSPOD_RX_NEXT_DESCR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_RX_NEXT_DESCR_NEXTDESC	 0x008c, 2, 30, 0xfffffffc
	#define BITFIELD_MSPOD_MSPOD_RX_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	 0x008c, 1, 1, 0x00000002
	#define BITFIELD_MSPOD_MSPOD_RX_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	 0x008c, 0, 1, 0x00000001
#define ROFF_MSPOD_MSPOD_RX_SRCDMA_START	0x90 /* OFFSET 0x10  | Start Address of the Source DMA buffer */ 
	#define BITFIELD_MSPOD_MSPOD_RX_SRCDMA_START	 0x0090, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_RX_SRCDMA_START */
	#define BLSB_MSPOD_MSPOD_RX_SRCDMA_START_SRCDMA_START	0
	/* Register Bit Widths for MSPOD_MSPOD_RX_SRCDMA_START */
	#define BWID_MSPOD_MSPOD_RX_SRCDMA_START_SRCDMA_START	32
	/* Register Bit MASKS for MSPOD_MSPOD_RX_SRCDMA_START */
	#define BMSK_MSPOD_MSPOD_RX_SRCDMA_START_SRCDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_RX_SRCDMA_START - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_RX_SRCDMA_START_SRCDMA_START	 0x0090, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_RX_DSTDMA_START	0x94 /* OFFSET 0x14  | Start Address of the Source DMA buffer */ 
	#define BITFIELD_MSPOD_MSPOD_RX_DSTDMA_START	 0x0094, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_RX_DSTDMA_START */
	#define BLSB_MSPOD_MSPOD_RX_DSTDMA_START_DSTDMA_START	0
	/* Register Bit Widths for MSPOD_MSPOD_RX_DSTDMA_START */
	#define BWID_MSPOD_MSPOD_RX_DSTDMA_START_DSTDMA_START	32
	/* Register Bit MASKS for MSPOD_MSPOD_RX_DSTDMA_START */
	#define BMSK_MSPOD_MSPOD_RX_DSTDMA_START_DSTDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_RX_DSTDMA_START - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_RX_DSTDMA_START_DSTDMA_START	 0x0094, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_RX_SRCDMA_SIZE	0x98 /* OFFSET 0x18  | Num of data bytes to be read from the source location */ 
	#define BITFIELD_MSPOD_MSPOD_RX_SRCDMA_SIZE	 0x0098, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_RX_SRCDMA_SIZE */
	#define BLSB_MSPOD_MSPOD_RX_SRCDMA_SIZE_DSTDMA_START	0
	/* Register Bit Widths for MSPOD_MSPOD_RX_SRCDMA_SIZE */
	#define BWID_MSPOD_MSPOD_RX_SRCDMA_SIZE_DSTDMA_START	32
	/* Register Bit MASKS for MSPOD_MSPOD_RX_SRCDMA_SIZE */
	#define BMSK_MSPOD_MSPOD_RX_SRCDMA_SIZE_DSTDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_RX_SRCDMA_SIZE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_RX_SRCDMA_SIZE_DSTDMA_START	 0x0098, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_RX_FLAGS_MODE	0x9c /* OFFSET 0x1C  | Miscellaneous Control/Status */ 
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE	 0x009c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_RX_FLAGS_MODE */
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_ACTIVE_DMA	31
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_INT	30
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_DST_INT	29
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_TERM	28
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_RD_SWAP_ENDIAN	27
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_WR_SWAP_ENDIAN	26
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_ENDIANISM	25
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_DST_ENDIANISM	24
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_SUBUNIT_ID	20
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_XDMA_GAP	16
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_XBURST_SZ	12
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_BURST_SZ	8
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_READ_EN	7
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_ADDR_MODE	5
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_LINK_LIST	4
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_WRITE_EN	3
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_DST_ADDR_MODE	1
	#define BLSB_MSPOD_MSPOD_RX_FLAGS_MODE_DST_LINK_LIST	0
	/* Register Bit Widths for MSPOD_MSPOD_RX_FLAGS_MODE */
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_ACTIVE_DMA	1
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_INT	1
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_DST_INT	1
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_TERM	1
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_RD_SWAP_ENDIAN	1
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_WR_SWAP_ENDIAN	1
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_ENDIANISM	1
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_DST_ENDIANISM	1
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_SUBUNIT_ID	4
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_XDMA_GAP	4
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_XBURST_SZ	4
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_BURST_SZ	4
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_READ_EN	1
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_ADDR_MODE	2
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_LINK_LIST	1
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_WRITE_EN	1
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_DST_ADDR_MODE	2
	#define BWID_MSPOD_MSPOD_RX_FLAGS_MODE_DST_LINK_LIST	1
	/* Register Bit MASKS for MSPOD_MSPOD_RX_FLAGS_MODE */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_ACTIVE_DMA	(1<<31) /* == 0x80000000:  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_INT	(1<<30) /* == 0x40000000:  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_DST_INT	(1<<29) /* == 0x20000000:  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_TERM	(1<<28) /* == 0x10000000:  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_RD_SWAP_ENDIAN	(1<<27) /* == 0x08000000:  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_WR_SWAP_ENDIAN	(1<<26) /* == 0x04000000:  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_ENDIANISM	(1<<25) /* == 0x02000000:  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_DST_ENDIANISM	(1<<24) /* == 0x01000000:  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_SUBUNIT_ID	0x00f00000 /*  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_XDMA_GAP	0x000f0000 /*  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_XBURST_SZ	0x0000f000 /*  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_BURST_SZ	0x00000f00 /*  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_READ_EN	(1<<7) /* == 0x00000080:  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_ADDR_MODE	0x00000060 /*  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_LINK_LIST	(1<<4) /* == 0x00000010:  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_WRITE_EN	(1<<3) /* == 0x00000008:  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_DST_ADDR_MODE	0x00000006 /*  */
	#define BMSK_MSPOD_MSPOD_RX_FLAGS_MODE_DST_LINK_LIST	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_MSPOD_RX_FLAGS_MODE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_ACTIVE_DMA	 0x009c, 31, 1, 0x80000000
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_INT	 0x009c, 30, 1, 0x40000000
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_DST_INT	 0x009c, 29, 1, 0x20000000
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_TERM	 0x009c, 28, 1, 0x10000000
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_RD_SWAP_ENDIAN	 0x009c, 27, 1, 0x08000000
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_WR_SWAP_ENDIAN	 0x009c, 26, 1, 0x04000000
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_ENDIANISM	 0x009c, 25, 1, 0x02000000
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_DST_ENDIANISM	 0x009c, 24, 1, 0x01000000
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_SUBUNIT_ID	 0x009c, 20, 4, 0x00f00000
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_XDMA_GAP	 0x009c, 16, 4, 0x000f0000
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_XBURST_SZ	 0x009c, 12, 4, 0x0000f000
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_BURST_SZ	 0x009c, 8, 4, 0x00000f00
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_READ_EN	 0x009c, 7, 1, 0x00000080
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_ADDR_MODE	 0x009c, 5, 2, 0x00000060
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_SRC_LINK_LIST	 0x009c, 4, 1, 0x00000010
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_WRITE_EN	 0x009c, 3, 1, 0x00000008
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_DST_ADDR_MODE	 0x009c, 1, 2, 0x00000006
	#define BITFIELD_MSPOD_MSPOD_RX_FLAGS_MODE_DST_LINK_LIST	 0x009c, 0, 1, 0x00000001
#define ROFF_MSPOD_MSPOD_RX_SRCDMA_START_A	0xa0 /* An alias of SRCDMA_START */ 
	#define BITFIELD_MSPOD_MSPOD_RX_SRCDMA_START_A	 0x00a0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_RX_SRCDMA_START_A */
	#define BLSB_MSPOD_MSPOD_RX_SRCDMA_START_A_SRCDMA_ALIAS	0
	/* Register Bit Widths for MSPOD_MSPOD_RX_SRCDMA_START_A */
	#define BWID_MSPOD_MSPOD_RX_SRCDMA_START_A_SRCDMA_ALIAS	32
	/* Register Bit MASKS for MSPOD_MSPOD_RX_SRCDMA_START_A */
	#define BMSK_MSPOD_MSPOD_RX_SRCDMA_START_A_SRCDMA_ALIAS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_RX_SRCDMA_START_A - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_RX_SRCDMA_START_A_SRCDMA_ALIAS	 0x00a0, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_RX_SRCDMA_BOT	0xa4 /* OFFSET 0x24  | Bottom-address of the source circular-buffer */ 
	#define BITFIELD_MSPOD_MSPOD_RX_SRCDMA_BOT	 0x00a4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_RX_SRCDMA_BOT */
	#define BLSB_MSPOD_MSPOD_RX_SRCDMA_BOT_SRCDMA_BOT	2
	#define BLSB_MSPOD_MSPOD_RX_SRCDMA_BOT_SRC_CIRBUF_SHARE	0
	/* Register Bit Widths for MSPOD_MSPOD_RX_SRCDMA_BOT */
	#define BWID_MSPOD_MSPOD_RX_SRCDMA_BOT_SRCDMA_BOT	30
	#define BWID_MSPOD_MSPOD_RX_SRCDMA_BOT_SRC_CIRBUF_SHARE	2
	/* Register Bit MASKS for MSPOD_MSPOD_RX_SRCDMA_BOT */
	#define BMSK_MSPOD_MSPOD_RX_SRCDMA_BOT_SRCDMA_BOT	0xfffffffc /*  */
	#define BMSK_MSPOD_MSPOD_RX_SRCDMA_BOT_SRC_CIRBUF_SHARE	0x00000003 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_RX_SRCDMA_BOT - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_RX_SRCDMA_BOT_SRCDMA_BOT	 0x00a4, 2, 30, 0xfffffffc
	#define BITFIELD_MSPOD_MSPOD_RX_SRCDMA_BOT_SRC_CIRBUF_SHARE	 0x00a4, 0, 2, 0x00000003
#define ROFF_MSPOD_MSPOD_RX_SRCDMA_TOP	0xa8 /* OFFSET 0x28  | Top-address of the source circular-buffer */ 
	#define BITFIELD_MSPOD_MSPOD_RX_SRCDMA_TOP	 0x00a8, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_RX_SRCDMA_TOP */
	#define BLSB_MSPOD_MSPOD_RX_SRCDMA_TOP_ALL_BITS	0
	/* Register Bit Widths for MSPOD_MSPOD_RX_SRCDMA_TOP */
	#define BWID_MSPOD_MSPOD_RX_SRCDMA_TOP_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_MSPOD_RX_SRCDMA_TOP */
	#define BMSK_MSPOD_MSPOD_RX_SRCDMA_TOP_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_RX_SRCDMA_TOP - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_RX_SRCDMA_TOP_ALL_BITS	 0x00a8, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_RX_DSTDMA_BOT	0xac /* OFFSET 0x2C  | Bottom-address of the destination circular-buffer */ 
	#define BITFIELD_MSPOD_MSPOD_RX_DSTDMA_BOT	 0x00ac, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_RX_DSTDMA_BOT */
	#define BLSB_MSPOD_MSPOD_RX_DSTDMA_BOT_ALL_BITS	0
	/* Register Bit Widths for MSPOD_MSPOD_RX_DSTDMA_BOT */
	#define BWID_MSPOD_MSPOD_RX_DSTDMA_BOT_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_MSPOD_RX_DSTDMA_BOT */
	#define BMSK_MSPOD_MSPOD_RX_DSTDMA_BOT_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_RX_DSTDMA_BOT - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_RX_DSTDMA_BOT_ALL_BITS	 0x00ac, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_RX_DSTDMA_TOP	0xb0 /* OFFSET 0x30  | Top-address of the destination circular-buffer */ 
	#define BITFIELD_MSPOD_MSPOD_RX_DSTDMA_TOP	 0x00b0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_RX_DSTDMA_TOP */
	#define BLSB_MSPOD_MSPOD_RX_DSTDMA_TOP_ALL_BITS	0
	/* Register Bit Widths for MSPOD_MSPOD_RX_DSTDMA_TOP */
	#define BWID_MSPOD_MSPOD_RX_DSTDMA_TOP_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_MSPOD_RX_DSTDMA_TOP */
	#define BMSK_MSPOD_MSPOD_RX_DSTDMA_TOP_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_RX_DSTDMA_TOP - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_RX_DSTDMA_TOP_ALL_BITS	 0x00b0, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_RX_DSTDMA_SIZE	0xb4 /* OFFSET 0x34  | Num of data bytes to be read from the destination location */ 
	#define BITFIELD_MSPOD_MSPOD_RX_DSTDMA_SIZE	 0x00b4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_RX_DSTDMA_SIZE */
	#define BLSB_MSPOD_MSPOD_RX_DSTDMA_SIZE_ALL_BITS	0
	/* Register Bit Widths for MSPOD_MSPOD_RX_DSTDMA_SIZE */
	#define BWID_MSPOD_MSPOD_RX_DSTDMA_SIZE_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_MSPOD_RX_DSTDMA_SIZE */
	#define BMSK_MSPOD_MSPOD_RX_DSTDMA_SIZE_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_RX_DSTDMA_SIZE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_RX_DSTDMA_SIZE_ALL_BITS	 0x00b4, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_TX_CURR_DESCR	0xc8 /* OFFSET 0x08  | Current Descriptor Address Pointer */ 
	#define BITFIELD_MSPOD_MSPOD_TX_CURR_DESCR	 0x00c8, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_TX_CURR_DESCR */
	#define BLSB_MSPOD_MSPOD_TX_CURR_DESCR_CURDESC	0
	/* Register Bit Widths for MSPOD_MSPOD_TX_CURR_DESCR */
	#define BWID_MSPOD_MSPOD_TX_CURR_DESCR_CURDESC	32
	/* Register Bit MASKS for MSPOD_MSPOD_TX_CURR_DESCR */
	#define BMSK_MSPOD_MSPOD_TX_CURR_DESCR_CURDESC	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_TX_CURR_DESCR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_TX_CURR_DESCR_CURDESC	 0x00c8, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_TX_NEXT_DESCR	0xcc /* OFFSET 0x0C  | Next Descriptor Address Pointer */ 
	#define BITFIELD_MSPOD_MSPOD_TX_NEXT_DESCR	 0x00cc, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_TX_NEXT_DESCR */
	#define BLSB_MSPOD_MSPOD_TX_NEXT_DESCR_NEXTDESC	2
	#define BLSB_MSPOD_MSPOD_TX_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	1
	#define BLSB_MSPOD_MSPOD_TX_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	0
	/* Register Bit Widths for MSPOD_MSPOD_TX_NEXT_DESCR */
	#define BWID_MSPOD_MSPOD_TX_NEXT_DESCR_NEXTDESC	30
	#define BWID_MSPOD_MSPOD_TX_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	1
	#define BWID_MSPOD_MSPOD_TX_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	1
	/* Register Bit MASKS for MSPOD_MSPOD_TX_NEXT_DESCR */
	#define BMSK_MSPOD_MSPOD_TX_NEXT_DESCR_NEXTDESC	0xfffffffc /*  */
	#define BMSK_MSPOD_MSPOD_TX_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	(1<<1) /* == 0x00000002:  */
	#define BMSK_MSPOD_MSPOD_TX_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_MSPOD_TX_NEXT_DESCR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_TX_NEXT_DESCR_NEXTDESC	 0x00cc, 2, 30, 0xfffffffc
	#define BITFIELD_MSPOD_MSPOD_TX_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	 0x00cc, 1, 1, 0x00000002
	#define BITFIELD_MSPOD_MSPOD_TX_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	 0x00cc, 0, 1, 0x00000001
#define ROFF_MSPOD_MSPOD_TX_SRCDMA_START	0xd0 /* OFFSET 0x10  | Start Address of the Source DMA buffer */ 
	#define BITFIELD_MSPOD_MSPOD_TX_SRCDMA_START	 0x00d0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_TX_SRCDMA_START */
	#define BLSB_MSPOD_MSPOD_TX_SRCDMA_START_SRCDMA_START	0
	/* Register Bit Widths for MSPOD_MSPOD_TX_SRCDMA_START */
	#define BWID_MSPOD_MSPOD_TX_SRCDMA_START_SRCDMA_START	32
	/* Register Bit MASKS for MSPOD_MSPOD_TX_SRCDMA_START */
	#define BMSK_MSPOD_MSPOD_TX_SRCDMA_START_SRCDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_TX_SRCDMA_START - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_TX_SRCDMA_START_SRCDMA_START	 0x00d0, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_TX_DSTDMA_START	0xd4 /* OFFSET 0x14  | Start Address of the Source DMA buffer */ 
	#define BITFIELD_MSPOD_MSPOD_TX_DSTDMA_START	 0x00d4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_TX_DSTDMA_START */
	#define BLSB_MSPOD_MSPOD_TX_DSTDMA_START_DSTDMA_START	0
	/* Register Bit Widths for MSPOD_MSPOD_TX_DSTDMA_START */
	#define BWID_MSPOD_MSPOD_TX_DSTDMA_START_DSTDMA_START	32
	/* Register Bit MASKS for MSPOD_MSPOD_TX_DSTDMA_START */
	#define BMSK_MSPOD_MSPOD_TX_DSTDMA_START_DSTDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_TX_DSTDMA_START - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_TX_DSTDMA_START_DSTDMA_START	 0x00d4, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_TX_SRCDMA_SIZE	0xd8 /* OFFSET 0x18  | Num of data bytes to be read from the source location */ 
	#define BITFIELD_MSPOD_MSPOD_TX_SRCDMA_SIZE	 0x00d8, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_TX_SRCDMA_SIZE */
	#define BLSB_MSPOD_MSPOD_TX_SRCDMA_SIZE_DSTDMA_START	0
	/* Register Bit Widths for MSPOD_MSPOD_TX_SRCDMA_SIZE */
	#define BWID_MSPOD_MSPOD_TX_SRCDMA_SIZE_DSTDMA_START	32
	/* Register Bit MASKS for MSPOD_MSPOD_TX_SRCDMA_SIZE */
	#define BMSK_MSPOD_MSPOD_TX_SRCDMA_SIZE_DSTDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_TX_SRCDMA_SIZE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_TX_SRCDMA_SIZE_DSTDMA_START	 0x00d8, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_TX_FLAGS_MODE	0xdc /* OFFSET 0x1C  | Miscellaneous Control/Status */ 
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE	 0x00dc, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_TX_FLAGS_MODE */
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_ACTIVE_DMA	31
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_INT	30
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_DST_INT	29
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_TERM	28
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_RD_SWAP_ENDIAN	27
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_WR_SWAP_ENDIAN	26
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_ENDIANISM	25
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_DST_ENDIANISM	24
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_SUBUNIT_ID	20
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_XDMA_GAP	16
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_XBURST_SZ	12
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_BURST_SZ	8
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_READ_EN	7
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_ADDR_MODE	5
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_LINK_LIST	4
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_WRITE_EN	3
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_DST_ADDR_MODE	1
	#define BLSB_MSPOD_MSPOD_TX_FLAGS_MODE_DST_LINK_LIST	0
	/* Register Bit Widths for MSPOD_MSPOD_TX_FLAGS_MODE */
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_ACTIVE_DMA	1
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_INT	1
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_DST_INT	1
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_TERM	1
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_RD_SWAP_ENDIAN	1
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_WR_SWAP_ENDIAN	1
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_ENDIANISM	1
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_DST_ENDIANISM	1
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_SUBUNIT_ID	4
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_XDMA_GAP	4
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_XBURST_SZ	4
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_BURST_SZ	4
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_READ_EN	1
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_ADDR_MODE	2
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_LINK_LIST	1
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_WRITE_EN	1
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_DST_ADDR_MODE	2
	#define BWID_MSPOD_MSPOD_TX_FLAGS_MODE_DST_LINK_LIST	1
	/* Register Bit MASKS for MSPOD_MSPOD_TX_FLAGS_MODE */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_ACTIVE_DMA	(1<<31) /* == 0x80000000:  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_INT	(1<<30) /* == 0x40000000:  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_DST_INT	(1<<29) /* == 0x20000000:  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_TERM	(1<<28) /* == 0x10000000:  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_RD_SWAP_ENDIAN	(1<<27) /* == 0x08000000:  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_WR_SWAP_ENDIAN	(1<<26) /* == 0x04000000:  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_ENDIANISM	(1<<25) /* == 0x02000000:  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_DST_ENDIANISM	(1<<24) /* == 0x01000000:  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_SUBUNIT_ID	0x00f00000 /*  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_XDMA_GAP	0x000f0000 /*  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_XBURST_SZ	0x0000f000 /*  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_BURST_SZ	0x00000f00 /*  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_READ_EN	(1<<7) /* == 0x00000080:  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_ADDR_MODE	0x00000060 /*  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_LINK_LIST	(1<<4) /* == 0x00000010:  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_WRITE_EN	(1<<3) /* == 0x00000008:  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_DST_ADDR_MODE	0x00000006 /*  */
	#define BMSK_MSPOD_MSPOD_TX_FLAGS_MODE_DST_LINK_LIST	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_MSPOD_TX_FLAGS_MODE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_ACTIVE_DMA	 0x00dc, 31, 1, 0x80000000
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_INT	 0x00dc, 30, 1, 0x40000000
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_DST_INT	 0x00dc, 29, 1, 0x20000000
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_TERM	 0x00dc, 28, 1, 0x10000000
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_RD_SWAP_ENDIAN	 0x00dc, 27, 1, 0x08000000
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_WR_SWAP_ENDIAN	 0x00dc, 26, 1, 0x04000000
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_ENDIANISM	 0x00dc, 25, 1, 0x02000000
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_DST_ENDIANISM	 0x00dc, 24, 1, 0x01000000
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_SUBUNIT_ID	 0x00dc, 20, 4, 0x00f00000
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_XDMA_GAP	 0x00dc, 16, 4, 0x000f0000
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_XBURST_SZ	 0x00dc, 12, 4, 0x0000f000
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_BURST_SZ	 0x00dc, 8, 4, 0x00000f00
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_READ_EN	 0x00dc, 7, 1, 0x00000080
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_ADDR_MODE	 0x00dc, 5, 2, 0x00000060
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_SRC_LINK_LIST	 0x00dc, 4, 1, 0x00000010
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_WRITE_EN	 0x00dc, 3, 1, 0x00000008
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_DST_ADDR_MODE	 0x00dc, 1, 2, 0x00000006
	#define BITFIELD_MSPOD_MSPOD_TX_FLAGS_MODE_DST_LINK_LIST	 0x00dc, 0, 1, 0x00000001
#define ROFF_MSPOD_MSPOD_TX_SRCDMA_START_A	0xe0 /* An alias of SRCDMA_START */ 
	#define BITFIELD_MSPOD_MSPOD_TX_SRCDMA_START_A	 0x00e0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_TX_SRCDMA_START_A */
	#define BLSB_MSPOD_MSPOD_TX_SRCDMA_START_A_SRCDMA_ALIAS	0
	/* Register Bit Widths for MSPOD_MSPOD_TX_SRCDMA_START_A */
	#define BWID_MSPOD_MSPOD_TX_SRCDMA_START_A_SRCDMA_ALIAS	32
	/* Register Bit MASKS for MSPOD_MSPOD_TX_SRCDMA_START_A */
	#define BMSK_MSPOD_MSPOD_TX_SRCDMA_START_A_SRCDMA_ALIAS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_TX_SRCDMA_START_A - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_TX_SRCDMA_START_A_SRCDMA_ALIAS	 0x00e0, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_TX_SRCDMA_BOT	0xe4 /* OFFSET 0x24  | Bottom-address of the source circular-buffer */ 
	#define BITFIELD_MSPOD_MSPOD_TX_SRCDMA_BOT	 0x00e4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_TX_SRCDMA_BOT */
	#define BLSB_MSPOD_MSPOD_TX_SRCDMA_BOT_SRCDMA_BOT	2
	#define BLSB_MSPOD_MSPOD_TX_SRCDMA_BOT_SRC_CIRBUF_SHARE	0
	/* Register Bit Widths for MSPOD_MSPOD_TX_SRCDMA_BOT */
	#define BWID_MSPOD_MSPOD_TX_SRCDMA_BOT_SRCDMA_BOT	30
	#define BWID_MSPOD_MSPOD_TX_SRCDMA_BOT_SRC_CIRBUF_SHARE	2
	/* Register Bit MASKS for MSPOD_MSPOD_TX_SRCDMA_BOT */
	#define BMSK_MSPOD_MSPOD_TX_SRCDMA_BOT_SRCDMA_BOT	0xfffffffc /*  */
	#define BMSK_MSPOD_MSPOD_TX_SRCDMA_BOT_SRC_CIRBUF_SHARE	0x00000003 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_TX_SRCDMA_BOT - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_TX_SRCDMA_BOT_SRCDMA_BOT	 0x00e4, 2, 30, 0xfffffffc
	#define BITFIELD_MSPOD_MSPOD_TX_SRCDMA_BOT_SRC_CIRBUF_SHARE	 0x00e4, 0, 2, 0x00000003
#define ROFF_MSPOD_MSPOD_TX_SRCDMA_TOP	0xe8 /* OFFSET 0x28  | Top-address of the source circular-buffer */ 
	#define BITFIELD_MSPOD_MSPOD_TX_SRCDMA_TOP	 0x00e8, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_TX_SRCDMA_TOP */
	#define BLSB_MSPOD_MSPOD_TX_SRCDMA_TOP_ALL_BITS	0
	/* Register Bit Widths for MSPOD_MSPOD_TX_SRCDMA_TOP */
	#define BWID_MSPOD_MSPOD_TX_SRCDMA_TOP_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_MSPOD_TX_SRCDMA_TOP */
	#define BMSK_MSPOD_MSPOD_TX_SRCDMA_TOP_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_TX_SRCDMA_TOP - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_TX_SRCDMA_TOP_ALL_BITS	 0x00e8, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_TX_DSTDMA_BOT	0xec /* OFFSET 0x2C  | Bottom-address of the destination circular-buffer */ 
	#define BITFIELD_MSPOD_MSPOD_TX_DSTDMA_BOT	 0x00ec, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_TX_DSTDMA_BOT */
	#define BLSB_MSPOD_MSPOD_TX_DSTDMA_BOT_ALL_BITS	0
	/* Register Bit Widths for MSPOD_MSPOD_TX_DSTDMA_BOT */
	#define BWID_MSPOD_MSPOD_TX_DSTDMA_BOT_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_MSPOD_TX_DSTDMA_BOT */
	#define BMSK_MSPOD_MSPOD_TX_DSTDMA_BOT_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_TX_DSTDMA_BOT - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_TX_DSTDMA_BOT_ALL_BITS	 0x00ec, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_TX_DSTDMA_TOP	0xf0 /* OFFSET 0x30  | Top-address of the destination circular-buffer */ 
	#define BITFIELD_MSPOD_MSPOD_TX_DSTDMA_TOP	 0x00f0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_TX_DSTDMA_TOP */
	#define BLSB_MSPOD_MSPOD_TX_DSTDMA_TOP_ALL_BITS	0
	/* Register Bit Widths for MSPOD_MSPOD_TX_DSTDMA_TOP */
	#define BWID_MSPOD_MSPOD_TX_DSTDMA_TOP_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_MSPOD_TX_DSTDMA_TOP */
	#define BMSK_MSPOD_MSPOD_TX_DSTDMA_TOP_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_TX_DSTDMA_TOP - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_TX_DSTDMA_TOP_ALL_BITS	 0x00f0, 0, 32, 0x00000000
#define ROFF_MSPOD_MSPOD_TX_DSTDMA_SIZE	0xf4 /* OFFSET 0x34  | Num of data bytes to be read from the destination location */ 
	#define BITFIELD_MSPOD_MSPOD_TX_DSTDMA_SIZE	 0x00f4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_MSPOD_TX_DSTDMA_SIZE */
	#define BLSB_MSPOD_MSPOD_TX_DSTDMA_SIZE_ALL_BITS	0
	/* Register Bit Widths for MSPOD_MSPOD_TX_DSTDMA_SIZE */
	#define BWID_MSPOD_MSPOD_TX_DSTDMA_SIZE_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_MSPOD_TX_DSTDMA_SIZE */
	#define BMSK_MSPOD_MSPOD_TX_DSTDMA_SIZE_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_MSPOD_TX_DSTDMA_SIZE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_MSPOD_TX_DSTDMA_SIZE_ALL_BITS	 0x00f4, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_OUT_CURR_DESCR	0x108 /* OFFSET 0x08  | Current Descriptor Address Pointer */ 
	#define BITFIELD_MSPOD_1394_OUT_CURR_DESCR	 0x0108, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_OUT_CURR_DESCR */
	#define BLSB_MSPOD_1394_OUT_CURR_DESCR_CURDESC	0
	/* Register Bit Widths for MSPOD_1394_OUT_CURR_DESCR */
	#define BWID_MSPOD_1394_OUT_CURR_DESCR_CURDESC	32
	/* Register Bit MASKS for MSPOD_1394_OUT_CURR_DESCR */
	#define BMSK_MSPOD_1394_OUT_CURR_DESCR_CURDESC	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_OUT_CURR_DESCR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_OUT_CURR_DESCR_CURDESC	 0x0108, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_OUT_NEXT_DESCR	0x10c /* OFFSET 0x0C  | Next Descriptor Address Pointer */ 
	#define BITFIELD_MSPOD_1394_OUT_NEXT_DESCR	 0x010c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_OUT_NEXT_DESCR */
	#define BLSB_MSPOD_1394_OUT_NEXT_DESCR_NEXTDESC	2
	#define BLSB_MSPOD_1394_OUT_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	1
	#define BLSB_MSPOD_1394_OUT_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	0
	/* Register Bit Widths for MSPOD_1394_OUT_NEXT_DESCR */
	#define BWID_MSPOD_1394_OUT_NEXT_DESCR_NEXTDESC	30
	#define BWID_MSPOD_1394_OUT_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	1
	#define BWID_MSPOD_1394_OUT_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	1
	/* Register Bit MASKS for MSPOD_1394_OUT_NEXT_DESCR */
	#define BMSK_MSPOD_1394_OUT_NEXT_DESCR_NEXTDESC	0xfffffffc /*  */
	#define BMSK_MSPOD_1394_OUT_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	(1<<1) /* == 0x00000002:  */
	#define BMSK_MSPOD_1394_OUT_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_1394_OUT_NEXT_DESCR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_OUT_NEXT_DESCR_NEXTDESC	 0x010c, 2, 30, 0xfffffffc
	#define BITFIELD_MSPOD_1394_OUT_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	 0x010c, 1, 1, 0x00000002
	#define BITFIELD_MSPOD_1394_OUT_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	 0x010c, 0, 1, 0x00000001
#define ROFF_MSPOD_1394_OUT_SRCDMA_START	0x110 /* OFFSET 0x10  | Start Address of the Source DMA buffer */ 
	#define BITFIELD_MSPOD_1394_OUT_SRCDMA_START	 0x0110, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_OUT_SRCDMA_START */
	#define BLSB_MSPOD_1394_OUT_SRCDMA_START_SRCDMA_START	0
	/* Register Bit Widths for MSPOD_1394_OUT_SRCDMA_START */
	#define BWID_MSPOD_1394_OUT_SRCDMA_START_SRCDMA_START	32
	/* Register Bit MASKS for MSPOD_1394_OUT_SRCDMA_START */
	#define BMSK_MSPOD_1394_OUT_SRCDMA_START_SRCDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_OUT_SRCDMA_START - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_OUT_SRCDMA_START_SRCDMA_START	 0x0110, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_OUT_DSTDMA_START	0x114 /* OFFSET 0x14  | Start Address of the Source DMA buffer */ 
	#define BITFIELD_MSPOD_1394_OUT_DSTDMA_START	 0x0114, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_OUT_DSTDMA_START */
	#define BLSB_MSPOD_1394_OUT_DSTDMA_START_DSTDMA_START	0
	/* Register Bit Widths for MSPOD_1394_OUT_DSTDMA_START */
	#define BWID_MSPOD_1394_OUT_DSTDMA_START_DSTDMA_START	32
	/* Register Bit MASKS for MSPOD_1394_OUT_DSTDMA_START */
	#define BMSK_MSPOD_1394_OUT_DSTDMA_START_DSTDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_OUT_DSTDMA_START - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_OUT_DSTDMA_START_DSTDMA_START	 0x0114, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_OUT_SRCDMA_SIZE	0x118 /* OFFSET 0x18  | Num of data bytes to be read from the source location */ 
	#define BITFIELD_MSPOD_1394_OUT_SRCDMA_SIZE	 0x0118, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_OUT_SRCDMA_SIZE */
	#define BLSB_MSPOD_1394_OUT_SRCDMA_SIZE_DSTDMA_START	0
	/* Register Bit Widths for MSPOD_1394_OUT_SRCDMA_SIZE */
	#define BWID_MSPOD_1394_OUT_SRCDMA_SIZE_DSTDMA_START	32
	/* Register Bit MASKS for MSPOD_1394_OUT_SRCDMA_SIZE */
	#define BMSK_MSPOD_1394_OUT_SRCDMA_SIZE_DSTDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_OUT_SRCDMA_SIZE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_OUT_SRCDMA_SIZE_DSTDMA_START	 0x0118, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_OUT_FLAGS_MODE	0x11c /* OFFSET 0x1C  | Miscellaneous Control/Status */ 
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE	 0x011c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_OUT_FLAGS_MODE */
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_ACTIVE_DMA	31
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_SRC_INT	30
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_DST_INT	29
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_TERM	28
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_RD_SWAP_ENDIAN	27
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_WR_SWAP_ENDIAN	26
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_SRC_ENDIANISM	25
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_DST_ENDIANISM	24
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_SUBUNIT_ID	20
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_XDMA_GAP	16
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_XBURST_SZ	12
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_BURST_SZ	8
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_READ_EN	7
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_SRC_ADDR_MODE	5
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_SRC_LINK_LIST	4
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_WRITE_EN	3
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_DST_ADDR_MODE	1
	#define BLSB_MSPOD_1394_OUT_FLAGS_MODE_DST_LINK_LIST	0
	/* Register Bit Widths for MSPOD_1394_OUT_FLAGS_MODE */
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_ACTIVE_DMA	1
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_SRC_INT	1
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_DST_INT	1
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_TERM	1
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_RD_SWAP_ENDIAN	1
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_WR_SWAP_ENDIAN	1
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_SRC_ENDIANISM	1
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_DST_ENDIANISM	1
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_SUBUNIT_ID	4
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_XDMA_GAP	4
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_XBURST_SZ	4
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_BURST_SZ	4
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_READ_EN	1
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_SRC_ADDR_MODE	2
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_SRC_LINK_LIST	1
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_WRITE_EN	1
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_DST_ADDR_MODE	2
	#define BWID_MSPOD_1394_OUT_FLAGS_MODE_DST_LINK_LIST	1
	/* Register Bit MASKS for MSPOD_1394_OUT_FLAGS_MODE */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_ACTIVE_DMA	(1<<31) /* == 0x80000000:  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_SRC_INT	(1<<30) /* == 0x40000000:  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_DST_INT	(1<<29) /* == 0x20000000:  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_TERM	(1<<28) /* == 0x10000000:  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_RD_SWAP_ENDIAN	(1<<27) /* == 0x08000000:  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_WR_SWAP_ENDIAN	(1<<26) /* == 0x04000000:  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_SRC_ENDIANISM	(1<<25) /* == 0x02000000:  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_DST_ENDIANISM	(1<<24) /* == 0x01000000:  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_SUBUNIT_ID	0x00f00000 /*  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_XDMA_GAP	0x000f0000 /*  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_XBURST_SZ	0x0000f000 /*  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_BURST_SZ	0x00000f00 /*  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_READ_EN	(1<<7) /* == 0x00000080:  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_SRC_ADDR_MODE	0x00000060 /*  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_SRC_LINK_LIST	(1<<4) /* == 0x00000010:  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_WRITE_EN	(1<<3) /* == 0x00000008:  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_DST_ADDR_MODE	0x00000006 /*  */
	#define BMSK_MSPOD_1394_OUT_FLAGS_MODE_DST_LINK_LIST	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_1394_OUT_FLAGS_MODE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_ACTIVE_DMA	 0x011c, 31, 1, 0x80000000
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_SRC_INT	 0x011c, 30, 1, 0x40000000
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_DST_INT	 0x011c, 29, 1, 0x20000000
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_TERM	 0x011c, 28, 1, 0x10000000
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_RD_SWAP_ENDIAN	 0x011c, 27, 1, 0x08000000
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_WR_SWAP_ENDIAN	 0x011c, 26, 1, 0x04000000
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_SRC_ENDIANISM	 0x011c, 25, 1, 0x02000000
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_DST_ENDIANISM	 0x011c, 24, 1, 0x01000000
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_SUBUNIT_ID	 0x011c, 20, 4, 0x00f00000
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_XDMA_GAP	 0x011c, 16, 4, 0x000f0000
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_XBURST_SZ	 0x011c, 12, 4, 0x0000f000
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_BURST_SZ	 0x011c, 8, 4, 0x00000f00
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_READ_EN	 0x011c, 7, 1, 0x00000080
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_SRC_ADDR_MODE	 0x011c, 5, 2, 0x00000060
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_SRC_LINK_LIST	 0x011c, 4, 1, 0x00000010
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_WRITE_EN	 0x011c, 3, 1, 0x00000008
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_DST_ADDR_MODE	 0x011c, 1, 2, 0x00000006
	#define BITFIELD_MSPOD_1394_OUT_FLAGS_MODE_DST_LINK_LIST	 0x011c, 0, 1, 0x00000001
#define ROFF_MSPOD_1394_OUT_SRCDMA_START_A	0x120 /* OFFSET 0x20  | An alias of SRCDMA_START */ 
	#define BITFIELD_MSPOD_1394_OUT_SRCDMA_START_A	 0x0120, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_OUT_SRCDMA_START_A */
	#define BLSB_MSPOD_1394_OUT_SRCDMA_START_A_SRCDMA_ALIAS	0
	/* Register Bit Widths for MSPOD_1394_OUT_SRCDMA_START_A */
	#define BWID_MSPOD_1394_OUT_SRCDMA_START_A_SRCDMA_ALIAS	32
	/* Register Bit MASKS for MSPOD_1394_OUT_SRCDMA_START_A */
	#define BMSK_MSPOD_1394_OUT_SRCDMA_START_A_SRCDMA_ALIAS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_OUT_SRCDMA_START_A - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_OUT_SRCDMA_START_A_SRCDMA_ALIAS	 0x0120, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_OUT_SRCDMA_BOT	0x124 /* OFFSET 0x24  | Bottom-address of the source circular-buffer */ 
	#define BITFIELD_MSPOD_1394_OUT_SRCDMA_BOT	 0x0124, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_OUT_SRCDMA_BOT */
	#define BLSB_MSPOD_1394_OUT_SRCDMA_BOT_SRCDMA_BOT	2
	#define BLSB_MSPOD_1394_OUT_SRCDMA_BOT_SRC_CIRBUF_SHARE	0
	/* Register Bit Widths for MSPOD_1394_OUT_SRCDMA_BOT */
	#define BWID_MSPOD_1394_OUT_SRCDMA_BOT_SRCDMA_BOT	30
	#define BWID_MSPOD_1394_OUT_SRCDMA_BOT_SRC_CIRBUF_SHARE	2
	/* Register Bit MASKS for MSPOD_1394_OUT_SRCDMA_BOT */
	#define BMSK_MSPOD_1394_OUT_SRCDMA_BOT_SRCDMA_BOT	0xfffffffc /*  */
	#define BMSK_MSPOD_1394_OUT_SRCDMA_BOT_SRC_CIRBUF_SHARE	0x00000003 /*  */
	/* Register BITFIELD for MSPOD_1394_OUT_SRCDMA_BOT - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_OUT_SRCDMA_BOT_SRCDMA_BOT	 0x0124, 2, 30, 0xfffffffc
	#define BITFIELD_MSPOD_1394_OUT_SRCDMA_BOT_SRC_CIRBUF_SHARE	 0x0124, 0, 2, 0x00000003
#define ROFF_MSPOD_1394_OUT_SRCDMA_TOP	0x128 /* OFFSET 0x28  | Top-address of the source circular-buffer */ 
	#define BITFIELD_MSPOD_1394_OUT_SRCDMA_TOP	 0x0128, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_OUT_SRCDMA_TOP */
	#define BLSB_MSPOD_1394_OUT_SRCDMA_TOP_ALL_BITS	0
	/* Register Bit Widths for MSPOD_1394_OUT_SRCDMA_TOP */
	#define BWID_MSPOD_1394_OUT_SRCDMA_TOP_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_1394_OUT_SRCDMA_TOP */
	#define BMSK_MSPOD_1394_OUT_SRCDMA_TOP_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_OUT_SRCDMA_TOP - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_OUT_SRCDMA_TOP_ALL_BITS	 0x0128, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_OUT_DSTDMA_BOT	0x12c /* OFFSET 0x2C  | Bottom-address of the destination circular-buffer */ 
	#define BITFIELD_MSPOD_1394_OUT_DSTDMA_BOT	 0x012c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_OUT_DSTDMA_BOT */
	#define BLSB_MSPOD_1394_OUT_DSTDMA_BOT_ALL_BITS	0
	/* Register Bit Widths for MSPOD_1394_OUT_DSTDMA_BOT */
	#define BWID_MSPOD_1394_OUT_DSTDMA_BOT_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_1394_OUT_DSTDMA_BOT */
	#define BMSK_MSPOD_1394_OUT_DSTDMA_BOT_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_OUT_DSTDMA_BOT - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_OUT_DSTDMA_BOT_ALL_BITS	 0x012c, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_OUT_DSTDMA_TOP	0x130 /* OFFSET 0x30  | Top-address of the destination circular-buffer */ 
	#define BITFIELD_MSPOD_1394_OUT_DSTDMA_TOP	 0x0130, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_OUT_DSTDMA_TOP */
	#define BLSB_MSPOD_1394_OUT_DSTDMA_TOP_ALL_BITS	0
	/* Register Bit Widths for MSPOD_1394_OUT_DSTDMA_TOP */
	#define BWID_MSPOD_1394_OUT_DSTDMA_TOP_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_1394_OUT_DSTDMA_TOP */
	#define BMSK_MSPOD_1394_OUT_DSTDMA_TOP_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_OUT_DSTDMA_TOP - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_OUT_DSTDMA_TOP_ALL_BITS	 0x0130, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_OUT_DSTDMA_SIZE	0x134 /* OFFSET 0x34  | Num of data bytes to be read from the destination location */ 
	#define BITFIELD_MSPOD_1394_OUT_DSTDMA_SIZE	 0x0134, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_OUT_DSTDMA_SIZE */
	#define BLSB_MSPOD_1394_OUT_DSTDMA_SIZE_ALL_BITS	0
	/* Register Bit Widths for MSPOD_1394_OUT_DSTDMA_SIZE */
	#define BWID_MSPOD_1394_OUT_DSTDMA_SIZE_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_1394_OUT_DSTDMA_SIZE */
	#define BMSK_MSPOD_1394_OUT_DSTDMA_SIZE_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_OUT_DSTDMA_SIZE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_OUT_DSTDMA_SIZE_ALL_BITS	 0x0134, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_IN_CURR_DESCR	0x148 /* OFFSET 0x08  | Current Descriptor Address Pointer */ 
	#define BITFIELD_MSPOD_1394_IN_CURR_DESCR	 0x0148, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_IN_CURR_DESCR */
	#define BLSB_MSPOD_1394_IN_CURR_DESCR_CURDESC	0
	/* Register Bit Widths for MSPOD_1394_IN_CURR_DESCR */
	#define BWID_MSPOD_1394_IN_CURR_DESCR_CURDESC	32
	/* Register Bit MASKS for MSPOD_1394_IN_CURR_DESCR */
	#define BMSK_MSPOD_1394_IN_CURR_DESCR_CURDESC	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_IN_CURR_DESCR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_IN_CURR_DESCR_CURDESC	 0x0148, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_IN_NEXT_DESCR	0x14c /* OFFSET 0x0C  | Next Descriptor Address Pointer */ 
	#define BITFIELD_MSPOD_1394_IN_NEXT_DESCR	 0x014c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_IN_NEXT_DESCR */
	#define BLSB_MSPOD_1394_IN_NEXT_DESCR_NEXTDESC	2
	#define BLSB_MSPOD_1394_IN_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	1
	#define BLSB_MSPOD_1394_IN_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	0
	/* Register Bit Widths for MSPOD_1394_IN_NEXT_DESCR */
	#define BWID_MSPOD_1394_IN_NEXT_DESCR_NEXTDESC	30
	#define BWID_MSPOD_1394_IN_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	1
	#define BWID_MSPOD_1394_IN_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	1
	/* Register Bit MASKS for MSPOD_1394_IN_NEXT_DESCR */
	#define BMSK_MSPOD_1394_IN_NEXT_DESCR_NEXTDESC	0xfffffffc /*  */
	#define BMSK_MSPOD_1394_IN_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	(1<<1) /* == 0x00000002:  */
	#define BMSK_MSPOD_1394_IN_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_1394_IN_NEXT_DESCR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_IN_NEXT_DESCR_NEXTDESC	 0x014c, 2, 30, 0xfffffffc
	#define BITFIELD_MSPOD_1394_IN_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	 0x014c, 1, 1, 0x00000002
	#define BITFIELD_MSPOD_1394_IN_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	 0x014c, 0, 1, 0x00000001
#define ROFF_MSPOD_1394_IN_SRCDMA_START	0x150 /* OFFSET 0x10  | Start Address of the Source DMA buffer */ 
	#define BITFIELD_MSPOD_1394_IN_SRCDMA_START	 0x0150, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_IN_SRCDMA_START */
	#define BLSB_MSPOD_1394_IN_SRCDMA_START_SRCDMA_START	0
	/* Register Bit Widths for MSPOD_1394_IN_SRCDMA_START */
	#define BWID_MSPOD_1394_IN_SRCDMA_START_SRCDMA_START	32
	/* Register Bit MASKS for MSPOD_1394_IN_SRCDMA_START */
	#define BMSK_MSPOD_1394_IN_SRCDMA_START_SRCDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_IN_SRCDMA_START - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_IN_SRCDMA_START_SRCDMA_START	 0x0150, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_IN_DSTDMA_START	0x154 /* OFFSET 0x14  | Start Address of the Source DMA buffer */ 
	#define BITFIELD_MSPOD_1394_IN_DSTDMA_START	 0x0154, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_IN_DSTDMA_START */
	#define BLSB_MSPOD_1394_IN_DSTDMA_START_DSTDMA_START	0
	/* Register Bit Widths for MSPOD_1394_IN_DSTDMA_START */
	#define BWID_MSPOD_1394_IN_DSTDMA_START_DSTDMA_START	32
	/* Register Bit MASKS for MSPOD_1394_IN_DSTDMA_START */
	#define BMSK_MSPOD_1394_IN_DSTDMA_START_DSTDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_IN_DSTDMA_START - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_IN_DSTDMA_START_DSTDMA_START	 0x0154, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_IN_SRCDMA_SIZE	0x158 /* OFFSET 0x18  | Num of data bytes to be read from the source location */ 
	#define BITFIELD_MSPOD_1394_IN_SRCDMA_SIZE	 0x0158, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_IN_SRCDMA_SIZE */
	#define BLSB_MSPOD_1394_IN_SRCDMA_SIZE_DSTDMA_START	0
	/* Register Bit Widths for MSPOD_1394_IN_SRCDMA_SIZE */
	#define BWID_MSPOD_1394_IN_SRCDMA_SIZE_DSTDMA_START	32
	/* Register Bit MASKS for MSPOD_1394_IN_SRCDMA_SIZE */
	#define BMSK_MSPOD_1394_IN_SRCDMA_SIZE_DSTDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_IN_SRCDMA_SIZE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_IN_SRCDMA_SIZE_DSTDMA_START	 0x0158, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_IN_FLAGS_MODE	0x15c /* OFFSET 0x1C  | Miscellaneous Control/Status */ 
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE	 0x015c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_IN_FLAGS_MODE */
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_ACTIVE_DMA	31
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_SRC_INT	30
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_DST_INT	29
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_TERM	28
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_RD_SWAP_ENDIAN	27
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_WR_SWAP_ENDIAN	26
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_SRC_ENDIANISM	25
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_DST_ENDIANISM	24
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_SUBUNIT_ID	20
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_XDMA_GAP	16
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_XBURST_SZ	12
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_BURST_SZ	8
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_READ_EN	7
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_SRC_ADDR_MODE	5
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_SRC_LINK_LIST	4
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_WRITE_EN	3
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_DST_ADDR_MODE	1
	#define BLSB_MSPOD_1394_IN_FLAGS_MODE_DST_LINK_LIST	0
	/* Register Bit Widths for MSPOD_1394_IN_FLAGS_MODE */
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_ACTIVE_DMA	1
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_SRC_INT	1
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_DST_INT	1
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_TERM	1
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_RD_SWAP_ENDIAN	1
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_WR_SWAP_ENDIAN	1
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_SRC_ENDIANISM	1
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_DST_ENDIANISM	1
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_SUBUNIT_ID	4
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_XDMA_GAP	4
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_XBURST_SZ	4
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_BURST_SZ	4
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_READ_EN	1
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_SRC_ADDR_MODE	2
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_SRC_LINK_LIST	1
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_WRITE_EN	1
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_DST_ADDR_MODE	2
	#define BWID_MSPOD_1394_IN_FLAGS_MODE_DST_LINK_LIST	1
	/* Register Bit MASKS for MSPOD_1394_IN_FLAGS_MODE */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_ACTIVE_DMA	(1<<31) /* == 0x80000000:  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_SRC_INT	(1<<30) /* == 0x40000000:  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_DST_INT	(1<<29) /* == 0x20000000:  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_TERM	(1<<28) /* == 0x10000000:  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_RD_SWAP_ENDIAN	(1<<27) /* == 0x08000000:  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_WR_SWAP_ENDIAN	(1<<26) /* == 0x04000000:  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_SRC_ENDIANISM	(1<<25) /* == 0x02000000:  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_DST_ENDIANISM	(1<<24) /* == 0x01000000:  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_SUBUNIT_ID	0x00f00000 /*  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_XDMA_GAP	0x000f0000 /*  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_XBURST_SZ	0x0000f000 /*  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_BURST_SZ	0x00000f00 /*  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_READ_EN	(1<<7) /* == 0x00000080:  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_SRC_ADDR_MODE	0x00000060 /*  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_SRC_LINK_LIST	(1<<4) /* == 0x00000010:  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_WRITE_EN	(1<<3) /* == 0x00000008:  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_DST_ADDR_MODE	0x00000006 /*  */
	#define BMSK_MSPOD_1394_IN_FLAGS_MODE_DST_LINK_LIST	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_1394_IN_FLAGS_MODE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_ACTIVE_DMA	 0x015c, 31, 1, 0x80000000
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_SRC_INT	 0x015c, 30, 1, 0x40000000
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_DST_INT	 0x015c, 29, 1, 0x20000000
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_TERM	 0x015c, 28, 1, 0x10000000
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_RD_SWAP_ENDIAN	 0x015c, 27, 1, 0x08000000
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_WR_SWAP_ENDIAN	 0x015c, 26, 1, 0x04000000
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_SRC_ENDIANISM	 0x015c, 25, 1, 0x02000000
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_DST_ENDIANISM	 0x015c, 24, 1, 0x01000000
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_SUBUNIT_ID	 0x015c, 20, 4, 0x00f00000
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_XDMA_GAP	 0x015c, 16, 4, 0x000f0000
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_XBURST_SZ	 0x015c, 12, 4, 0x0000f000
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_BURST_SZ	 0x015c, 8, 4, 0x00000f00
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_READ_EN	 0x015c, 7, 1, 0x00000080
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_SRC_ADDR_MODE	 0x015c, 5, 2, 0x00000060
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_SRC_LINK_LIST	 0x015c, 4, 1, 0x00000010
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_WRITE_EN	 0x015c, 3, 1, 0x00000008
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_DST_ADDR_MODE	 0x015c, 1, 2, 0x00000006
	#define BITFIELD_MSPOD_1394_IN_FLAGS_MODE_DST_LINK_LIST	 0x015c, 0, 1, 0x00000001
#define ROFF_MSPOD_1394_IN_SRCDMA_START_A	0x160 /* OFFSET 0x20  | An alias of SRCDMA_START */ 
	#define BITFIELD_MSPOD_1394_IN_SRCDMA_START_A	 0x0160, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_IN_SRCDMA_START_A */
	#define BLSB_MSPOD_1394_IN_SRCDMA_START_A_SRCDMA_ALIAS	0
	/* Register Bit Widths for MSPOD_1394_IN_SRCDMA_START_A */
	#define BWID_MSPOD_1394_IN_SRCDMA_START_A_SRCDMA_ALIAS	32
	/* Register Bit MASKS for MSPOD_1394_IN_SRCDMA_START_A */
	#define BMSK_MSPOD_1394_IN_SRCDMA_START_A_SRCDMA_ALIAS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_IN_SRCDMA_START_A - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_IN_SRCDMA_START_A_SRCDMA_ALIAS	 0x0160, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_IN_SRCDMA_BOT	0x164 /* OFFSET 0x24  | Bottom-address of the source circular-buffer */ 
	#define BITFIELD_MSPOD_1394_IN_SRCDMA_BOT	 0x0164, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_IN_SRCDMA_BOT */
	#define BLSB_MSPOD_1394_IN_SRCDMA_BOT_SRCDMA_BOT	2
	#define BLSB_MSPOD_1394_IN_SRCDMA_BOT_SRC_CIRBUF_SHARE	0
	/* Register Bit Widths for MSPOD_1394_IN_SRCDMA_BOT */
	#define BWID_MSPOD_1394_IN_SRCDMA_BOT_SRCDMA_BOT	30
	#define BWID_MSPOD_1394_IN_SRCDMA_BOT_SRC_CIRBUF_SHARE	2
	/* Register Bit MASKS for MSPOD_1394_IN_SRCDMA_BOT */
	#define BMSK_MSPOD_1394_IN_SRCDMA_BOT_SRCDMA_BOT	0xfffffffc /*  */
	#define BMSK_MSPOD_1394_IN_SRCDMA_BOT_SRC_CIRBUF_SHARE	0x00000003 /*  */
	/* Register BITFIELD for MSPOD_1394_IN_SRCDMA_BOT - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_IN_SRCDMA_BOT_SRCDMA_BOT	 0x0164, 2, 30, 0xfffffffc
	#define BITFIELD_MSPOD_1394_IN_SRCDMA_BOT_SRC_CIRBUF_SHARE	 0x0164, 0, 2, 0x00000003
#define ROFF_MSPOD_1394_IN_SRCDMA_TOP	0x168 /* OFFSET 0x28  | Top-address of the source circular-buffer */ 
	#define BITFIELD_MSPOD_1394_IN_SRCDMA_TOP	 0x0168, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_IN_SRCDMA_TOP */
	#define BLSB_MSPOD_1394_IN_SRCDMA_TOP_ALL_BITS	0
	/* Register Bit Widths for MSPOD_1394_IN_SRCDMA_TOP */
	#define BWID_MSPOD_1394_IN_SRCDMA_TOP_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_1394_IN_SRCDMA_TOP */
	#define BMSK_MSPOD_1394_IN_SRCDMA_TOP_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_IN_SRCDMA_TOP - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_IN_SRCDMA_TOP_ALL_BITS	 0x0168, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_IN_DSTDMA_BOT	0x16c /* OFFSET 0x2C  | Bottom-address of the destination circular-buffer */ 
	#define BITFIELD_MSPOD_1394_IN_DSTDMA_BOT	 0x016c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_IN_DSTDMA_BOT */
	#define BLSB_MSPOD_1394_IN_DSTDMA_BOT_ALL_BITS	0
	/* Register Bit Widths for MSPOD_1394_IN_DSTDMA_BOT */
	#define BWID_MSPOD_1394_IN_DSTDMA_BOT_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_1394_IN_DSTDMA_BOT */
	#define BMSK_MSPOD_1394_IN_DSTDMA_BOT_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_IN_DSTDMA_BOT - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_IN_DSTDMA_BOT_ALL_BITS	 0x016c, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_IN_DSTDMA_TOP	0x170 /* OFFSET 0x30  | Top-address of the destination circular-buffer */ 
	#define BITFIELD_MSPOD_1394_IN_DSTDMA_TOP	 0x0170, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_IN_DSTDMA_TOP */
	#define BLSB_MSPOD_1394_IN_DSTDMA_TOP_ALL_BITS	0
	/* Register Bit Widths for MSPOD_1394_IN_DSTDMA_TOP */
	#define BWID_MSPOD_1394_IN_DSTDMA_TOP_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_1394_IN_DSTDMA_TOP */
	#define BMSK_MSPOD_1394_IN_DSTDMA_TOP_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_IN_DSTDMA_TOP - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_IN_DSTDMA_TOP_ALL_BITS	 0x0170, 0, 32, 0x00000000
#define ROFF_MSPOD_1394_IN_DSTDMA_SIZE	0x174 /* OFFSET 0x34  | Num of data bytes to be read from the destination location */ 
	#define BITFIELD_MSPOD_1394_IN_DSTDMA_SIZE	 0x0174, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_1394_IN_DSTDMA_SIZE */
	#define BLSB_MSPOD_1394_IN_DSTDMA_SIZE_ALL_BITS	0
	/* Register Bit Widths for MSPOD_1394_IN_DSTDMA_SIZE */
	#define BWID_MSPOD_1394_IN_DSTDMA_SIZE_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_1394_IN_DSTDMA_SIZE */
	#define BMSK_MSPOD_1394_IN_DSTDMA_SIZE_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_1394_IN_DSTDMA_SIZE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_1394_IN_DSTDMA_SIZE_ALL_BITS	 0x0174, 0, 32, 0x00000000
#define ROFF_MSPOD_P2P_CURR_DESCR	0x188 /* OFFSET 0x08  | Current Descriptor Address Pointer */ 
	#define BITFIELD_MSPOD_P2P_CURR_DESCR	 0x0188, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_P2P_CURR_DESCR */
	#define BLSB_MSPOD_P2P_CURR_DESCR_CURDESC	0
	/* Register Bit Widths for MSPOD_P2P_CURR_DESCR */
	#define BWID_MSPOD_P2P_CURR_DESCR_CURDESC	32
	/* Register Bit MASKS for MSPOD_P2P_CURR_DESCR */
	#define BMSK_MSPOD_P2P_CURR_DESCR_CURDESC	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_P2P_CURR_DESCR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_P2P_CURR_DESCR_CURDESC	 0x0188, 0, 32, 0x00000000
#define ROFF_MSPOD_P2P_NEXT_DESCR	0x18c /* OFFSET 0x0C  | Next Descriptor Address Pointer */ 
	#define BITFIELD_MSPOD_P2P_NEXT_DESCR	 0x018c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_P2P_NEXT_DESCR */
	#define BLSB_MSPOD_P2P_NEXT_DESCR_NEXTDESC	2
	#define BLSB_MSPOD_P2P_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	1
	#define BLSB_MSPOD_P2P_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	0
	/* Register Bit Widths for MSPOD_P2P_NEXT_DESCR */
	#define BWID_MSPOD_P2P_NEXT_DESCR_NEXTDESC	30
	#define BWID_MSPOD_P2P_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	1
	#define BWID_MSPOD_P2P_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	1
	/* Register Bit MASKS for MSPOD_P2P_NEXT_DESCR */
	#define BMSK_MSPOD_P2P_NEXT_DESCR_NEXTDESC	0xfffffffc /*  */
	#define BMSK_MSPOD_P2P_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	(1<<1) /* == 0x00000002:  */
	#define BMSK_MSPOD_P2P_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_P2P_NEXT_DESCR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_P2P_NEXT_DESCR_NEXTDESC	 0x018c, 2, 30, 0xfffffffc
	#define BITFIELD_MSPOD_P2P_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	 0x018c, 1, 1, 0x00000002
	#define BITFIELD_MSPOD_P2P_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	 0x018c, 0, 1, 0x00000001
#define ROFF_MSPOD_P2P_SRCDMA_START	0x190 /* OFFSET 0x10  | Start Address of the Source DMA buffer */ 
	#define BITFIELD_MSPOD_P2P_SRCDMA_START	 0x0190, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_P2P_SRCDMA_START */
	#define BLSB_MSPOD_P2P_SRCDMA_START_SRCDMA_START	0
	/* Register Bit Widths for MSPOD_P2P_SRCDMA_START */
	#define BWID_MSPOD_P2P_SRCDMA_START_SRCDMA_START	32
	/* Register Bit MASKS for MSPOD_P2P_SRCDMA_START */
	#define BMSK_MSPOD_P2P_SRCDMA_START_SRCDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_P2P_SRCDMA_START - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_P2P_SRCDMA_START_SRCDMA_START	 0x0190, 0, 32, 0x00000000
#define ROFF_MSPOD_P2P_DSTDMA_START	0x194 /* OFFSET 0x14  | Start Address of the Source DMA buffer */ 
	#define BITFIELD_MSPOD_P2P_DSTDMA_START	 0x0194, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_P2P_DSTDMA_START */
	#define BLSB_MSPOD_P2P_DSTDMA_START_DSTDMA_START	0
	/* Register Bit Widths for MSPOD_P2P_DSTDMA_START */
	#define BWID_MSPOD_P2P_DSTDMA_START_DSTDMA_START	32
	/* Register Bit MASKS for MSPOD_P2P_DSTDMA_START */
	#define BMSK_MSPOD_P2P_DSTDMA_START_DSTDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_P2P_DSTDMA_START - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_P2P_DSTDMA_START_DSTDMA_START	 0x0194, 0, 32, 0x00000000
#define ROFF_MSPOD_P2P_SRCDMA_SIZE	0x198 /* OFFSET 0x18  | Num of data bytes to be read from the source location */ 
	#define BITFIELD_MSPOD_P2P_SRCDMA_SIZE	 0x0198, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_P2P_SRCDMA_SIZE */
	#define BLSB_MSPOD_P2P_SRCDMA_SIZE_DSTDMA_START	0
	/* Register Bit Widths for MSPOD_P2P_SRCDMA_SIZE */
	#define BWID_MSPOD_P2P_SRCDMA_SIZE_DSTDMA_START	32
	/* Register Bit MASKS for MSPOD_P2P_SRCDMA_SIZE */
	#define BMSK_MSPOD_P2P_SRCDMA_SIZE_DSTDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_P2P_SRCDMA_SIZE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_P2P_SRCDMA_SIZE_DSTDMA_START	 0x0198, 0, 32, 0x00000000
#define ROFF_MSPOD_P2P_FLAGS_MODE	0x19c /* OFFSET 0x1C  | Miscellaneous Control/Status */ 
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE	 0x019c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_P2P_FLAGS_MODE */
	#define BLSB_MSPOD_P2P_FLAGS_MODE_ACTIVE_DMA	31
	#define BLSB_MSPOD_P2P_FLAGS_MODE_SRC_INT	30
	#define BLSB_MSPOD_P2P_FLAGS_MODE_DST_INT	29
	#define BLSB_MSPOD_P2P_FLAGS_MODE_TERM	28
	#define BLSB_MSPOD_P2P_FLAGS_MODE_RD_SWAP_ENDIAN	27
	#define BLSB_MSPOD_P2P_FLAGS_MODE_WR_SWAP_ENDIAN	26
	#define BLSB_MSPOD_P2P_FLAGS_MODE_SRC_ENDIANISM	25
	#define BLSB_MSPOD_P2P_FLAGS_MODE_DST_ENDIANISM	24
	#define BLSB_MSPOD_P2P_FLAGS_MODE_SUBUNIT_ID	20
	#define BLSB_MSPOD_P2P_FLAGS_MODE_XDMA_GAP	16
	#define BLSB_MSPOD_P2P_FLAGS_MODE_XBURST_SZ	12
	#define BLSB_MSPOD_P2P_FLAGS_MODE_BURST_SZ	8
	#define BLSB_MSPOD_P2P_FLAGS_MODE_READ_EN	7
	#define BLSB_MSPOD_P2P_FLAGS_MODE_SRC_ADDR_MODE	5
	#define BLSB_MSPOD_P2P_FLAGS_MODE_SRC_LINK_LIST	4
	#define BLSB_MSPOD_P2P_FLAGS_MODE_WRITE_EN	3
	#define BLSB_MSPOD_P2P_FLAGS_MODE_DST_ADDR_MODE	1
	#define BLSB_MSPOD_P2P_FLAGS_MODE_DST_LINK_LIST	0
	/* Register Bit Widths for MSPOD_P2P_FLAGS_MODE */
	#define BWID_MSPOD_P2P_FLAGS_MODE_ACTIVE_DMA	1
	#define BWID_MSPOD_P2P_FLAGS_MODE_SRC_INT	1
	#define BWID_MSPOD_P2P_FLAGS_MODE_DST_INT	1
	#define BWID_MSPOD_P2P_FLAGS_MODE_TERM	1
	#define BWID_MSPOD_P2P_FLAGS_MODE_RD_SWAP_ENDIAN	1
	#define BWID_MSPOD_P2P_FLAGS_MODE_WR_SWAP_ENDIAN	1
	#define BWID_MSPOD_P2P_FLAGS_MODE_SRC_ENDIANISM	1
	#define BWID_MSPOD_P2P_FLAGS_MODE_DST_ENDIANISM	1
	#define BWID_MSPOD_P2P_FLAGS_MODE_SUBUNIT_ID	4
	#define BWID_MSPOD_P2P_FLAGS_MODE_XDMA_GAP	4
	#define BWID_MSPOD_P2P_FLAGS_MODE_XBURST_SZ	4
	#define BWID_MSPOD_P2P_FLAGS_MODE_BURST_SZ	4
	#define BWID_MSPOD_P2P_FLAGS_MODE_READ_EN	1
	#define BWID_MSPOD_P2P_FLAGS_MODE_SRC_ADDR_MODE	2
	#define BWID_MSPOD_P2P_FLAGS_MODE_SRC_LINK_LIST	1
	#define BWID_MSPOD_P2P_FLAGS_MODE_WRITE_EN	1
	#define BWID_MSPOD_P2P_FLAGS_MODE_DST_ADDR_MODE	2
	#define BWID_MSPOD_P2P_FLAGS_MODE_DST_LINK_LIST	1
	/* Register Bit MASKS for MSPOD_P2P_FLAGS_MODE */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_ACTIVE_DMA	(1<<31) /* == 0x80000000:  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_SRC_INT	(1<<30) /* == 0x40000000:  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_DST_INT	(1<<29) /* == 0x20000000:  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_TERM	(1<<28) /* == 0x10000000:  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_RD_SWAP_ENDIAN	(1<<27) /* == 0x08000000:  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_WR_SWAP_ENDIAN	(1<<26) /* == 0x04000000:  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_SRC_ENDIANISM	(1<<25) /* == 0x02000000:  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_DST_ENDIANISM	(1<<24) /* == 0x01000000:  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_SUBUNIT_ID	0x00f00000 /*  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_XDMA_GAP	0x000f0000 /*  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_XBURST_SZ	0x0000f000 /*  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_BURST_SZ	0x00000f00 /*  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_READ_EN	(1<<7) /* == 0x00000080:  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_SRC_ADDR_MODE	0x00000060 /*  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_SRC_LINK_LIST	(1<<4) /* == 0x00000010:  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_WRITE_EN	(1<<3) /* == 0x00000008:  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_DST_ADDR_MODE	0x00000006 /*  */
	#define BMSK_MSPOD_P2P_FLAGS_MODE_DST_LINK_LIST	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_P2P_FLAGS_MODE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_ACTIVE_DMA	 0x019c, 31, 1, 0x80000000
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_SRC_INT	 0x019c, 30, 1, 0x40000000
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_DST_INT	 0x019c, 29, 1, 0x20000000
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_TERM	 0x019c, 28, 1, 0x10000000
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_RD_SWAP_ENDIAN	 0x019c, 27, 1, 0x08000000
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_WR_SWAP_ENDIAN	 0x019c, 26, 1, 0x04000000
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_SRC_ENDIANISM	 0x019c, 25, 1, 0x02000000
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_DST_ENDIANISM	 0x019c, 24, 1, 0x01000000
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_SUBUNIT_ID	 0x019c, 20, 4, 0x00f00000
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_XDMA_GAP	 0x019c, 16, 4, 0x000f0000
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_XBURST_SZ	 0x019c, 12, 4, 0x0000f000
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_BURST_SZ	 0x019c, 8, 4, 0x00000f00
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_READ_EN	 0x019c, 7, 1, 0x00000080
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_SRC_ADDR_MODE	 0x019c, 5, 2, 0x00000060
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_SRC_LINK_LIST	 0x019c, 4, 1, 0x00000010
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_WRITE_EN	 0x019c, 3, 1, 0x00000008
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_DST_ADDR_MODE	 0x019c, 1, 2, 0x00000006
	#define BITFIELD_MSPOD_P2P_FLAGS_MODE_DST_LINK_LIST	 0x019c, 0, 1, 0x00000001
#define ROFF_MSPOD_P2P_SRCDMA_START_A	0x1a0 /* OFFSET 0x20  | An alias of SRCDMA_START */ 
	#define BITFIELD_MSPOD_P2P_SRCDMA_START_A	 0x01a0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_P2P_SRCDMA_START_A */
	#define BLSB_MSPOD_P2P_SRCDMA_START_A_SRCDMA_ALIAS	0
	/* Register Bit Widths for MSPOD_P2P_SRCDMA_START_A */
	#define BWID_MSPOD_P2P_SRCDMA_START_A_SRCDMA_ALIAS	32
	/* Register Bit MASKS for MSPOD_P2P_SRCDMA_START_A */
	#define BMSK_MSPOD_P2P_SRCDMA_START_A_SRCDMA_ALIAS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_P2P_SRCDMA_START_A - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_P2P_SRCDMA_START_A_SRCDMA_ALIAS	 0x01a0, 0, 32, 0x00000000
#define ROFF_MSPOD_P2P_SRCDMA_BOT	0x1a4 /* OFFSET 0x24  | Bottom-address of the source circular-buffer */ 
	#define BITFIELD_MSPOD_P2P_SRCDMA_BOT	 0x01a4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_P2P_SRCDMA_BOT */
	#define BLSB_MSPOD_P2P_SRCDMA_BOT_SRCDMA_BOT	2
	#define BLSB_MSPOD_P2P_SRCDMA_BOT_SRC_CIRBUF_SHARE	0
	/* Register Bit Widths for MSPOD_P2P_SRCDMA_BOT */
	#define BWID_MSPOD_P2P_SRCDMA_BOT_SRCDMA_BOT	30
	#define BWID_MSPOD_P2P_SRCDMA_BOT_SRC_CIRBUF_SHARE	2
	/* Register Bit MASKS for MSPOD_P2P_SRCDMA_BOT */
	#define BMSK_MSPOD_P2P_SRCDMA_BOT_SRCDMA_BOT	0xfffffffc /*  */
	#define BMSK_MSPOD_P2P_SRCDMA_BOT_SRC_CIRBUF_SHARE	0x00000003 /*  */
	/* Register BITFIELD for MSPOD_P2P_SRCDMA_BOT - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_P2P_SRCDMA_BOT_SRCDMA_BOT	 0x01a4, 2, 30, 0xfffffffc
	#define BITFIELD_MSPOD_P2P_SRCDMA_BOT_SRC_CIRBUF_SHARE	 0x01a4, 0, 2, 0x00000003
#define ROFF_MSPOD_P2P_SRCDMA_TOP	0x1a8 /* OFFSET 0x28  | Top-address of the source circular-buffer */ 
	#define BITFIELD_MSPOD_P2P_SRCDMA_TOP	 0x01a8, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_P2P_SRCDMA_TOP */
	#define BLSB_MSPOD_P2P_SRCDMA_TOP_ALL_BITS	0
	/* Register Bit Widths for MSPOD_P2P_SRCDMA_TOP */
	#define BWID_MSPOD_P2P_SRCDMA_TOP_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_P2P_SRCDMA_TOP */
	#define BMSK_MSPOD_P2P_SRCDMA_TOP_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_P2P_SRCDMA_TOP - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_P2P_SRCDMA_TOP_ALL_BITS	 0x01a8, 0, 32, 0x00000000
#define ROFF_MSPOD_P2P_DSTDMA_BOT	0x1ac /* OFFSET 0x2C  | Bottom-address of the destination circular-buffer */ 
	#define BITFIELD_MSPOD_P2P_DSTDMA_BOT	 0x01ac, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_P2P_DSTDMA_BOT */
	#define BLSB_MSPOD_P2P_DSTDMA_BOT_ALL_BITS	0
	/* Register Bit Widths for MSPOD_P2P_DSTDMA_BOT */
	#define BWID_MSPOD_P2P_DSTDMA_BOT_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_P2P_DSTDMA_BOT */
	#define BMSK_MSPOD_P2P_DSTDMA_BOT_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_P2P_DSTDMA_BOT - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_P2P_DSTDMA_BOT_ALL_BITS	 0x01ac, 0, 32, 0x00000000
#define ROFF_MSPOD_P2P_DSTDMA_TOP	0x1b0 /* OFFSET 0x30  | Top-address of the destination circular-buffer */ 
	#define BITFIELD_MSPOD_P2P_DSTDMA_TOP	 0x01b0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_P2P_DSTDMA_TOP */
	#define BLSB_MSPOD_P2P_DSTDMA_TOP_ALL_BITS	0
	/* Register Bit Widths for MSPOD_P2P_DSTDMA_TOP */
	#define BWID_MSPOD_P2P_DSTDMA_TOP_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_P2P_DSTDMA_TOP */
	#define BMSK_MSPOD_P2P_DSTDMA_TOP_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_P2P_DSTDMA_TOP - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_P2P_DSTDMA_TOP_ALL_BITS	 0x01b0, 0, 32, 0x00000000
#define ROFF_MSPOD_P2P_DSTDMA_SIZE	0x1b4 /* OFFSET 0x34  | Num of data bytes to be read from the destination location */ 
	#define BITFIELD_MSPOD_P2P_DSTDMA_SIZE	 0x01b4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_P2P_DSTDMA_SIZE */
	#define BLSB_MSPOD_P2P_DSTDMA_SIZE_ALL_BITS	0
	/* Register Bit Widths for MSPOD_P2P_DSTDMA_SIZE */
	#define BWID_MSPOD_P2P_DSTDMA_SIZE_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_P2P_DSTDMA_SIZE */
	#define BMSK_MSPOD_P2P_DSTDMA_SIZE_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_P2P_DSTDMA_SIZE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_P2P_DSTDMA_SIZE_ALL_BITS	 0x01b4, 0, 32, 0x00000000
#define ROFF_MSPOD_GFX_DMA_CURR_DESCR	0x1c8 /* OFFSET 0x08  | Current Descriptor Address Pointer */ 
	#define BITFIELD_MSPOD_GFX_DMA_CURR_DESCR	 0x01c8, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_GFX_DMA_CURR_DESCR */
	#define BLSB_MSPOD_GFX_DMA_CURR_DESCR_CURDESC	0
	/* Register Bit Widths for MSPOD_GFX_DMA_CURR_DESCR */
	#define BWID_MSPOD_GFX_DMA_CURR_DESCR_CURDESC	32
	/* Register Bit MASKS for MSPOD_GFX_DMA_CURR_DESCR */
	#define BMSK_MSPOD_GFX_DMA_CURR_DESCR_CURDESC	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_GFX_DMA_CURR_DESCR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_GFX_DMA_CURR_DESCR_CURDESC	 0x01c8, 0, 32, 0x00000000
#define ROFF_MSPOD_GFX_DMA_NEXT_DESCR	0x1cc /* OFFSET 0x0C  | Next Descriptor Address Pointer */ 
	#define BITFIELD_MSPOD_GFX_DMA_NEXT_DESCR	 0x01cc, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_GFX_DMA_NEXT_DESCR */
	#define BLSB_MSPOD_GFX_DMA_NEXT_DESCR_NEXTDESC	2
	#define BLSB_MSPOD_GFX_DMA_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	1
	#define BLSB_MSPOD_GFX_DMA_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	0
	/* Register Bit Widths for MSPOD_GFX_DMA_NEXT_DESCR */
	#define BWID_MSPOD_GFX_DMA_NEXT_DESCR_NEXTDESC	30
	#define BWID_MSPOD_GFX_DMA_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	1
	#define BWID_MSPOD_GFX_DMA_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	1
	/* Register Bit MASKS for MSPOD_GFX_DMA_NEXT_DESCR */
	#define BMSK_MSPOD_GFX_DMA_NEXT_DESCR_NEXTDESC	0xfffffffc /*  */
	#define BMSK_MSPOD_GFX_DMA_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	(1<<1) /* == 0x00000002:  */
	#define BMSK_MSPOD_GFX_DMA_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_GFX_DMA_NEXT_DESCR - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_GFX_DMA_NEXT_DESCR_NEXTDESC	 0x01cc, 2, 30, 0xfffffffc
	#define BITFIELD_MSPOD_GFX_DMA_NEXT_DESCR_DEST_CIRBUF_PTR_ENABLE	 0x01cc, 1, 1, 0x00000002
	#define BITFIELD_MSPOD_GFX_DMA_NEXT_DESCR_SRC_CIRBUF_PTR_ENABLE	 0x01cc, 0, 1, 0x00000001
#define ROFF_MSPOD_GFX_DMA_SRCDMA_START	0x1d0 /* OFFSET 0x10  | Start Address of the Source DMA buffer */ 
	#define BITFIELD_MSPOD_GFX_DMA_SRCDMA_START	 0x01d0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_GFX_DMA_SRCDMA_START */
	#define BLSB_MSPOD_GFX_DMA_SRCDMA_START_SRCDMA_START	0
	/* Register Bit Widths for MSPOD_GFX_DMA_SRCDMA_START */
	#define BWID_MSPOD_GFX_DMA_SRCDMA_START_SRCDMA_START	32
	/* Register Bit MASKS for MSPOD_GFX_DMA_SRCDMA_START */
	#define BMSK_MSPOD_GFX_DMA_SRCDMA_START_SRCDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_GFX_DMA_SRCDMA_START - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_GFX_DMA_SRCDMA_START_SRCDMA_START	 0x01d0, 0, 32, 0x00000000
#define ROFF_MSPOD_GFX_DMA_DSTDMA_START	0x1d4 /* OFFSET 0x14  | Start Address of the Source DMA buffer */ 
	#define BITFIELD_MSPOD_GFX_DMA_DSTDMA_START	 0x01d4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_GFX_DMA_DSTDMA_START */
	#define BLSB_MSPOD_GFX_DMA_DSTDMA_START_DSTDMA_START	0
	/* Register Bit Widths for MSPOD_GFX_DMA_DSTDMA_START */
	#define BWID_MSPOD_GFX_DMA_DSTDMA_START_DSTDMA_START	32
	/* Register Bit MASKS for MSPOD_GFX_DMA_DSTDMA_START */
	#define BMSK_MSPOD_GFX_DMA_DSTDMA_START_DSTDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_GFX_DMA_DSTDMA_START - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_GFX_DMA_DSTDMA_START_DSTDMA_START	 0x01d4, 0, 32, 0x00000000
#define ROFF_MSPOD_GFX_DMA_SRCDMA_SIZE	0x1d8 /* OFFSET 0x18  | Num of data bytes to be read from the source location */ 
	#define BITFIELD_MSPOD_GFX_DMA_SRCDMA_SIZE	 0x01d8, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_GFX_DMA_SRCDMA_SIZE */
	#define BLSB_MSPOD_GFX_DMA_SRCDMA_SIZE_DSTDMA_START	0
	/* Register Bit Widths for MSPOD_GFX_DMA_SRCDMA_SIZE */
	#define BWID_MSPOD_GFX_DMA_SRCDMA_SIZE_DSTDMA_START	32
	/* Register Bit MASKS for MSPOD_GFX_DMA_SRCDMA_SIZE */
	#define BMSK_MSPOD_GFX_DMA_SRCDMA_SIZE_DSTDMA_START	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_GFX_DMA_SRCDMA_SIZE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_GFX_DMA_SRCDMA_SIZE_DSTDMA_START	 0x01d8, 0, 32, 0x00000000
#define ROFF_MSPOD_GFX_DMA_FLAGS_MODE	0x1dc /* OFFSET 0x1C  | Miscellaneous Control/Status */ 
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE	 0x01dc, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_GFX_DMA_FLAGS_MODE */
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_ACTIVE_DMA	31
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_SRC_INT	30
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_DST_INT	29
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_TERM	28
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_RD_SWAP_ENDIAN	27
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_WR_SWAP_ENDIAN	26
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_SRC_ENDIANISM	25
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_DST_ENDIANISM	24
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_SUBUNIT_ID	20
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_XDMA_GAP	16
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_XBURST_SZ	12
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_BURST_SZ	8
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_READ_EN	7
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_SRC_ADDR_MODE	5
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_SRC_LINK_LIST	4
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_WRITE_EN	3
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_DST_ADDR_MODE	1
	#define BLSB_MSPOD_GFX_DMA_FLAGS_MODE_DST_LINK_LIST	0
	/* Register Bit Widths for MSPOD_GFX_DMA_FLAGS_MODE */
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_ACTIVE_DMA	1
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_SRC_INT	1
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_DST_INT	1
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_TERM	1
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_RD_SWAP_ENDIAN	1
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_WR_SWAP_ENDIAN	1
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_SRC_ENDIANISM	1
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_DST_ENDIANISM	1
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_SUBUNIT_ID	4
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_XDMA_GAP	4
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_XBURST_SZ	4
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_BURST_SZ	4
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_READ_EN	1
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_SRC_ADDR_MODE	2
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_SRC_LINK_LIST	1
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_WRITE_EN	1
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_DST_ADDR_MODE	2
	#define BWID_MSPOD_GFX_DMA_FLAGS_MODE_DST_LINK_LIST	1
	/* Register Bit MASKS for MSPOD_GFX_DMA_FLAGS_MODE */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_ACTIVE_DMA	(1<<31) /* == 0x80000000:  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_SRC_INT	(1<<30) /* == 0x40000000:  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_DST_INT	(1<<29) /* == 0x20000000:  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_TERM	(1<<28) /* == 0x10000000:  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_RD_SWAP_ENDIAN	(1<<27) /* == 0x08000000:  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_WR_SWAP_ENDIAN	(1<<26) /* == 0x04000000:  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_SRC_ENDIANISM	(1<<25) /* == 0x02000000:  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_DST_ENDIANISM	(1<<24) /* == 0x01000000:  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_SUBUNIT_ID	0x00f00000 /*  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_XDMA_GAP	0x000f0000 /*  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_XBURST_SZ	0x0000f000 /*  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_BURST_SZ	0x00000f00 /*  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_READ_EN	(1<<7) /* == 0x00000080:  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_SRC_ADDR_MODE	0x00000060 /*  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_SRC_LINK_LIST	(1<<4) /* == 0x00000010:  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_WRITE_EN	(1<<3) /* == 0x00000008:  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_DST_ADDR_MODE	0x00000006 /*  */
	#define BMSK_MSPOD_GFX_DMA_FLAGS_MODE_DST_LINK_LIST	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for MSPOD_GFX_DMA_FLAGS_MODE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_ACTIVE_DMA	 0x01dc, 31, 1, 0x80000000
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_SRC_INT	 0x01dc, 30, 1, 0x40000000
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_DST_INT	 0x01dc, 29, 1, 0x20000000
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_TERM	 0x01dc, 28, 1, 0x10000000
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_RD_SWAP_ENDIAN	 0x01dc, 27, 1, 0x08000000
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_WR_SWAP_ENDIAN	 0x01dc, 26, 1, 0x04000000
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_SRC_ENDIANISM	 0x01dc, 25, 1, 0x02000000
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_DST_ENDIANISM	 0x01dc, 24, 1, 0x01000000
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_SUBUNIT_ID	 0x01dc, 20, 4, 0x00f00000
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_XDMA_GAP	 0x01dc, 16, 4, 0x000f0000
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_XBURST_SZ	 0x01dc, 12, 4, 0x0000f000
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_BURST_SZ	 0x01dc, 8, 4, 0x00000f00
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_READ_EN	 0x01dc, 7, 1, 0x00000080
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_SRC_ADDR_MODE	 0x01dc, 5, 2, 0x00000060
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_SRC_LINK_LIST	 0x01dc, 4, 1, 0x00000010
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_WRITE_EN	 0x01dc, 3, 1, 0x00000008
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_DST_ADDR_MODE	 0x01dc, 1, 2, 0x00000006
	#define BITFIELD_MSPOD_GFX_DMA_FLAGS_MODE_DST_LINK_LIST	 0x01dc, 0, 1, 0x00000001
#define ROFF_MSPOD_GFX_DMA_SRCDMA_START_A	0x1e0 /* OFFSET 0x20  | An alias of SRCDMA_START */ 
	#define BITFIELD_MSPOD_GFX_DMA_SRCDMA_START_A	 0x01e0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_GFX_DMA_SRCDMA_START_A */
	#define BLSB_MSPOD_GFX_DMA_SRCDMA_START_A_SRCDMA_ALIAS	0
	/* Register Bit Widths for MSPOD_GFX_DMA_SRCDMA_START_A */
	#define BWID_MSPOD_GFX_DMA_SRCDMA_START_A_SRCDMA_ALIAS	32
	/* Register Bit MASKS for MSPOD_GFX_DMA_SRCDMA_START_A */
	#define BMSK_MSPOD_GFX_DMA_SRCDMA_START_A_SRCDMA_ALIAS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_GFX_DMA_SRCDMA_START_A - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_GFX_DMA_SRCDMA_START_A_SRCDMA_ALIAS	 0x01e0, 0, 32, 0x00000000
#define ROFF_MSPOD_GFX_DMA_SRCDMA_BOT	0x1e4 /* OFFSET 0x24  | Bottom-address of the source circular-buffer */ 
	#define BITFIELD_MSPOD_GFX_DMA_SRCDMA_BOT	 0x01e4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_GFX_DMA_SRCDMA_BOT */
	#define BLSB_MSPOD_GFX_DMA_SRCDMA_BOT_SRCDMA_BOT	2
	#define BLSB_MSPOD_GFX_DMA_SRCDMA_BOT_SRC_CIRBUF_SHARE	0
	/* Register Bit Widths for MSPOD_GFX_DMA_SRCDMA_BOT */
	#define BWID_MSPOD_GFX_DMA_SRCDMA_BOT_SRCDMA_BOT	30
	#define BWID_MSPOD_GFX_DMA_SRCDMA_BOT_SRC_CIRBUF_SHARE	2
	/* Register Bit MASKS for MSPOD_GFX_DMA_SRCDMA_BOT */
	#define BMSK_MSPOD_GFX_DMA_SRCDMA_BOT_SRCDMA_BOT	0xfffffffc /*  */
	#define BMSK_MSPOD_GFX_DMA_SRCDMA_BOT_SRC_CIRBUF_SHARE	0x00000003 /*  */
	/* Register BITFIELD for MSPOD_GFX_DMA_SRCDMA_BOT - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_GFX_DMA_SRCDMA_BOT_SRCDMA_BOT	 0x01e4, 2, 30, 0xfffffffc
	#define BITFIELD_MSPOD_GFX_DMA_SRCDMA_BOT_SRC_CIRBUF_SHARE	 0x01e4, 0, 2, 0x00000003
#define ROFF_MSPOD_GFX_DMA_SRCDMA_TOP	0x1e8 /* OFFSET 0x28  | Top-address of the source circular-buffer */ 
	#define BITFIELD_MSPOD_GFX_DMA_SRCDMA_TOP	 0x01e8, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_GFX_DMA_SRCDMA_TOP */
	#define BLSB_MSPOD_GFX_DMA_SRCDMA_TOP_ALL_BITS	0
	/* Register Bit Widths for MSPOD_GFX_DMA_SRCDMA_TOP */
	#define BWID_MSPOD_GFX_DMA_SRCDMA_TOP_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_GFX_DMA_SRCDMA_TOP */
	#define BMSK_MSPOD_GFX_DMA_SRCDMA_TOP_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_GFX_DMA_SRCDMA_TOP - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_GFX_DMA_SRCDMA_TOP_ALL_BITS	 0x01e8, 0, 32, 0x00000000
#define ROFF_MSPOD_GFX_DMA_DSTDMA_BOT	0x1ec /* OFFSET 0x2C  | Bottom-address of the destination circular-buffer */ 
	#define BITFIELD_MSPOD_GFX_DMA_DSTDMA_BOT	 0x01ec, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_GFX_DMA_DSTDMA_BOT */
	#define BLSB_MSPOD_GFX_DMA_DSTDMA_BOT_ALL_BITS	0
	/* Register Bit Widths for MSPOD_GFX_DMA_DSTDMA_BOT */
	#define BWID_MSPOD_GFX_DMA_DSTDMA_BOT_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_GFX_DMA_DSTDMA_BOT */
	#define BMSK_MSPOD_GFX_DMA_DSTDMA_BOT_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_GFX_DMA_DSTDMA_BOT - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_GFX_DMA_DSTDMA_BOT_ALL_BITS	 0x01ec, 0, 32, 0x00000000
#define ROFF_MSPOD_GFX_DMA_DSTDMA_TOP	0x1f0 /* OFFSET 0x30  | Top-address of the destination circular-buffer */ 
	#define BITFIELD_MSPOD_GFX_DMA_DSTDMA_TOP	 0x01f0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_GFX_DMA_DSTDMA_TOP */
	#define BLSB_MSPOD_GFX_DMA_DSTDMA_TOP_ALL_BITS	0
	/* Register Bit Widths for MSPOD_GFX_DMA_DSTDMA_TOP */
	#define BWID_MSPOD_GFX_DMA_DSTDMA_TOP_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_GFX_DMA_DSTDMA_TOP */
	#define BMSK_MSPOD_GFX_DMA_DSTDMA_TOP_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_GFX_DMA_DSTDMA_TOP - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_GFX_DMA_DSTDMA_TOP_ALL_BITS	 0x01f0, 0, 32, 0x00000000
#define ROFF_MSPOD_GFX_DMA_DSTDMA_SIZE	0x1f4 /* OFFSET 0x34  | Num of data bytes to be read from the destination location */ 
	#define BITFIELD_MSPOD_GFX_DMA_DSTDMA_SIZE	 0x01f4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for MSPOD_GFX_DMA_DSTDMA_SIZE */
	#define BLSB_MSPOD_GFX_DMA_DSTDMA_SIZE_ALL_BITS	0
	/* Register Bit Widths for MSPOD_GFX_DMA_DSTDMA_SIZE */
	#define BWID_MSPOD_GFX_DMA_DSTDMA_SIZE_ALL_BITS	32
	/* Register Bit MASKS for MSPOD_GFX_DMA_DSTDMA_SIZE */
	#define BMSK_MSPOD_GFX_DMA_DSTDMA_SIZE_ALL_BITS	0x00000000 /*  */
	/* Register BITFIELD for MSPOD_GFX_DMA_DSTDMA_SIZE - roff, lsb, width, mask */
	#define BITFIELD_MSPOD_GFX_DMA_DSTDMA_SIZE_ALL_BITS	 0x01f4, 0, 32, 0x00000000


/* Module MSPOD SPECIFIC SVEN Events */


#define SVEN_MODULE_EVENT_MSPOD_INIT	0x1
#define SVEN_MODULE_EVENT_MSPOD_WRITE_START	0x2
#define SVEN_MODULE_EVENT_MSPOD_WRITE_END	0x3
#define SVEN_MODULE_EVENT_MSPOD_READ_START	0x4
#define SVEN_MODULE_EVENT_MSPOD_READ_END	0x5
#define SVEN_MODULE_EVENT_MSPOD_VNI_WRITE_START	0x6
#define SVEN_MODULE_EVENT_MSPOD_VNI_WRITE_END	0x7
#define SVEN_MODULE_EVENT_MSPOD_VNI_READ_START	0x8
#define SVEN_MODULE_EVENT_MSPOD_VNI_READ_END	0x9
#define SVEN_MODULE_EVENT_MSPOD_ISR	0xa
#define SVEN_MODULE_EVENT_MSPOD_IR_DETECT	0xb
#define SVEN_MODULE_EVENT_MSPOD_TX_TIMEOUT	0xc
#define SVEN_MODULE_EVENT_MSPOD_RX_TIMEOUT	0xd
#define SVEN_MODULE_EVENT_MSPOD_CTU_FAILURE	0xe
#define SVEN_MODULE_EVENT_MSPOD_RX_NOTIFIED	0x10
#define SVEN_MODULE_EVENT_MSPOD_RX_ISR_START	0x11
#define SVEN_MODULE_EVENT_MSPOD_RX_ISR_END	0x12
#define SVEN_MODULE_EVENT_MSPOD_RX_NETWORK	0x13
#define SVEN_MODULE_EVENT_MSPOD_CLOSE_START	0x14
#define SVEN_MODULE_EVENT_MSPOD_OPEN_START	0x15
#define SVEN_MODULE_EVENT_MSPOD_OPEN_END	0x16
#define SVEN_MODULE_EVENT_MSPOD_CLOSE_END	0x17
#define SVEN_MODULE_EVENT_MSPOD_SET_FLOW_ID	0x18
#define SVEN_MODULE_EVENT_MSPOD_GET_FLOW_ID	0x19
#define SVEN_MODULE_EVENT_MSPOD_SCTL_ENABLE	0x1a
#define SVEN_MODULE_EVENT_MSPOD_HOST_RESET	0x1b
#define SVEN_MODULE_EVENT_MSPOD_TX_ISR	0x1c
#define SVEN_MODULE_EVENT_MSPOD_START_OF_DATA	0x1d
#define SVEN_MODULE_EVENT_MSPOD_OVERFLOW	0x1e
#define SVEN_MODULE_EVENT_MSPOD_WRITE_LOCK	0x1f
#define SVEN_MODULE_EVENT_MSPOD_IOCTL_START	0x20
#define SVEN_MODULE_EVENT_MSPOD_IOCTL_END	0x21


#endif /* MSPOD_REGOFFS_H */
