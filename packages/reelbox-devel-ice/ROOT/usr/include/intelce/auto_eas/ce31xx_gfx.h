#ifndef GFX_REGOFFS_H
#define GFX_REGOFFS_H 1
#warning including deprecated file GFX_REGOFFS_H please use sanitized filename
/*

  This file is provided under a dual BSD/GPLv2 license.  When using or 
  redistributing this file, you may do so under either license.

  GPL LICENSE SUMMARY

  Copyright(c) 2007-2009 Intel Corporation. All rights reserved.

  This program is free software; you can redistribute it and/or modify 
  it under the terms of version 2 of the GNU General Public License as
  published by the Free Software Foundation.

  This program is distributed in the hope that it will be useful, but 
  WITHOUT ANY WARRANTY; without even the implied warranty of 
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
  General Public License for more details.

  You should have received a copy of the GNU General Public License 
  along with this program; if not, write to the Free Software 
  Foundation, Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
  The full GNU General Public License is included in this distribution 
  in the file called LICENSE.GPL.

  Contact Information:
    Intel Corporation
    2200 Mission College Blvd.
    Santa Clara, CA  97052

  BSD LICENSE 

  Copyright(c) 2007-2009 Intel Corporation. All rights reserved.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without 
  modification, are permitted provided that the following conditions 
  are met:

    * Redistributions of source code must retain the above copyright 
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright 
      notice, this list of conditions and the following disclaimer in 
      the documentation and/or other materials provided with the 
      distribution.
    * Neither the name of Intel Corporation nor the names of its 
      contributors may be used to endorse or promote products derived 
      from this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*/


/* Module GFX CSR Definitions */
/* WARNING: This file is Machine Generated using sven_csr.c */


#define ROFF_GFX_GLOBREG_SW_RESET	0x80 /* software reset */ 
	#define BITFIELD_GFX_GLOBREG_SW_RESET	 0x0080, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_SW_RESET */
	#define BLSB_GFX_GLOBREG_SW_RESET_BIF_RST	8
	#define BLSB_GFX_GLOBREG_SW_RESET_TA_RST	4
	#define BLSB_GFX_GLOBREG_SW_RESET_PVR_RST	0
	/* Register Bit Widths for GFX_GLOBREG_SW_RESET */
	#define BWID_GFX_GLOBREG_SW_RESET_BIF_RST	1
	#define BWID_GFX_GLOBREG_SW_RESET_TA_RST	1
	#define BWID_GFX_GLOBREG_SW_RESET_PVR_RST	1
	/* Register Bit MASKS for GFX_GLOBREG_SW_RESET */
	#define BMSK_GFX_GLOBREG_SW_RESET_BIF_RST	(1<<8) /* == 0x00000100:  */
	#define BMSK_GFX_GLOBREG_SW_RESET_TA_RST	(1<<4) /* == 0x00000010:  */
	#define BMSK_GFX_GLOBREG_SW_RESET_PVR_RST	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_GLOBREG_SW_RESET - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_SW_RESET_BIF_RST	 0x0080, 8, 1, 0x00000100
	#define BITFIELD_GFX_GLOBREG_SW_RESET_TA_RST	 0x0080, 4, 1, 0x00000010
	#define BITFIELD_GFX_GLOBREG_SW_RESET_PVR_RST	 0x0080, 0, 1, 0x00000001
#define ROFF_GFX_GLOBREG_CLK_RATIO	0x90 /* Clock Ratio Status */ 
	#define BITFIELD_GFX_GLOBREG_CLK_RATIO	 0x0090, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_CLK_RATIO */
	#define BLSB_GFX_GLOBREG_CLK_RATIO_CLK_RATIO	0
	/* Register Bit Widths for GFX_GLOBREG_CLK_RATIO */
	#define BWID_GFX_GLOBREG_CLK_RATIO_CLK_RATIO	2
	/* Register Bit MASKS for GFX_GLOBREG_CLK_RATIO */
	#define BMSK_GFX_GLOBREG_CLK_RATIO_CLK_RATIO	0x00000003 /*  */
	/* Register BITFIELD for GFX_GLOBREG_CLK_RATIO - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_CLK_RATIO_CLK_RATIO	 0x0090, 0, 2, 0x00000003
#define ROFF_GFX_GLOBREG_IDLE_COUNT	0x100 /* 2D Idle Timeout Clock Cycle Count */ 
	#define BITFIELD_GFX_GLOBREG_IDLE_COUNT	 0x0100, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_IDLE_COUNT */
	#define BLSB_GFX_GLOBREG_IDLE_COUNT_IDLE_COUNT	0
	/* Register Bit Widths for GFX_GLOBREG_IDLE_COUNT */
	#define BWID_GFX_GLOBREG_IDLE_COUNT_IDLE_COUNT	15
	/* Register Bit MASKS for GFX_GLOBREG_IDLE_COUNT */
	#define BMSK_GFX_GLOBREG_IDLE_COUNT_IDLE_COUNT	0x00007fff /*  */
	/* Register BITFIELD for GFX_GLOBREG_IDLE_COUNT - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_IDLE_COUNT_IDLE_COUNT	 0x0100, 0, 15, 0x00007fff
#define ROFF_GFX_GLOBREG_ACTIVITY_COUNT	0x104 /* Startup Timeout Clock Cycle Count */ 
	#define BITFIELD_GFX_GLOBREG_ACTIVITY_COUNT	 0x0104, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_ACTIVITY_COUNT */
	#define BLSB_GFX_GLOBREG_ACTIVITY_COUNT_ACTIVITY_COUNT	0
	/* Register Bit Widths for GFX_GLOBREG_ACTIVITY_COUNT */
	#define BWID_GFX_GLOBREG_ACTIVITY_COUNT_ACTIVITY_COUNT	7
	/* Register Bit MASKS for GFX_GLOBREG_ACTIVITY_COUNT */
	#define BMSK_GFX_GLOBREG_ACTIVITY_COUNT_ACTIVITY_COUNT	0x0000007f /*  */
	/* Register BITFIELD for GFX_GLOBREG_ACTIVITY_COUNT - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_ACTIVITY_COUNT_ACTIVITY_COUNT	 0x0104, 0, 7, 0x0000007f
#define ROFF_GFX_GLOBREG_FPUPERPVAL	0x614 /* 3D FPU Perpendicular Com */ 
	#define BITFIELD_GFX_GLOBREG_FPUPERPVAL	 0x0614, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_FPUPERPVAL */
	#define BLSB_GFX_GLOBREG_FPUPERPVAL_FPU_PERP_VAL	4
	/* Register Bit Widths for GFX_GLOBREG_FPUPERPVAL */
	#define BWID_GFX_GLOBREG_FPUPERPVAL_FPU_PERP_VAL	27
	/* Register Bit MASKS for GFX_GLOBREG_FPUPERPVAL */
	#define BMSK_GFX_GLOBREG_FPUPERPVAL_FPU_PERP_VAL	0x7ffffff0 /*  */
	/* Register BITFIELD for GFX_GLOBREG_FPUPERPVAL - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_FPUPERPVAL_FPU_PERP_VAL	 0x0614, 4, 27, 0x7ffffff0
#define ROFF_GFX_GLOBREG_FPUCULLVAL	0x618 /* 3D FPU Cull Value */ 
	#define BITFIELD_GFX_GLOBREG_FPUCULLVAL	 0x0618, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_FPUCULLVAL */
	#define BLSB_GFX_GLOBREG_FPUCULLVAL_FPU_CULL_VAL	4
	/* Register Bit Widths for GFX_GLOBREG_FPUCULLVAL */
	#define BWID_GFX_GLOBREG_FPUCULLVAL_FPU_CULL_VAL	27
	/* Register Bit MASKS for GFX_GLOBREG_FPUCULLVAL */
	#define BMSK_GFX_GLOBREG_FPUCULLVAL_FPU_CULL_VAL	0x7ffffff0 /*  */
	/* Register BITFIELD for GFX_GLOBREG_FPUCULLVAL - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_FPUCULLVAL_FPU_CULL_VAL	 0x0618, 4, 27, 0x7ffffff0
#define ROFF_GFX_GLOBREG_3DPIXSAMP	0x61c /* 3D Pixel Sampling */ 
	#define BITFIELD_GFX_GLOBREG_3DPIXSAMP	 0x061c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_3DPIXSAMP */
	#define BLSB_GFX_GLOBREG_3DPIXSAMP_DCALC_MODE	16
	#define BLSB_GFX_GLOBREG_3DPIXSAMP_FAST_ANTI_ALIAS	3
	#define BLSB_GFX_GLOBREG_3DPIXSAMP_TSP_TEXEL_SAMPLE_POS	2
	#define BLSB_GFX_GLOBREG_3DPIXSAMP_TSP_PIXEL_SAMPLE_POS	1
	#define BLSB_GFX_GLOBREG_3DPIXSAMP_FPU_SAMPLE_POS	0
	/* Register Bit Widths for GFX_GLOBREG_3DPIXSAMP */
	#define BWID_GFX_GLOBREG_3DPIXSAMP_DCALC_MODE	2
	#define BWID_GFX_GLOBREG_3DPIXSAMP_FAST_ANTI_ALIAS	1
	#define BWID_GFX_GLOBREG_3DPIXSAMP_TSP_TEXEL_SAMPLE_POS	1
	#define BWID_GFX_GLOBREG_3DPIXSAMP_TSP_PIXEL_SAMPLE_POS	1
	#define BWID_GFX_GLOBREG_3DPIXSAMP_FPU_SAMPLE_POS	1
	/* Register Bit MASKS for GFX_GLOBREG_3DPIXSAMP */
	#define BMSK_GFX_GLOBREG_3DPIXSAMP_DCALC_MODE	0x00030000 /*  */
	#define BMSK_GFX_GLOBREG_3DPIXSAMP_FAST_ANTI_ALIAS	(1<<3) /* == 0x00000008:  */
	#define BMSK_GFX_GLOBREG_3DPIXSAMP_TSP_TEXEL_SAMPLE_POS	(1<<2) /* == 0x00000004:  */
	#define BMSK_GFX_GLOBREG_3DPIXSAMP_TSP_PIXEL_SAMPLE_POS	(1<<1) /* == 0x00000002:  */
	#define BMSK_GFX_GLOBREG_3DPIXSAMP_FPU_SAMPLE_POS	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_GLOBREG_3DPIXSAMP - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_3DPIXSAMP_DCALC_MODE	 0x061c, 16, 2, 0x00030000
	#define BITFIELD_GFX_GLOBREG_3DPIXSAMP_FAST_ANTI_ALIAS	 0x061c, 3, 1, 0x00000008
	#define BITFIELD_GFX_GLOBREG_3DPIXSAMP_TSP_TEXEL_SAMPLE_POS	 0x061c, 2, 1, 0x00000004
	#define BITFIELD_GFX_GLOBREG_3DPIXSAMP_TSP_PIXEL_SAMPLE_POS	 0x061c, 1, 1, 0x00000002
	#define BITFIELD_GFX_GLOBREG_3DPIXSAMP_FPU_SAMPLE_POS	 0x061c, 0, 1, 0x00000001
#define ROFF_GFX_GLOBREG_CK1	0x624 /* 3D Colour Key 1 */ 
	#define BITFIELD_GFX_GLOBREG_CK1	 0x0624, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_CK1 */
	#define BLSB_GFX_GLOBREG_CK1_CK1_R	16
	#define BLSB_GFX_GLOBREG_CK1_CK1_G	8
	#define BLSB_GFX_GLOBREG_CK1_CK1_B	0
	/* Register Bit Widths for GFX_GLOBREG_CK1 */
	#define BWID_GFX_GLOBREG_CK1_CK1_R	8
	#define BWID_GFX_GLOBREG_CK1_CK1_G	8
	#define BWID_GFX_GLOBREG_CK1_CK1_B	8
	/* Register Bit MASKS for GFX_GLOBREG_CK1 */
	#define BMSK_GFX_GLOBREG_CK1_CK1_R	0x00ff0000 /*  */
	#define BMSK_GFX_GLOBREG_CK1_CK1_G	0x0000ff00 /*  */
	#define BMSK_GFX_GLOBREG_CK1_CK1_B	0x000000ff /*  */
	/* Register BITFIELD for GFX_GLOBREG_CK1 - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_CK1_CK1_R	 0x0624, 16, 8, 0x00ff0000
	#define BITFIELD_GFX_GLOBREG_CK1_CK1_G	 0x0624, 8, 8, 0x0000ff00
	#define BITFIELD_GFX_GLOBREG_CK1_CK1_B	 0x0624, 0, 8, 0x000000ff
#define ROFF_GFX_GLOBREG_CK2	0x628 /* 3D Colour Key 2 */ 
	#define BITFIELD_GFX_GLOBREG_CK2	 0x0628, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_CK2 */
	#define BLSB_GFX_GLOBREG_CK2_CK2_R	16
	#define BLSB_GFX_GLOBREG_CK2_CK2_G	8
	#define BLSB_GFX_GLOBREG_CK2_CK2_B	0
	/* Register Bit Widths for GFX_GLOBREG_CK2 */
	#define BWID_GFX_GLOBREG_CK2_CK2_R	8
	#define BWID_GFX_GLOBREG_CK2_CK2_G	8
	#define BWID_GFX_GLOBREG_CK2_CK2_B	8
	/* Register Bit MASKS for GFX_GLOBREG_CK2 */
	#define BMSK_GFX_GLOBREG_CK2_CK2_R	0x00ff0000 /*  */
	#define BMSK_GFX_GLOBREG_CK2_CK2_G	0x0000ff00 /*  */
	#define BMSK_GFX_GLOBREG_CK2_CK2_B	0x000000ff /*  */
	/* Register BITFIELD for GFX_GLOBREG_CK2 - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_CK2_CK2_R	 0x0628, 16, 8, 0x00ff0000
	#define BITFIELD_GFX_GLOBREG_CK2_CK2_G	 0x0628, 8, 8, 0x0000ff00
	#define BITFIELD_GFX_GLOBREG_CK2_CK2_B	 0x0628, 0, 8, 0x000000ff
#define ROFF_GFX_GLOBREG_CKUV	0x62c /* 3D Colour Key UV */ 
	#define BITFIELD_GFX_GLOBREG_CKUV	 0x062c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_CKUV */
	#define BLSB_GFX_GLOBREG_CKUV_CK_U	8
	#define BLSB_GFX_GLOBREG_CKUV_CK_V	0
	/* Register Bit Widths for GFX_GLOBREG_CKUV */
	#define BWID_GFX_GLOBREG_CKUV_CK_U	8
	#define BWID_GFX_GLOBREG_CKUV_CK_V	8
	/* Register Bit MASKS for GFX_GLOBREG_CKUV */
	#define BMSK_GFX_GLOBREG_CKUV_CK_U	0x0000ff00 /*  */
	#define BMSK_GFX_GLOBREG_CKUV_CK_V	0x000000ff /*  */
	/* Register BITFIELD for GFX_GLOBREG_CKUV - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_CKUV_CK_U	 0x062c, 8, 8, 0x0000ff00
	#define BITFIELD_GFX_GLOBREG_CKUV_CK_V	 0x062c, 0, 8, 0x000000ff
#define ROFF_GFX_GLOBREG_CKMASK	0x630 /* 3D Colour Key Mask */ 
	#define BITFIELD_GFX_GLOBREG_CKMASK	 0x0630, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_CKMASK */
	#define BLSB_GFX_GLOBREG_CKMASK_CK_MASK	0
	/* Register Bit Widths for GFX_GLOBREG_CKMASK */
	#define BWID_GFX_GLOBREG_CKMASK_CK_MASK	3
	/* Register Bit MASKS for GFX_GLOBREG_CKMASK */
	#define BMSK_GFX_GLOBREG_CKMASK_CK_MASK	0x00000007 /*  */
	/* Register BITFIELD for GFX_GLOBREG_CKMASK - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_CKMASK_CK_MASK	 0x0630, 0, 3, 0x00000007
#define ROFF_GFX_GLOBREG_FOGCOLVERT	0x63c /* 3D Vertex Fog Colour */ 
	#define BITFIELD_GFX_GLOBREG_FOGCOLVERT	 0x063c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_FOGCOLVERT */
	#define BLSB_GFX_GLOBREG_FOGCOLVERT_VERTEX_FOG_COLOR	0
	/* Register Bit Widths for GFX_GLOBREG_FOGCOLVERT */
	#define BWID_GFX_GLOBREG_FOGCOLVERT_VERTEX_FOG_COLOR	24
	/* Register Bit MASKS for GFX_GLOBREG_FOGCOLVERT */
	#define BMSK_GFX_GLOBREG_FOGCOLVERT_VERTEX_FOG_COLOR	0x00ffffff /*  */
	/* Register BITFIELD for GFX_GLOBREG_FOGCOLVERT - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_FOGCOLVERT_VERTEX_FOG_COLOR	 0x063c, 0, 24, 0x00ffffff
#define ROFF_GFX_GLOBREG_VERTFOGSTATUS	0x640 /* 3D Vertex Fog Status */ 
	#define BITFIELD_GFX_GLOBREG_VERTFOGSTATUS	 0x0640, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_VERTFOGSTATUS */
	#define BLSB_GFX_GLOBREG_VERTFOGSTATUS_VERTEX_FOG_COLOR	0
	/* Register Bit Widths for GFX_GLOBREG_VERTFOGSTATUS */
	#define BWID_GFX_GLOBREG_VERTFOGSTATUS_VERTEX_FOG_COLOR	24
	/* Register Bit MASKS for GFX_GLOBREG_VERTFOGSTATUS */
	#define BMSK_GFX_GLOBREG_VERTFOGSTATUS_VERTEX_FOG_COLOR	0x00ffffff /*  */
	/* Register BITFIELD for GFX_GLOBREG_VERTFOGSTATUS - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_VERTFOGSTATUS_VERTEX_FOG_COLOR	 0x0640, 0, 24, 0x00ffffff
#define ROFF_GFX_GLOBREG_SCALERCTL	0x644 /* 3D Scaler Control */ 
	#define BITFIELD_GFX_GLOBREG_SCALERCTL	 0x0644, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_SCALERCTL */
	#define BLSB_GFX_GLOBREG_SCALERCTL_HORIZONTAL_UPSCALE	3
	#define BLSB_GFX_GLOBREG_SCALERCTL_VERTICAL_UPSCALE	2
	#define BLSB_GFX_GLOBREG_SCALERCTL_HORIZONTAL_SCALE	1
	#define BLSB_GFX_GLOBREG_SCALERCTL_VERTICAL_SCALE	0
	/* Register Bit Widths for GFX_GLOBREG_SCALERCTL */
	#define BWID_GFX_GLOBREG_SCALERCTL_HORIZONTAL_UPSCALE	1
	#define BWID_GFX_GLOBREG_SCALERCTL_VERTICAL_UPSCALE	1
	#define BWID_GFX_GLOBREG_SCALERCTL_HORIZONTAL_SCALE	1
	#define BWID_GFX_GLOBREG_SCALERCTL_VERTICAL_SCALE	1
	/* Register Bit MASKS for GFX_GLOBREG_SCALERCTL */
	#define BMSK_GFX_GLOBREG_SCALERCTL_HORIZONTAL_UPSCALE	(1<<3) /* == 0x00000008:  */
	#define BMSK_GFX_GLOBREG_SCALERCTL_VERTICAL_UPSCALE	(1<<2) /* == 0x00000004:  */
	#define BMSK_GFX_GLOBREG_SCALERCTL_HORIZONTAL_SCALE	(1<<1) /* == 0x00000002:  */
	#define BMSK_GFX_GLOBREG_SCALERCTL_VERTICAL_SCALE	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_GLOBREG_SCALERCTL - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_SCALERCTL_HORIZONTAL_UPSCALE	 0x0644, 3, 1, 0x00000008
	#define BITFIELD_GFX_GLOBREG_SCALERCTL_VERTICAL_UPSCALE	 0x0644, 2, 1, 0x00000004
	#define BITFIELD_GFX_GLOBREG_SCALERCTL_HORIZONTAL_SCALE	 0x0644, 1, 1, 0x00000002
	#define BITFIELD_GFX_GLOBREG_SCALERCTL_VERTICAL_SCALE	 0x0644, 0, 1, 0x00000001
#define ROFF_GFX_GLOBREG_BLENDCTL	0x648 /* 3D Blend Control */ 
	#define BITFIELD_GFX_GLOBREG_BLENDCTL	 0x0648, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_BLENDCTL */
	#define BLSB_GFX_GLOBREG_BLENDCTL_FORCE_ALPHA	16
	#define BLSB_GFX_GLOBREG_BLENDCTL_SUBTRACT_128	0
	/* Register Bit Widths for GFX_GLOBREG_BLENDCTL */
	#define BWID_GFX_GLOBREG_BLENDCTL_FORCE_ALPHA	1
	#define BWID_GFX_GLOBREG_BLENDCTL_SUBTRACT_128	1
	/* Register Bit MASKS for GFX_GLOBREG_BLENDCTL */
	#define BMSK_GFX_GLOBREG_BLENDCTL_FORCE_ALPHA	(1<<16) /* == 0x00010000:  */
	#define BMSK_GFX_GLOBREG_BLENDCTL_SUBTRACT_128	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_GLOBREG_BLENDCTL - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_BLENDCTL_FORCE_ALPHA	 0x0648, 16, 1, 0x00010000
	#define BITFIELD_GFX_GLOBREG_BLENDCTL_SUBTRACT_128	 0x0648, 0, 1, 0x00000001
#define ROFF_GFX_GLOBREG_ARGBSUM	0x64c /* 3D Blend ARGB Sum */ 
	#define BITFIELD_GFX_GLOBREG_ARGBSUM	 0x064c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_ARGBSUM */
	#define BLSB_GFX_GLOBREG_ARGBSUM_ARGB_SUM	0
	/* Register Bit Widths for GFX_GLOBREG_ARGBSUM */
	#define BWID_GFX_GLOBREG_ARGBSUM_ARGB_SUM	1
	/* Register Bit MASKS for GFX_GLOBREG_ARGBSUM */
	#define BMSK_GFX_GLOBREG_ARGBSUM_ARGB_SUM	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_GLOBREG_ARGBSUM - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_ARGBSUM_ARGB_SUM	 0x064c, 0, 1, 0x00000001
#define ROFF_GFX_GLOBREG_FBCTL	0x650 /* 3D Write Control */ 
	#define BITFIELD_GFX_GLOBREG_FBCTL	 0x0650, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_FBCTL */
	#define BLSB_GFX_GLOBREG_FBCTL_FB_YSIZETWIDDLE	25
	#define BLSB_GFX_GLOBREG_FBCTL_FB_XSIZETWIDDLE	21
	#define BLSB_GFX_GLOBREG_FBCTL_FB_TWIDDLE	20
	#define BLSB_GFX_GLOBREG_FBCTL_FB_ALPHA_THRESHOLD	12
	#define BLSB_GFX_GLOBREG_FBCTL_FB_KVAL	4
	#define BLSB_GFX_GLOBREG_FBCTL_FB_DITHER	3
	#define BLSB_GFX_GLOBREG_FBCTL_FB_PACKMODE	0
	/* Register Bit Widths for GFX_GLOBREG_FBCTL */
	#define BWID_GFX_GLOBREG_FBCTL_FB_YSIZETWIDDLE	4
	#define BWID_GFX_GLOBREG_FBCTL_FB_XSIZETWIDDLE	4
	#define BWID_GFX_GLOBREG_FBCTL_FB_TWIDDLE	1
	#define BWID_GFX_GLOBREG_FBCTL_FB_ALPHA_THRESHOLD	8
	#define BWID_GFX_GLOBREG_FBCTL_FB_KVAL	8
	#define BWID_GFX_GLOBREG_FBCTL_FB_DITHER	1
	#define BWID_GFX_GLOBREG_FBCTL_FB_PACKMODE	3
	/* Register Bit MASKS for GFX_GLOBREG_FBCTL */
	#define BMSK_GFX_GLOBREG_FBCTL_FB_YSIZETWIDDLE	0x1e000000 /*  */
	#define BMSK_GFX_GLOBREG_FBCTL_FB_XSIZETWIDDLE	0x01e00000 /*  */
	#define BMSK_GFX_GLOBREG_FBCTL_FB_TWIDDLE	(1<<20) /* == 0x00100000:  */
	#define BMSK_GFX_GLOBREG_FBCTL_FB_ALPHA_THRESHOLD	0x000ff000 /*  */
	#define BMSK_GFX_GLOBREG_FBCTL_FB_KVAL	0x00000ff0 /*  */
	#define BMSK_GFX_GLOBREG_FBCTL_FB_DITHER	(1<<3) /* == 0x00000008:  */
	#define BMSK_GFX_GLOBREG_FBCTL_FB_PACKMODE	0x00000007 /*  */
	/* Register BITFIELD for GFX_GLOBREG_FBCTL - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_FBCTL_FB_YSIZETWIDDLE	 0x0650, 25, 4, 0x1e000000
	#define BITFIELD_GFX_GLOBREG_FBCTL_FB_XSIZETWIDDLE	 0x0650, 21, 4, 0x01e00000
	#define BITFIELD_GFX_GLOBREG_FBCTL_FB_TWIDDLE	 0x0650, 20, 1, 0x00100000
	#define BITFIELD_GFX_GLOBREG_FBCTL_FB_ALPHA_THRESHOLD	 0x0650, 12, 8, 0x000ff000
	#define BITFIELD_GFX_GLOBREG_FBCTL_FB_KVAL	 0x0650, 4, 8, 0x00000ff0
	#define BITFIELD_GFX_GLOBREG_FBCTL_FB_DITHER	 0x0650, 3, 1, 0x00000008
	#define BITFIELD_GFX_GLOBREG_FBCTL_FB_PACKMODE	 0x0650, 0, 3, 0x00000007
#define ROFF_GFX_GLOBREG_FBXCLIP	0x654 /* 3D Write X Clipping */ 
	#define BITFIELD_GFX_GLOBREG_FBXCLIP	 0x0654, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_FBXCLIP */
	#define BLSB_GFX_GLOBREG_FBXCLIP_FB_XCLIP_MAX	16
	#define BLSB_GFX_GLOBREG_FBXCLIP_FB_XCLIP_MIN	0
	/* Register Bit Widths for GFX_GLOBREG_FBXCLIP */
	#define BWID_GFX_GLOBREG_FBXCLIP_FB_XCLIP_MAX	11
	#define BWID_GFX_GLOBREG_FBXCLIP_FB_XCLIP_MIN	11
	/* Register Bit MASKS for GFX_GLOBREG_FBXCLIP */
	#define BMSK_GFX_GLOBREG_FBXCLIP_FB_XCLIP_MAX	0x07ff0000 /*  */
	#define BMSK_GFX_GLOBREG_FBXCLIP_FB_XCLIP_MIN	0x000007ff /*  */
	/* Register BITFIELD for GFX_GLOBREG_FBXCLIP - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_FBXCLIP_FB_XCLIP_MAX	 0x0654, 16, 11, 0x07ff0000
	#define BITFIELD_GFX_GLOBREG_FBXCLIP_FB_XCLIP_MIN	 0x0654, 0, 11, 0x000007ff
#define ROFF_GFX_GLOBREG_FBYCLIP	0x658 /* 3D Write Y Clipping */ 
	#define BITFIELD_GFX_GLOBREG_FBYCLIP	 0x0658, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_FBYCLIP */
	#define BLSB_GFX_GLOBREG_FBYCLIP_FB_YCLIP_MAX	16
	#define BLSB_GFX_GLOBREG_FBYCLIP_FB_YCLIP_MIN	0
	/* Register Bit Widths for GFX_GLOBREG_FBYCLIP */
	#define BWID_GFX_GLOBREG_FBYCLIP_FB_YCLIP_MAX	11
	#define BWID_GFX_GLOBREG_FBYCLIP_FB_YCLIP_MIN	11
	/* Register Bit MASKS for GFX_GLOBREG_FBYCLIP */
	#define BMSK_GFX_GLOBREG_FBYCLIP_FB_YCLIP_MAX	0x07ff0000 /*  */
	#define BMSK_GFX_GLOBREG_FBYCLIP_FB_YCLIP_MIN	0x000007ff /*  */
	/* Register BITFIELD for GFX_GLOBREG_FBYCLIP - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_FBYCLIP_FB_YCLIP_MAX	 0x0658, 16, 11, 0x07ff0000
	#define BITFIELD_GFX_GLOBREG_FBYCLIP_FB_YCLIP_MIN	 0x0658, 0, 11, 0x000007ff
#define ROFF_GFX_GLOBREG_FBSTART	0x65c /* 3D Render Address */ 
	#define BITFIELD_GFX_GLOBREG_FBSTART	 0x065c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_FBSTART */
	#define BLSB_GFX_GLOBREG_FBSTART_RENDER_ADDRESS	2
	/* Register Bit Widths for GFX_GLOBREG_FBSTART */
	#define BWID_GFX_GLOBREG_FBSTART_RENDER_ADDRESS	26
	/* Register Bit MASKS for GFX_GLOBREG_FBSTART */
	#define BMSK_GFX_GLOBREG_FBSTART_RENDER_ADDRESS	0x0ffffffc /*  */
	/* Register BITFIELD for GFX_GLOBREG_FBSTART - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_FBSTART_RENDER_ADDRESS	 0x065c, 2, 26, 0x0ffffffc
#define ROFF_GFX_GLOBREG_FBLINESTRIDE	0x660 /* 3D Write Stride */ 
	#define BITFIELD_GFX_GLOBREG_FBLINESTRIDE	 0x0660, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_FBLINESTRIDE */
	#define BLSB_GFX_GLOBREG_FBLINESTRIDE_FB_LINESTRIDE	0
	/* Register Bit Widths for GFX_GLOBREG_FBLINESTRIDE */
	#define BWID_GFX_GLOBREG_FBLINESTRIDE_FB_LINESTRIDE	12
	/* Register Bit MASKS for GFX_GLOBREG_FBLINESTRIDE */
	#define BMSK_GFX_GLOBREG_FBLINESTRIDE_FB_LINESTRIDE	0x00000fff /*  */
	/* Register BITFIELD for GFX_GLOBREG_FBLINESTRIDE - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_FBLINESTRIDE_FB_LINESTRIDE	 0x0660, 0, 12, 0x00000fff
#define ROFF_GFX_GLOBREG_LATENCYCOUNT	0x664 /* 3D Texture Latency */ 
	#define BITFIELD_GFX_GLOBREG_LATENCYCOUNT	 0x0664, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_LATENCYCOUNT */
	#define BLSB_GFX_GLOBREG_LATENCYCOUNT_Texture_Latency	0
	/* Register Bit Widths for GFX_GLOBREG_LATENCYCOUNT */
	#define BWID_GFX_GLOBREG_LATENCYCOUNT_Texture_Latency	4
	/* Register Bit MASKS for GFX_GLOBREG_LATENCYCOUNT */
	#define BMSK_GFX_GLOBREG_LATENCYCOUNT_Texture_Latency	0x0000000f /*  */
	/* Register BITFIELD for GFX_GLOBREG_LATENCYCOUNT - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_LATENCYCOUNT_Texture_Latency	 0x0664, 0, 4, 0x0000000f
#define ROFF_GFX_GLOBREG_YUVCOEFFY	0x66c /* YUV420/422 Y Coefficients */ 
	#define BITFIELD_GFX_GLOBREG_YUVCOEFFY	 0x066c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_YUVCOEFFY */
	#define BLSB_GFX_GLOBREG_YUVCOEFFY_YCOEFFB	18
	#define BLSB_GFX_GLOBREG_YUVCOEFFY_YCOEFFG	9
	#define BLSB_GFX_GLOBREG_YUVCOEFFY_YCOEFFR	0
	/* Register Bit Widths for GFX_GLOBREG_YUVCOEFFY */
	#define BWID_GFX_GLOBREG_YUVCOEFFY_YCOEFFB	7
	#define BWID_GFX_GLOBREG_YUVCOEFFY_YCOEFFG	9
	#define BWID_GFX_GLOBREG_YUVCOEFFY_YCOEFFR	9
	/* Register Bit MASKS for GFX_GLOBREG_YUVCOEFFY */
	#define BMSK_GFX_GLOBREG_YUVCOEFFY_YCOEFFB	0x01fc0000 /*  */
	#define BMSK_GFX_GLOBREG_YUVCOEFFY_YCOEFFG	0x0003fe00 /*  */
	#define BMSK_GFX_GLOBREG_YUVCOEFFY_YCOEFFR	0x000001ff /*  */
	/* Register BITFIELD for GFX_GLOBREG_YUVCOEFFY - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_YUVCOEFFY_YCOEFFB	 0x066c, 18, 7, 0x01fc0000
	#define BITFIELD_GFX_GLOBREG_YUVCOEFFY_YCOEFFG	 0x066c, 9, 9, 0x0003fe00
	#define BITFIELD_GFX_GLOBREG_YUVCOEFFY_YCOEFFR	 0x066c, 0, 9, 0x000001ff
#define ROFF_GFX_GLOBREG_YUVCOEFFU	0x670 /* YUV420/422 U Coefficients */ 
	#define BITFIELD_GFX_GLOBREG_YUVCOEFFU	 0x0670, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_YUVCOEFFU */
	#define BLSB_GFX_GLOBREG_YUVCOEFFU_UCOEFFB	18
	#define BLSB_GFX_GLOBREG_YUVCOEFFU_UCOEFFG	9
	#define BLSB_GFX_GLOBREG_YUVCOEFFU_UCOEFFR	0
	/* Register Bit Widths for GFX_GLOBREG_YUVCOEFFU */
	#define BWID_GFX_GLOBREG_YUVCOEFFU_UCOEFFB	7
	#define BWID_GFX_GLOBREG_YUVCOEFFU_UCOEFFG	9
	#define BWID_GFX_GLOBREG_YUVCOEFFU_UCOEFFR	9
	/* Register Bit MASKS for GFX_GLOBREG_YUVCOEFFU */
	#define BMSK_GFX_GLOBREG_YUVCOEFFU_UCOEFFB	0x01fc0000 /*  */
	#define BMSK_GFX_GLOBREG_YUVCOEFFU_UCOEFFG	0x0003fe00 /*  */
	#define BMSK_GFX_GLOBREG_YUVCOEFFU_UCOEFFR	0x000001ff /*  */
	/* Register BITFIELD for GFX_GLOBREG_YUVCOEFFU - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_YUVCOEFFU_UCOEFFB	 0x0670, 18, 7, 0x01fc0000
	#define BITFIELD_GFX_GLOBREG_YUVCOEFFU_UCOEFFG	 0x0670, 9, 9, 0x0003fe00
	#define BITFIELD_GFX_GLOBREG_YUVCOEFFU_UCOEFFR	 0x0670, 0, 9, 0x000001ff
#define ROFF_GFX_GLOBREG_YUVCOEFFV	0x678 /* YUV420/422 V Coefficients */ 
	#define BITFIELD_GFX_GLOBREG_YUVCOEFFV	 0x0678, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_YUVCOEFFV */
	#define BLSB_GFX_GLOBREG_YUVCOEFFV_VCOEFFB	18
	#define BLSB_GFX_GLOBREG_YUVCOEFFV_VCOEFFG	9
	#define BLSB_GFX_GLOBREG_YUVCOEFFV_VCOEFFR	0
	/* Register Bit Widths for GFX_GLOBREG_YUVCOEFFV */
	#define BWID_GFX_GLOBREG_YUVCOEFFV_VCOEFFB	7
	#define BWID_GFX_GLOBREG_YUVCOEFFV_VCOEFFG	9
	#define BWID_GFX_GLOBREG_YUVCOEFFV_VCOEFFR	9
	/* Register Bit MASKS for GFX_GLOBREG_YUVCOEFFV */
	#define BMSK_GFX_GLOBREG_YUVCOEFFV_VCOEFFB	0x01fc0000 /*  */
	#define BMSK_GFX_GLOBREG_YUVCOEFFV_VCOEFFG	0x0003fe00 /*  */
	#define BMSK_GFX_GLOBREG_YUVCOEFFV_VCOEFFR	0x000001ff /*  */
	/* Register BITFIELD for GFX_GLOBREG_YUVCOEFFV - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_YUVCOEFFV_VCOEFFB	 0x0678, 18, 7, 0x01fc0000
	#define BITFIELD_GFX_GLOBREG_YUVCOEFFV_VCOEFFG	 0x0678, 9, 9, 0x0003fe00
	#define BITFIELD_GFX_GLOBREG_YUVCOEFFV_VCOEFFR	 0x0678, 0, 9, 0x000001ff
#define ROFF_GFX_GLOBREG_ZBASEADDR	0x674 /* 3D Z Base Address */ 
	#define BITFIELD_GFX_GLOBREG_ZBASEADDR	 0x0674, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_ZBASEADDR */
	#define BLSB_GFX_GLOBREG_ZBASEADDR_ZBuffer_Base_Address	2
	/* Register Bit Widths for GFX_GLOBREG_ZBASEADDR */
	#define BWID_GFX_GLOBREG_ZBASEADDR_ZBuffer_Base_Address	23
	/* Register Bit MASKS for GFX_GLOBREG_ZBASEADDR */
	#define BMSK_GFX_GLOBREG_ZBASEADDR_ZBuffer_Base_Address	0x01fffffc /*  */
	/* Register BITFIELD for GFX_GLOBREG_ZBASEADDR - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_ZBASEADDR_ZBuffer_Base_Address	 0x0674, 2, 23, 0x01fffffc
#define ROFF_GFX_GLOBREG_STARTRENDER	0x680 /* 3D Start Render */ 
	#define BITFIELD_GFX_GLOBREG_STARTRENDER	 0x0680, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_STARTRENDER */
	#define BLSB_GFX_GLOBREG_STARTRENDER_START_RENDER	0
	/* Register Bit Widths for GFX_GLOBREG_STARTRENDER */
	#define BWID_GFX_GLOBREG_STARTRENDER_START_RENDER	32
	/* Register Bit MASKS for GFX_GLOBREG_STARTRENDER */
	#define BMSK_GFX_GLOBREG_STARTRENDER_START_RENDER	0x00000000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_STARTRENDER - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_STARTRENDER_START_RENDER	 0x0680, 0, 32, 0x00000000
#define ROFF_GFX_GLOBREG_3DFLATSHADEDCS	0x6d0 /* 3D Flat Shaded Colour Source */ 
	#define BITFIELD_GFX_GLOBREG_3DFLATSHADEDCS	 0x06d0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_3DFLATSHADEDCS */
	#define BLSB_GFX_GLOBREG_3DFLATSHADEDCS_FLAT_SHADE_SRC	0
	/* Register Bit Widths for GFX_GLOBREG_3DFLATSHADEDCS */
	#define BWID_GFX_GLOBREG_3DFLATSHADEDCS_FLAT_SHADE_SRC	1
	/* Register Bit MASKS for GFX_GLOBREG_3DFLATSHADEDCS */
	#define BMSK_GFX_GLOBREG_3DFLATSHADEDCS_FLAT_SHADE_SRC	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_GLOBREG_3DFLATSHADEDCS - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_3DFLATSHADEDCS_FLAT_SHADE_SRC	 0x06d0, 0, 1, 0x00000001
#define ROFF_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG	0x6d8 /* 3D ZLoad Background Tag */ 
	#define BITFIELD_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG	 0x06d8, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_3D_ZL_BACKGROUND_TAG */
	#define BLSB_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_OFFSET	29
	#define BLSB_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_NUM_UV	28
	#define BLSB_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_TEXTURED	27
	#define BLSB_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_RES1	25
	#define BLSB_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_RES0	21
	#define BLSB_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_ADDRESS	0
	/* Register Bit Widths for GFX_GLOBREG_3D_ZL_BACKGROUND_TAG */
	#define BWID_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_OFFSET	1
	#define BWID_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_NUM_UV	1
	#define BWID_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_TEXTURED	1
	#define BWID_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_RES1	2
	#define BWID_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_RES0	4
	#define BWID_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_ADDRESS	21
	/* Register Bit MASKS for GFX_GLOBREG_3D_ZL_BACKGROUND_TAG */
	#define BMSK_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_OFFSET	(1<<29) /* == 0x20000000:  */
	#define BMSK_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_NUM_UV	(1<<28) /* == 0x10000000:  */
	#define BMSK_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_TEXTURED	(1<<27) /* == 0x08000000:  */
	#define BMSK_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_RES1	0x06000000 /*  */
	#define BMSK_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_RES0	0x01e00000 /*  */
	#define BMSK_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_ADDRESS	0x001fffff /*  */
	/* Register BITFIELD for GFX_GLOBREG_3D_ZL_BACKGROUND_TAG - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_OFFSET	 0x06d8, 29, 1, 0x20000000
	#define BITFIELD_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_NUM_UV	 0x06d8, 28, 1, 0x10000000
	#define BITFIELD_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_TEXTURED	 0x06d8, 27, 1, 0x08000000
	#define BITFIELD_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_RES1	 0x06d8, 25, 2, 0x06000000
	#define BITFIELD_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_RES0	 0x06d8, 21, 4, 0x01e00000
	#define BITFIELD_GFX_GLOBREG_3D_ZL_BACKGROUND_TAG_ZL_BGT_ADDRESS	 0x06d8, 0, 21, 0x001fffff
#define ROFF_GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH	0x6dc /* 3D ZLoad Background Depth */ 
	#define BITFIELD_GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH	 0x06dc, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH */
	#define BLSB_GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH_ZL_BG_DEPTH	4
	#define BLSB_GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH_ZL_BG_MSK_PLANE	0
	/* Register Bit Widths for GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH */
	#define BWID_GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH_ZL_BG_DEPTH	27
	#define BWID_GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH_ZL_BG_MSK_PLANE	1
	/* Register Bit MASKS for GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH */
	#define BMSK_GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH_ZL_BG_DEPTH	0x7ffffff0 /*  */
	#define BMSK_GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH_ZL_BG_MSK_PLANE	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH_ZL_BG_DEPTH	 0x06dc, 4, 27, 0x7ffffff0
	#define BITFIELD_GFX_GLOBREG_3D_ZL_BACKGROUND_DEPTH_ZL_BG_MSK_PLANE	 0x06dc, 0, 1, 0x00000001
#define ROFF_GFX_GLOBREG_1BPP_BACKGROUND_COLOUR	0x6e0 /* 3D 1Bpp Background Colour */ 
	#define BITFIELD_GFX_GLOBREG_1BPP_BACKGROUND_COLOUR	 0x06e0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_1BPP_BACKGROUND_COLOUR */
	#define BLSB_GFX_GLOBREG_1BPP_BACKGROUND_COLOUR_1BPP_BACKGROUND_COLOUR	0
	/* Register Bit Widths for GFX_GLOBREG_1BPP_BACKGROUND_COLOUR */
	#define BWID_GFX_GLOBREG_1BPP_BACKGROUND_COLOUR_1BPP_BACKGROUND_COLOUR	32
	/* Register Bit MASKS for GFX_GLOBREG_1BPP_BACKGROUND_COLOUR */
	#define BMSK_GFX_GLOBREG_1BPP_BACKGROUND_COLOUR_1BPP_BACKGROUND_COLOUR	0x00000000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_1BPP_BACKGROUND_COLOUR - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_1BPP_BACKGROUND_COLOUR_1BPP_BACKGROUND_COLOUR	 0x06e0, 0, 32, 0x00000000
#define ROFF_GFX_GLOBREG_1BPP_FOREGROUND_COLOUR	0x6e4 /* 3D 1Bpp Foreground Colour */ 
	#define BITFIELD_GFX_GLOBREG_1BPP_FOREGROUND_COLOUR	 0x06e4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_1BPP_FOREGROUND_COLOUR */
	#define BLSB_GFX_GLOBREG_1BPP_FOREGROUND_COLOUR_1BPP_FOREGROUND_COLOUR	0
	/* Register Bit Widths for GFX_GLOBREG_1BPP_FOREGROUND_COLOUR */
	#define BWID_GFX_GLOBREG_1BPP_FOREGROUND_COLOUR_1BPP_FOREGROUND_COLOUR	32
	/* Register Bit MASKS for GFX_GLOBREG_1BPP_FOREGROUND_COLOUR */
	#define BMSK_GFX_GLOBREG_1BPP_FOREGROUND_COLOUR_1BPP_FOREGROUND_COLOUR	0x00000000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_1BPP_FOREGROUND_COLOUR - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_1BPP_FOREGROUND_COLOUR_1BPP_FOREGROUND_COLOUR	 0x06e4, 0, 32, 0x00000000
#define ROFF_GFX_GLOBREG_USE_1BPP_REGS_CTL	0x6e8 /* 3D 1Bpp Use Register Values */ 
	#define BITFIELD_GFX_GLOBREG_USE_1BPP_REGS_CTL	 0x06e8, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_USE_1BPP_REGS_CTL */
	#define BLSB_GFX_GLOBREG_USE_1BPP_REGS_CTL_USE_1BPP_REGS_CTL	0
	/* Register Bit Widths for GFX_GLOBREG_USE_1BPP_REGS_CTL */
	#define BWID_GFX_GLOBREG_USE_1BPP_REGS_CTL_USE_1BPP_REGS_CTL	1
	/* Register Bit MASKS for GFX_GLOBREG_USE_1BPP_REGS_CTL */
	#define BMSK_GFX_GLOBREG_USE_1BPP_REGS_CTL_USE_1BPP_REGS_CTL	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_GLOBREG_USE_1BPP_REGS_CTL - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_USE_1BPP_REGS_CTL_USE_1BPP_REGS_CTL	 0x06e8, 0, 1, 0x00000001
#define ROFF_GFX_GLOBREG_3D_RENDER_ID	0x6ec /* 3D Render ID */ 
	#define BITFIELD_GFX_GLOBREG_3D_RENDER_ID	 0x06ec, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_3D_RENDER_ID */
	#define BLSB_GFX_GLOBREG_3D_RENDER_ID_PVR_Render_ID	0
	/* Register Bit Widths for GFX_GLOBREG_3D_RENDER_ID */
	#define BWID_GFX_GLOBREG_3D_RENDER_ID_PVR_Render_ID	1
	/* Register Bit MASKS for GFX_GLOBREG_3D_RENDER_ID */
	#define BMSK_GFX_GLOBREG_3D_RENDER_ID_PVR_Render_ID	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_GLOBREG_3D_RENDER_ID - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_3D_RENDER_ID_PVR_Render_ID	 0x06ec, 0, 1, 0x00000001
#define ROFF_GFX_GLOBREG_3D_TEX_DECIM	0x6f0 /* 3D Texture Decimation */ 
	#define BITFIELD_GFX_GLOBREG_3D_TEX_DECIM	 0x06f0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_3D_TEX_DECIM */
	#define BLSB_GFX_GLOBREG_3D_TEX_DECIM_Tex_Dec_Control	16
	#define BLSB_GFX_GLOBREG_3D_TEX_DECIM_Tex_Dec_Factor	0
	/* Register Bit Widths for GFX_GLOBREG_3D_TEX_DECIM */
	#define BWID_GFX_GLOBREG_3D_TEX_DECIM_Tex_Dec_Control	1
	#define BWID_GFX_GLOBREG_3D_TEX_DECIM_Tex_Dec_Factor	3
	/* Register Bit MASKS for GFX_GLOBREG_3D_TEX_DECIM */
	#define BMSK_GFX_GLOBREG_3D_TEX_DECIM_Tex_Dec_Control	(1<<16) /* == 0x00010000:  */
	#define BMSK_GFX_GLOBREG_3D_TEX_DECIM_Tex_Dec_Factor	0x00000007 /*  */
	/* Register BITFIELD for GFX_GLOBREG_3D_TEX_DECIM - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_3D_TEX_DECIM_Tex_Dec_Control	 0x06f0, 16, 1, 0x00010000
	#define BITFIELD_GFX_GLOBREG_3D_TEX_DECIM_Tex_Dec_Factor	 0x06f0, 0, 3, 0x00000007
#define ROFF_GFX_TAGLOBREG_START	0x800 /* TA Start */ 
	#define BITFIELD_GFX_TAGLOBREG_START	 0x0800, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_START */
	#define BLSB_GFX_TAGLOBREG_START_TA_START	0
	/* Register Bit Widths for GFX_TAGLOBREG_START */
	#define BWID_GFX_TAGLOBREG_START_TA_START	32
	/* Register Bit MASKS for GFX_TAGLOBREG_START */
	#define BMSK_GFX_TAGLOBREG_START_TA_START	0x00000000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_START - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_START_TA_START	 0x0800, 0, 32, 0x00000000
#define ROFF_GFX_TAGLOBREG_RESTART	0x804 /* TA Restart */ 
	#define BITFIELD_GFX_TAGLOBREG_RESTART	 0x0804, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_RESTART */
	#define BLSB_GFX_TAGLOBREG_RESTART_TA_RESTART	0
	/* Register Bit Widths for GFX_TAGLOBREG_RESTART */
	#define BWID_GFX_TAGLOBREG_RESTART_TA_RESTART	32
	/* Register Bit MASKS for GFX_TAGLOBREG_RESTART */
	#define BMSK_GFX_TAGLOBREG_RESTART_TA_RESTART	0x00000000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_RESTART - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_RESTART_TA_RESTART	 0x0804, 0, 32, 0x00000000
#define ROFF_GFX_TAGLOBREG_ABORT	0x808 /* TA Abort */ 
	#define BITFIELD_GFX_TAGLOBREG_ABORT	 0x0808, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_ABORT */
	#define BLSB_GFX_TAGLOBREG_ABORT_TA_ABORT	0
	/* Register Bit Widths for GFX_TAGLOBREG_ABORT */
	#define BWID_GFX_TAGLOBREG_ABORT_TA_ABORT	32
	/* Register Bit MASKS for GFX_TAGLOBREG_ABORT */
	#define BMSK_GFX_TAGLOBREG_ABORT_TA_ABORT	0x00000000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_ABORT - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_ABORT_TA_ABORT	 0x0808, 0, 32, 0x00000000
#define ROFF_GFX_TAGLOBREG_ABORTXY	0x80c /* TA Abort XY */ 
	#define BITFIELD_GFX_TAGLOBREG_ABORTXY	 0x080c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_ABORTXY */
	#define BLSB_GFX_TAGLOBREG_ABORTXY_TA_ABORTX	17
	#define BLSB_GFX_TAGLOBREG_ABORTXY_TA_ABORTY	0
	/* Register Bit Widths for GFX_TAGLOBREG_ABORTXY */
	#define BWID_GFX_TAGLOBREG_ABORTXY_TA_ABORTX	3
	#define BWID_GFX_TAGLOBREG_ABORTXY_TA_ABORTY	3
	/* Register Bit MASKS for GFX_TAGLOBREG_ABORTXY */
	#define BMSK_GFX_TAGLOBREG_ABORTXY_TA_ABORTX	0x000e0000 /*  */
	#define BMSK_GFX_TAGLOBREG_ABORTXY_TA_ABORTY	0x00000007 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_ABORTXY - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_ABORTXY_TA_ABORTX	 0x080c, 17, 3, 0x000e0000
	#define BITFIELD_GFX_TAGLOBREG_ABORTXY_TA_ABORTY	 0x080c, 0, 3, 0x00000007
#define ROFF_GFX_TAGLOBREG_RENDER_ID	0x810 /* TA Render ID */ 
	#define BITFIELD_GFX_TAGLOBREG_RENDER_ID	 0x0810, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_RENDER_ID */
	#define BLSB_GFX_TAGLOBREG_RENDER_ID_TA_RENDER_ID	0
	/* Register Bit Widths for GFX_TAGLOBREG_RENDER_ID */
	#define BWID_GFX_TAGLOBREG_RENDER_ID_TA_RENDER_ID	1
	/* Register Bit MASKS for GFX_TAGLOBREG_RENDER_ID */
	#define BMSK_GFX_TAGLOBREG_RENDER_ID_TA_RENDER_ID	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_TAGLOBREG_RENDER_ID - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_RENDER_ID_TA_RENDER_ID	 0x0810, 0, 1, 0x00000001
#define ROFF_GFX_TAGLOBREG_CONTEXT_LOAD	0x814 /* TA Context Load */ 
	#define BITFIELD_GFX_TAGLOBREG_CONTEXT_LOAD	 0x0814, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_CONTEXT_LOAD */
	#define BLSB_GFX_TAGLOBREG_CONTEXT_LOAD_TA_CONTEXT_LOAD	0
	/* Register Bit Widths for GFX_TAGLOBREG_CONTEXT_LOAD */
	#define BWID_GFX_TAGLOBREG_CONTEXT_LOAD_TA_CONTEXT_LOAD	32
	/* Register Bit MASKS for GFX_TAGLOBREG_CONTEXT_LOAD */
	#define BMSK_GFX_TAGLOBREG_CONTEXT_LOAD_TA_CONTEXT_LOAD	0x00000000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_CONTEXT_LOAD - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_CONTEXT_LOAD_TA_CONTEXT_LOAD	 0x0814, 0, 32, 0x00000000
#define ROFF_GFX_TAGLOBREG_CONTEXT_STORE	0x818 /* TA Context Store */ 
	#define BITFIELD_GFX_TAGLOBREG_CONTEXT_STORE	 0x0818, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_CONTEXT_STORE */
	#define BLSB_GFX_TAGLOBREG_CONTEXT_STORE_TA_CONTEXT_STORE	0
	/* Register Bit Widths for GFX_TAGLOBREG_CONTEXT_STORE */
	#define BWID_GFX_TAGLOBREG_CONTEXT_STORE_TA_CONTEXT_STORE	32
	/* Register Bit MASKS for GFX_TAGLOBREG_CONTEXT_STORE */
	#define BMSK_GFX_TAGLOBREG_CONTEXT_STORE_TA_CONTEXT_STORE	0x00000000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_CONTEXT_STORE - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_CONTEXT_STORE_TA_CONTEXT_STORE	 0x0818, 0, 32, 0x00000000
#define ROFF_GFX_TAGLOBREG_CONTEXT_RESET	0x81c /* TA Context Reset */ 
	#define BITFIELD_GFX_TAGLOBREG_CONTEXT_RESET	 0x081c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_CONTEXT_RESET */
	#define BLSB_GFX_TAGLOBREG_CONTEXT_RESET_TA_CONTEXT_RESET	0
	/* Register Bit Widths for GFX_TAGLOBREG_CONTEXT_RESET */
	#define BWID_GFX_TAGLOBREG_CONTEXT_RESET_TA_CONTEXT_RESET	32
	/* Register Bit MASKS for GFX_TAGLOBREG_CONTEXT_RESET */
	#define BMSK_GFX_TAGLOBREG_CONTEXT_RESET_TA_CONTEXT_RESET	0x00000000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_CONTEXT_RESET - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_CONTEXT_RESET_TA_CONTEXT_RESET	 0x081c, 0, 32, 0x00000000
#define ROFF_GFX_TAGLOBREG_CONTEXT_BASE	0x820 /* TA Context Base */ 
	#define BITFIELD_GFX_TAGLOBREG_CONTEXT_BASE	 0x0820, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_CONTEXT_BASE */
	#define BLSB_GFX_TAGLOBREG_CONTEXT_BASE_TA_CONTEXT_BASE	9
	/* Register Bit Widths for GFX_TAGLOBREG_CONTEXT_BASE */
	#define BWID_GFX_TAGLOBREG_CONTEXT_BASE_TA_CONTEXT_BASE	16
	/* Register Bit MASKS for GFX_TAGLOBREG_CONTEXT_BASE */
	#define BMSK_GFX_TAGLOBREG_CONTEXT_BASE_TA_CONTEXT_BASE	0x01fffe00 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_CONTEXT_BASE - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_CONTEXT_BASE_TA_CONTEXT_BASE	 0x0820, 9, 16, 0x01fffe00
#define ROFF_GFX_TAGLOBREG_EVM_PAGETBL_BASE	0x824 /* EVM Page Table Base Address */ 
	#define BITFIELD_GFX_TAGLOBREG_EVM_PAGETBL_BASE	 0x0824, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_EVM_PAGETBL_BASE */
	#define BLSB_GFX_TAGLOBREG_EVM_PAGETBL_BASE_EVM_LIST_BASE	14
	/* Register Bit Widths for GFX_TAGLOBREG_EVM_PAGETBL_BASE */
	#define BWID_GFX_TAGLOBREG_EVM_PAGETBL_BASE_EVM_LIST_BASE	11
	/* Register Bit MASKS for GFX_TAGLOBREG_EVM_PAGETBL_BASE */
	#define BMSK_GFX_TAGLOBREG_EVM_PAGETBL_BASE_EVM_LIST_BASE	0x01ffc000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_EVM_PAGETBL_BASE - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_EVM_PAGETBL_BASE_EVM_LIST_BASE	 0x0824, 14, 11, 0x01ffc000
#define ROFF_GFX_TAGLOBREG_EVM_LIST_START	0x828 /* EVM List Start Page */ 
	#define BITFIELD_GFX_TAGLOBREG_EVM_LIST_START	 0x0828, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_EVM_LIST_START */
	#define BLSB_GFX_TAGLOBREG_EVM_LIST_START_EVM_LIST_START	0
	/* Register Bit Widths for GFX_TAGLOBREG_EVM_LIST_START */
	#define BWID_GFX_TAGLOBREG_EVM_LIST_START_EVM_LIST_START	13
	/* Register Bit MASKS for GFX_TAGLOBREG_EVM_LIST_START */
	#define BMSK_GFX_TAGLOBREG_EVM_LIST_START_EVM_LIST_START	0x00001fff /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_EVM_LIST_START - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_EVM_LIST_START_EVM_LIST_START	 0x0828, 0, 13, 0x00001fff
#define ROFF_GFX_TAGLOBREG_EVM_LIST_END	0x82c /* EVM List End Page */ 
	#define BITFIELD_GFX_TAGLOBREG_EVM_LIST_END	 0x082c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_EVM_LIST_END */
	#define BLSB_GFX_TAGLOBREG_EVM_LIST_END_EVM_LIST_END	0
	/* Register Bit Widths for GFX_TAGLOBREG_EVM_LIST_END */
	#define BWID_GFX_TAGLOBREG_EVM_LIST_END_EVM_LIST_END	13
	/* Register Bit MASKS for GFX_TAGLOBREG_EVM_LIST_END */
	#define BMSK_GFX_TAGLOBREG_EVM_LIST_END_EVM_LIST_END	0x00001fff /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_EVM_LIST_END - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_EVM_LIST_END_EVM_LIST_END	 0x082c, 0, 13, 0x00001fff
#define ROFF_GFX_TAGLOBREG_EVM_RENDER_TIMEOUT	0x830 /* EVM Render Timeout */ 
	#define BITFIELD_GFX_TAGLOBREG_EVM_RENDER_TIMEOUT	 0x0830, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_EVM_RENDER_TIMEOUT */
	#define BLSB_GFX_TAGLOBREG_EVM_RENDER_TIMEOUT_EVM_Render_Timeout	0
	/* Register Bit Widths for GFX_TAGLOBREG_EVM_RENDER_TIMEOUT */
	#define BWID_GFX_TAGLOBREG_EVM_RENDER_TIMEOUT_EVM_Render_Timeout	32
	/* Register Bit MASKS for GFX_TAGLOBREG_EVM_RENDER_TIMEOUT */
	#define BMSK_GFX_TAGLOBREG_EVM_RENDER_TIMEOUT_EVM_Render_Timeout	0x00000000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_EVM_RENDER_TIMEOUT - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_EVM_RENDER_TIMEOUT_EVM_Render_Timeout	 0x0830, 0, 32, 0x00000000
#define ROFF_GFX_TAGLOBREG_EVM_TA_TIMEOUT	0x834 /* EVM TA Timeout */ 
	#define BITFIELD_GFX_TAGLOBREG_EVM_TA_TIMEOUT	 0x0834, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_EVM_TA_TIMEOUT */
	#define BLSB_GFX_TAGLOBREG_EVM_TA_TIMEOUT_EVM_TA_Timeout	0
	/* Register Bit Widths for GFX_TAGLOBREG_EVM_TA_TIMEOUT */
	#define BWID_GFX_TAGLOBREG_EVM_TA_TIMEOUT_EVM_TA_Timeout	32
	/* Register Bit MASKS for GFX_TAGLOBREG_EVM_TA_TIMEOUT */
	#define BMSK_GFX_TAGLOBREG_EVM_TA_TIMEOUT_EVM_TA_Timeout	0x00000000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_EVM_TA_TIMEOUT - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_EVM_TA_TIMEOUT_EVM_TA_Timeout	 0x0834, 0, 32, 0x00000000
#define ROFF_GFX_TAGLOBREG_EVM_INIT	0x838 /* EVM Init */ 
	#define BITFIELD_GFX_TAGLOBREG_EVM_INIT	 0x0838, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_EVM_INIT */
	#define BLSB_GFX_TAGLOBREG_EVM_INIT_EVM_INIT	0
	/* Register Bit Widths for GFX_TAGLOBREG_EVM_INIT */
	#define BWID_GFX_TAGLOBREG_EVM_INIT_EVM_INIT	32
	/* Register Bit MASKS for GFX_TAGLOBREG_EVM_INIT */
	#define BMSK_GFX_TAGLOBREG_EVM_INIT_EVM_INIT	0x00000000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_EVM_INIT - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_EVM_INIT_EVM_INIT	 0x0838, 0, 32, 0x00000000
#define ROFF_GFX_TAGLOBREG_OBJDATABASE	0x83c /* TA Object Base Address */ 
	#define BITFIELD_GFX_TAGLOBREG_OBJDATABASE	 0x083c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_OBJDATABASE */
	#define BLSB_GFX_TAGLOBREG_OBJDATABASE_TA_Obj_Base	12
	/* Register Bit Widths for GFX_TAGLOBREG_OBJDATABASE */
	#define BWID_GFX_TAGLOBREG_OBJDATABASE_TA_Obj_Base	13
	/* Register Bit MASKS for GFX_TAGLOBREG_OBJDATABASE */
	#define BMSK_GFX_TAGLOBREG_OBJDATABASE_TA_Obj_Base	0x01fff000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_OBJDATABASE - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_OBJDATABASE_TA_Obj_Base	 0x083c, 12, 13, 0x01fff000
#define ROFF_GFX_TAGLOBREG_TAILPTRBASE	0x840 /* TA Tail Pointer Base Address */ 
	#define BITFIELD_GFX_TAGLOBREG_TAILPTRBASE	 0x0840, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_TAILPTRBASE */
	#define BLSB_GFX_TAGLOBREG_TAILPTRBASE_TA_TPC_Base_Addr	16
	/* Register Bit Widths for GFX_TAGLOBREG_TAILPTRBASE */
	#define BWID_GFX_TAGLOBREG_TAILPTRBASE_TA_TPC_Base_Addr	9
	/* Register Bit MASKS for GFX_TAGLOBREG_TAILPTRBASE */
	#define BMSK_GFX_TAGLOBREG_TAILPTRBASE_TA_TPC_Base_Addr	0x01ff0000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_TAILPTRBASE - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_TAILPTRBASE_TA_TPC_Base_Addr	 0x0840, 16, 9, 0x01ff0000
#define ROFF_GFX_TAGLOBREG_REGION_BASE	0x844 /* TA Region Base Address */ 
	#define BITFIELD_GFX_TAGLOBREG_REGION_BASE	 0x0844, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_REGION_BASE */
	#define BLSB_GFX_TAGLOBREG_REGION_BASE_TA_Region_Base_Addr	2
	/* Register Bit Widths for GFX_TAGLOBREG_REGION_BASE */
	#define BWID_GFX_TAGLOBREG_REGION_BASE_TA_Region_Base_Addr	23
	/* Register Bit MASKS for GFX_TAGLOBREG_REGION_BASE */
	#define BMSK_GFX_TAGLOBREG_REGION_BASE_TA_Region_Base_Addr	0x01fffffc /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_REGION_BASE - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_REGION_BASE_TA_Region_Base_Addr	 0x0844, 2, 23, 0x01fffffc
#define ROFF_GFX_TAGLOBREG_GLOBAL_LIST_CTRL	0x848 /* TA Global List Control */ 
	#define BITFIELD_GFX_TAGLOBREG_GLOBAL_LIST_CTRL	 0x0848, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_GLOBAL_LIST_CTRL */
	#define BLSB_GFX_TAGLOBREG_GLOBAL_LIST_CTRL_Global_MaxNumObj	16
	#define BLSB_GFX_TAGLOBREG_GLOBAL_LIST_CTRL_Global_ObjSize	15
	/* Register Bit Widths for GFX_TAGLOBREG_GLOBAL_LIST_CTRL */
	#define BWID_GFX_TAGLOBREG_GLOBAL_LIST_CTRL_Global_MaxNumObj	8
	#define BWID_GFX_TAGLOBREG_GLOBAL_LIST_CTRL_Global_ObjSize	1
	/* Register Bit MASKS for GFX_TAGLOBREG_GLOBAL_LIST_CTRL */
	#define BMSK_GFX_TAGLOBREG_GLOBAL_LIST_CTRL_Global_MaxNumObj	0x00ff0000 /*  */
	#define BMSK_GFX_TAGLOBREG_GLOBAL_LIST_CTRL_Global_ObjSize	(1<<15) /* == 0x00008000:  */
	/* Register BITFIELD for GFX_TAGLOBREG_GLOBAL_LIST_CTRL - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_GLOBAL_LIST_CTRL_Global_MaxNumObj	 0x0848, 16, 8, 0x00ff0000
	#define BITFIELD_GFX_TAGLOBREG_GLOBAL_LIST_CTRL_Global_ObjSize	 0x0848, 15, 1, 0x00008000
#define ROFF_GFX_TAGLOBREG_XCLIP	0x84c /* TA X Screen Clip */ 
	#define BITFIELD_GFX_TAGLOBREG_XCLIP	 0x084c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_XCLIP */
	#define BLSB_GFX_TAGLOBREG_XCLIP_TA_Screen_X_Clip_Max	16
	#define BLSB_GFX_TAGLOBREG_XCLIP_TA_Screen_X_Clip_Min	0
	/* Register Bit Widths for GFX_TAGLOBREG_XCLIP */
	#define BWID_GFX_TAGLOBREG_XCLIP_TA_Screen_X_Clip_Max	11
	#define BWID_GFX_TAGLOBREG_XCLIP_TA_Screen_X_Clip_Min	11
	/* Register Bit MASKS for GFX_TAGLOBREG_XCLIP */
	#define BMSK_GFX_TAGLOBREG_XCLIP_TA_Screen_X_Clip_Max	0x07ff0000 /*  */
	#define BMSK_GFX_TAGLOBREG_XCLIP_TA_Screen_X_Clip_Min	0x000007ff /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_XCLIP - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_XCLIP_TA_Screen_X_Clip_Max	 0x084c, 16, 11, 0x07ff0000
	#define BITFIELD_GFX_TAGLOBREG_XCLIP_TA_Screen_X_Clip_Min	 0x084c, 0, 11, 0x000007ff
#define ROFF_GFX_TAGLOBREG_YCLIP	0x850 /* TA Y Screen Clip */ 
	#define BITFIELD_GFX_TAGLOBREG_YCLIP	 0x0850, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_YCLIP */
	#define BLSB_GFX_TAGLOBREG_YCLIP_TA_Screen_Y_Clip_Max	16
	#define BLSB_GFX_TAGLOBREG_YCLIP_TA_Screen_Y_Clip_Min	0
	/* Register Bit Widths for GFX_TAGLOBREG_YCLIP */
	#define BWID_GFX_TAGLOBREG_YCLIP_TA_Screen_Y_Clip_Max	11
	#define BWID_GFX_TAGLOBREG_YCLIP_TA_Screen_Y_Clip_Min	11
	/* Register Bit MASKS for GFX_TAGLOBREG_YCLIP */
	#define BMSK_GFX_TAGLOBREG_YCLIP_TA_Screen_Y_Clip_Max	0x07ff0000 /*  */
	#define BMSK_GFX_TAGLOBREG_YCLIP_TA_Screen_Y_Clip_Min	0x000007ff /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_YCLIP - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_YCLIP_TA_Screen_Y_Clip_Max	 0x0850, 16, 11, 0x07ff0000
	#define BITFIELD_GFX_TAGLOBREG_YCLIP_TA_Screen_Y_Clip_Min	 0x0850, 0, 11, 0x000007ff
#define ROFF_GFX_TAGLOBREG_RHWCLAMP	0x854 /* TA RHW Clamp */ 
	#define BITFIELD_GFX_TAGLOBREG_RHWCLAMP	 0x0854, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_RHWCLAMP */
	#define BLSB_GFX_TAGLOBREG_RHWCLAMP_TA_RHW_Clamp	4
	/* Register Bit Widths for GFX_TAGLOBREG_RHWCLAMP */
	#define BWID_GFX_TAGLOBREG_RHWCLAMP_TA_RHW_Clamp	27
	/* Register Bit MASKS for GFX_TAGLOBREG_RHWCLAMP */
	#define BMSK_GFX_TAGLOBREG_RHWCLAMP_TA_RHW_Clamp	0x7ffffff0 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_RHWCLAMP - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_RHWCLAMP_TA_RHW_Clamp	 0x0854, 4, 27, 0x7ffffff0
#define ROFF_GFX_TAGLOBREG_RHWCOMP	0x858 /* TA RHW Compare */ 
	#define BITFIELD_GFX_TAGLOBREG_RHWCOMP	 0x0858, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_RHWCOMP */
	#define BLSB_GFX_TAGLOBREG_RHWCOMP_TA_RHW_Comp	4
	/* Register Bit Widths for GFX_TAGLOBREG_RHWCOMP */
	#define BWID_GFX_TAGLOBREG_RHWCOMP_TA_RHW_Comp	27
	/* Register Bit MASKS for GFX_TAGLOBREG_RHWCOMP */
	#define BMSK_GFX_TAGLOBREG_RHWCOMP_TA_RHW_Comp	0x7ffffff0 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_RHWCOMP - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_RHWCOMP_TA_RHW_Comp	 0x0858, 4, 27, 0x7ffffff0
#define ROFF_GFX_TAGLOBREG_CONFIG	0x85c /* TA Configuration */ 
	#define BITFIELD_GFX_TAGLOBREG_CONFIG	 0x085c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_CONFIG */
	#define BLSB_GFX_TAGLOBREG_CONFIG_PT_disable	31
	#define BLSB_GFX_TAGLOBREG_CONFIG_TSnap_Disable	30
	#define BLSB_GFX_TAGLOBREG_CONFIG_Region_Header_Generation	27
	#define BLSB_GFX_TAGLOBREG_CONFIG_Render_Width	20
	#define BLSB_GFX_TAGLOBREG_CONFIG_Z_load_store_control	18
	#define BLSB_GFX_TAGLOBREG_CONFIG_Render_Height	10
	#define BLSB_GFX_TAGLOBREG_CONFIG_No_Deallocate	9
	#define BLSB_GFX_TAGLOBREG_CONFIG_No_Initialise	8
	#define BLSB_GFX_TAGLOBREG_CONFIG_Complet_on_Terminate	7
	#define BLSB_GFX_TAGLOBREG_CONFIG_Pixel_Centre	6
	#define BLSB_GFX_TAGLOBREG_CONFIG_Invert_Offset_Alpha	5
	#define BLSB_GFX_TAGLOBREG_CONFIG_Invert_Base_Alpha	4
	#define BLSB_GFX_TAGLOBREG_CONFIG_TA_Dealloc_Glob	3
	#define BLSB_GFX_TAGLOBREG_CONFIG_Super_Sample_in_Y	2
	#define BLSB_GFX_TAGLOBREG_CONFIG_Super_Sample_in_X	1
	#define BLSB_GFX_TAGLOBREG_CONFIG_Small_Object_Cull	0
	/* Register Bit Widths for GFX_TAGLOBREG_CONFIG */
	#define BWID_GFX_TAGLOBREG_CONFIG_PT_disable	1
	#define BWID_GFX_TAGLOBREG_CONFIG_TSnap_Disable	1
	#define BWID_GFX_TAGLOBREG_CONFIG_Region_Header_Generation	3
	#define BWID_GFX_TAGLOBREG_CONFIG_Render_Width	7
	#define BWID_GFX_TAGLOBREG_CONFIG_Z_load_store_control	3
	#define BWID_GFX_TAGLOBREG_CONFIG_Render_Height	7
	#define BWID_GFX_TAGLOBREG_CONFIG_No_Deallocate	1
	#define BWID_GFX_TAGLOBREG_CONFIG_No_Initialise	1
	#define BWID_GFX_TAGLOBREG_CONFIG_Complet_on_Terminate	1
	#define BWID_GFX_TAGLOBREG_CONFIG_Pixel_Centre	1
	#define BWID_GFX_TAGLOBREG_CONFIG_Invert_Offset_Alpha	1
	#define BWID_GFX_TAGLOBREG_CONFIG_Invert_Base_Alpha	1
	#define BWID_GFX_TAGLOBREG_CONFIG_TA_Dealloc_Glob	1
	#define BWID_GFX_TAGLOBREG_CONFIG_Super_Sample_in_Y	1
	#define BWID_GFX_TAGLOBREG_CONFIG_Super_Sample_in_X	1
	#define BWID_GFX_TAGLOBREG_CONFIG_Small_Object_Cull	1
	/* Register Bit MASKS for GFX_TAGLOBREG_CONFIG */
	#define BMSK_GFX_TAGLOBREG_CONFIG_PT_disable	(1<<31) /* == 0x80000000:  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_TSnap_Disable	(1<<30) /* == 0x40000000:  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_Region_Header_Generation	0x38000000 /*  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_Render_Width	0x07f00000 /*  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_Z_load_store_control	0x001c0000 /*  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_Render_Height	0x0001fc00 /*  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_No_Deallocate	(1<<9) /* == 0x00000200:  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_No_Initialise	(1<<8) /* == 0x00000100:  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_Complet_on_Terminate	(1<<7) /* == 0x00000080:  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_Pixel_Centre	(1<<6) /* == 0x00000040:  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_Invert_Offset_Alpha	(1<<5) /* == 0x00000020:  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_Invert_Base_Alpha	(1<<4) /* == 0x00000010:  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_TA_Dealloc_Glob	(1<<3) /* == 0x00000008:  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_Super_Sample_in_Y	(1<<2) /* == 0x00000004:  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_Super_Sample_in_X	(1<<1) /* == 0x00000002:  */
	#define BMSK_GFX_TAGLOBREG_CONFIG_Small_Object_Cull	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_TAGLOBREG_CONFIG - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_PT_disable	 0x085c, 31, 1, 0x80000000
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_TSnap_Disable	 0x085c, 30, 1, 0x40000000
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_Region_Header_Generation	 0x085c, 27, 3, 0x38000000
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_Render_Width	 0x085c, 20, 7, 0x07f00000
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_Z_load_store_control	 0x085c, 18, 3, 0x001c0000
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_Render_Height	 0x085c, 10, 7, 0x0001fc00
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_No_Deallocate	 0x085c, 9, 1, 0x00000200
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_No_Initialise	 0x085c, 8, 1, 0x00000100
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_Complet_on_Terminate	 0x085c, 7, 1, 0x00000080
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_Pixel_Centre	 0x085c, 6, 1, 0x00000040
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_Invert_Offset_Alpha	 0x085c, 5, 1, 0x00000020
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_Invert_Base_Alpha	 0x085c, 4, 1, 0x00000010
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_TA_Dealloc_Glob	 0x085c, 3, 1, 0x00000008
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_Super_Sample_in_Y	 0x085c, 2, 1, 0x00000004
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_Super_Sample_in_X	 0x085c, 1, 1, 0x00000002
	#define BITFIELD_GFX_TAGLOBREG_CONFIG_Small_Object_Cull	 0x085c, 0, 1, 0x00000001
#define ROFF_GFX_TAGLOBREG_3DSCREENSIZE	0x860 /* 3D Screen Size */ 
	#define BITFIELD_GFX_TAGLOBREG_3DSCREENSIZE	 0x0860, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_3DSCREENSIZE */
	#define BLSB_GFX_TAGLOBREG_3DSCREENSIZE_Render_Height_6_4	20
	#define BLSB_GFX_TAGLOBREG_3DSCREENSIZE_Render_Height_3_0	16
	#define BLSB_GFX_TAGLOBREG_3DSCREENSIZE_Render_Width_6_4	4
	#define BLSB_GFX_TAGLOBREG_3DSCREENSIZE_Render_Width_3_0	0
	/* Register Bit Widths for GFX_TAGLOBREG_3DSCREENSIZE */
	#define BWID_GFX_TAGLOBREG_3DSCREENSIZE_Render_Height_6_4	3
	#define BWID_GFX_TAGLOBREG_3DSCREENSIZE_Render_Height_3_0	4
	#define BWID_GFX_TAGLOBREG_3DSCREENSIZE_Render_Width_6_4	3
	#define BWID_GFX_TAGLOBREG_3DSCREENSIZE_Render_Width_3_0	4
	/* Register Bit MASKS for GFX_TAGLOBREG_3DSCREENSIZE */
	#define BMSK_GFX_TAGLOBREG_3DSCREENSIZE_Render_Height_6_4	0x00700000 /*  */
	#define BMSK_GFX_TAGLOBREG_3DSCREENSIZE_Render_Height_3_0	0x000f0000 /*  */
	#define BMSK_GFX_TAGLOBREG_3DSCREENSIZE_Render_Width_6_4	0x00000070 /*  */
	#define BMSK_GFX_TAGLOBREG_3DSCREENSIZE_Render_Width_3_0	0x0000000f /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_3DSCREENSIZE - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_3DSCREENSIZE_Render_Height_6_4	 0x0860, 20, 3, 0x00700000
	#define BITFIELD_GFX_TAGLOBREG_3DSCREENSIZE_Render_Height_3_0	 0x0860, 16, 4, 0x000f0000
	#define BITFIELD_GFX_TAGLOBREG_3DSCREENSIZE_Render_Width_6_4	 0x0860, 4, 3, 0x00000070
	#define BITFIELD_GFX_TAGLOBREG_3DSCREENSIZE_Render_Width_3_0	 0x0860, 0, 4, 0x0000000f
#define ROFF_GFX_TAGLOBREG_EVM_CONTEXT_FLUSH_ADDR	0x864 /* EVM Context Base Address */ 
	#define BITFIELD_GFX_TAGLOBREG_EVM_CONTEXT_FLUSH_ADDR	 0x0864, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TAGLOBREG_EVM_CONTEXT_FLUSH_ADDR */
	#define BLSB_GFX_TAGLOBREG_EVM_CONTEXT_FLUSH_ADDR_EVM_CTX_BASE	14
	/* Register Bit Widths for GFX_TAGLOBREG_EVM_CONTEXT_FLUSH_ADDR */
	#define BWID_GFX_TAGLOBREG_EVM_CONTEXT_FLUSH_ADDR_EVM_CTX_BASE	11
	/* Register Bit MASKS for GFX_TAGLOBREG_EVM_CONTEXT_FLUSH_ADDR */
	#define BMSK_GFX_TAGLOBREG_EVM_CONTEXT_FLUSH_ADDR_EVM_CTX_BASE	0x01ffc000 /*  */
	/* Register BITFIELD for GFX_TAGLOBREG_EVM_CONTEXT_FLUSH_ADDR - roff, lsb, width, mask */
	#define BITFIELD_GFX_TAGLOBREG_EVM_CONTEXT_FLUSH_ADDR_EVM_CTX_BASE	 0x0864, 14, 11, 0x01ffc000
#define ROFF_GFX_TSP3_SIG	0xcc0 /* TSP3 Signature */ 
	#define BITFIELD_GFX_TSP3_SIG	 0x0cc0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TSP3_SIG */
	#define BLSB_GFX_TSP3_SIG_TSP3_SIG	0
	/* Register Bit Widths for GFX_TSP3_SIG */
	#define BWID_GFX_TSP3_SIG_TSP3_SIG	32
	/* Register Bit MASKS for GFX_TSP3_SIG */
	#define BMSK_GFX_TSP3_SIG_TSP3_SIG	0x00000000 /*  */
	/* Register BITFIELD for GFX_TSP3_SIG - roff, lsb, width, mask */
	#define BITFIELD_GFX_TSP3_SIG_TSP3_SIG	 0x0cc0, 0, 32, 0x00000000
#define ROFF_GFX_ISP1_SIG	0xcc4 /* ISP1 Signature */ 
	#define BITFIELD_GFX_ISP1_SIG	 0x0cc4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_ISP1_SIG */
	#define BLSB_GFX_ISP1_SIG_ISP1_SIG	0
	/* Register Bit Widths for GFX_ISP1_SIG */
	#define BWID_GFX_ISP1_SIG_ISP1_SIG	32
	/* Register Bit MASKS for GFX_ISP1_SIG */
	#define BMSK_GFX_ISP1_SIG_ISP1_SIG	0x00000000 /*  */
	/* Register BITFIELD for GFX_ISP1_SIG - roff, lsb, width, mask */
	#define BITFIELD_GFX_ISP1_SIG_ISP1_SIG	 0x0cc4, 0, 32, 0x00000000
#define ROFF_GFX_TSP2_SIG	0xcc8 /* TSP2 Signature */ 
	#define BITFIELD_GFX_TSP2_SIG	 0x0cc8, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TSP2_SIG */
	#define BLSB_GFX_TSP2_SIG_TSP2_SIG	0
	/* Register Bit Widths for GFX_TSP2_SIG */
	#define BWID_GFX_TSP2_SIG_TSP2_SIG	32
	/* Register Bit MASKS for GFX_TSP2_SIG */
	#define BMSK_GFX_TSP2_SIG_TSP2_SIG	0x00000000 /*  */
	/* Register BITFIELD for GFX_TSP2_SIG - roff, lsb, width, mask */
	#define BITFIELD_GFX_TSP2_SIG_TSP2_SIG	 0x0cc8, 0, 32, 0x00000000
#define ROFF_GFX_TSP1_SIG	0xccc /* TSP1 Signature */ 
	#define BITFIELD_GFX_TSP1_SIG	 0x0ccc, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TSP1_SIG */
	#define BLSB_GFX_TSP1_SIG_TSP1_SIG	0
	/* Register Bit Widths for GFX_TSP1_SIG */
	#define BWID_GFX_TSP1_SIG_TSP1_SIG	32
	/* Register Bit MASKS for GFX_TSP1_SIG */
	#define BMSK_GFX_TSP1_SIG_TSP1_SIG	0x00000000 /*  */
	/* Register BITFIELD for GFX_TSP1_SIG - roff, lsb, width, mask */
	#define BITFIELD_GFX_TSP1_SIG_TSP1_SIG	 0x0ccc, 0, 32, 0x00000000
#define ROFF_GFX_TC_SIG	0xcd0 /* Tex Cache Signature */ 
	#define BITFIELD_GFX_TC_SIG	 0x0cd0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TC_SIG */
	#define BLSB_GFX_TC_SIG_TC_SIG	0
	/* Register Bit Widths for GFX_TC_SIG */
	#define BWID_GFX_TC_SIG_TC_SIG	32
	/* Register Bit MASKS for GFX_TC_SIG */
	#define BMSK_GFX_TC_SIG_TC_SIG	0x00000000 /*  */
	/* Register BITFIELD for GFX_TC_SIG - roff, lsb, width, mask */
	#define BITFIELD_GFX_TC_SIG_TC_SIG	 0x0cd0, 0, 32, 0x00000000
#define ROFF_GFX_TA_DIAG	0xcd4 /* Tile Accelerator Diagnostics */ 
	#define BITFIELD_GFX_TA_DIAG	 0x0cd4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TA_DIAG */
	#define BLSB_GFX_TA_DIAG_TA_DIAGS	0
	/* Register Bit Widths for GFX_TA_DIAG */
	#define BWID_GFX_TA_DIAG_TA_DIAGS	28
	/* Register Bit MASKS for GFX_TA_DIAG */
	#define BMSK_GFX_TA_DIAG_TA_DIAGS	0x0fffffff /*  */
	/* Register BITFIELD for GFX_TA_DIAG - roff, lsb, width, mask */
	#define BITFIELD_GFX_TA_DIAG_TA_DIAGS	 0x0cd4, 0, 28, 0x0fffffff
#define ROFF_GFX_TA_STRIP_CNT	0xcd8 /* Tile Accelerator Strip Count */ 
	#define BITFIELD_GFX_TA_STRIP_CNT	 0x0cd8, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_TA_STRIP_CNT */
	#define BLSB_GFX_TA_STRIP_CNT_TA_Strip_Count	0
	/* Register Bit Widths for GFX_TA_STRIP_CNT */
	#define BWID_GFX_TA_STRIP_CNT_TA_Strip_Count	10
	/* Register Bit MASKS for GFX_TA_STRIP_CNT */
	#define BMSK_GFX_TA_STRIP_CNT_TA_Strip_Count	0x000003ff /*  */
	/* Register BITFIELD for GFX_TA_STRIP_CNT - roff, lsb, width, mask */
	#define BITFIELD_GFX_TA_STRIP_CNT_TA_Strip_Count	 0x0cd8, 0, 10, 0x000003ff
#define ROFF_GFX_DIAG_EN	0xce0 /* Diagnostics Enable */ 
	#define BITFIELD_GFX_DIAG_EN	 0x0ce0, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_DIAG_EN */
	#define BLSB_GFX_DIAG_EN_Diag_Enable	0
	/* Register Bit Widths for GFX_DIAG_EN */
	#define BWID_GFX_DIAG_EN_Diag_Enable	1
	/* Register Bit MASKS for GFX_DIAG_EN */
	#define BMSK_GFX_DIAG_EN_Diag_Enable	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_DIAG_EN - roff, lsb, width, mask */
	#define BITFIELD_GFX_DIAG_EN_Diag_Enable	 0x0ce0, 0, 1, 0x00000001
#define ROFF_GFX_ISP2_SIG	0xce4 /* ISP2 Signature */ 
	#define BITFIELD_GFX_ISP2_SIG	 0x0ce4, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_ISP2_SIG */
	#define BLSB_GFX_ISP2_SIG_ISP2_SIG	0
	/* Register Bit Widths for GFX_ISP2_SIG */
	#define BWID_GFX_ISP2_SIG_ISP2_SIG	32
	/* Register Bit MASKS for GFX_ISP2_SIG */
	#define BMSK_GFX_ISP2_SIG_ISP2_SIG	0x00000000 /*  */
	/* Register BITFIELD for GFX_ISP2_SIG - roff, lsb, width, mask */
	#define BITFIELD_GFX_ISP2_SIG_ISP2_SIG	 0x0ce4, 0, 32, 0x00000000
#define ROFF_GFX_GLOBREG_CORE_ID	0xf00 /* MBX Core ID */ 
	#define BITFIELD_GFX_GLOBREG_CORE_ID	 0x0f00, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_CORE_ID */
	#define BLSB_GFX_GLOBREG_CORE_ID_GROUP_ID	24
	#define BLSB_GFX_GLOBREG_CORE_ID_CORE_ID	16
	#define BLSB_GFX_GLOBREG_CORE_ID_CORE_CFG_MMU	1
	#define BLSB_GFX_GLOBREG_CORE_ID_CORE_CFG_VGP	0
	/* Register Bit Widths for GFX_GLOBREG_CORE_ID */
	#define BWID_GFX_GLOBREG_CORE_ID_GROUP_ID	8
	#define BWID_GFX_GLOBREG_CORE_ID_CORE_ID	8
	#define BWID_GFX_GLOBREG_CORE_ID_CORE_CFG_MMU	1
	#define BWID_GFX_GLOBREG_CORE_ID_CORE_CFG_VGP	1
	/* Register Bit MASKS for GFX_GLOBREG_CORE_ID */
	#define BMSK_GFX_GLOBREG_CORE_ID_GROUP_ID	0xff000000 /*  */
	#define BMSK_GFX_GLOBREG_CORE_ID_CORE_ID	0x00ff0000 /*  */
	#define BMSK_GFX_GLOBREG_CORE_ID_CORE_CFG_MMU	(1<<1) /* == 0x00000002:  */
	#define BMSK_GFX_GLOBREG_CORE_ID_CORE_CFG_VGP	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_GLOBREG_CORE_ID - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_CORE_ID_GROUP_ID	 0x0f00, 24, 8, 0xff000000
	#define BITFIELD_GFX_GLOBREG_CORE_ID_CORE_ID	 0x0f00, 16, 8, 0x00ff0000
	#define BITFIELD_GFX_GLOBREG_CORE_ID_CORE_CFG_MMU	 0x0f00, 1, 1, 0x00000002
	#define BITFIELD_GFX_GLOBREG_CORE_ID_CORE_CFG_VGP	 0x0f00, 0, 1, 0x00000001
#define ROFF_GFX_GLOBREG_REVISION	0xf10 /* MBX Core Revision */ 
	#define BITFIELD_GFX_GLOBREG_REVISION	 0x0f10, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_REVISION */
	#define BLSB_GFX_GLOBREG_REVISION_Company	24
	#define BLSB_GFX_GLOBREG_REVISION_Major_Rev	16
	#define BLSB_GFX_GLOBREG_REVISION_Minor_Rev	8
	#define BLSB_GFX_GLOBREG_REVISION_Maintenance_Rev	0
	/* Register Bit Widths for GFX_GLOBREG_REVISION */
	#define BWID_GFX_GLOBREG_REVISION_Company	8
	#define BWID_GFX_GLOBREG_REVISION_Major_Rev	8
	#define BWID_GFX_GLOBREG_REVISION_Minor_Rev	8
	#define BWID_GFX_GLOBREG_REVISION_Maintenance_Rev	8
	/* Register Bit MASKS for GFX_GLOBREG_REVISION */
	#define BMSK_GFX_GLOBREG_REVISION_Company	0xff000000 /*  */
	#define BMSK_GFX_GLOBREG_REVISION_Major_Rev	0x00ff0000 /*  */
	#define BMSK_GFX_GLOBREG_REVISION_Minor_Rev	0x0000ff00 /*  */
	#define BMSK_GFX_GLOBREG_REVISION_Maintenance_Rev	0x000000ff /*  */
	/* Register BITFIELD for GFX_GLOBREG_REVISION - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_REVISION_Company	 0x0f10, 24, 8, 0xff000000
	#define BITFIELD_GFX_GLOBREG_REVISION_Major_Rev	 0x0f10, 16, 8, 0x00ff0000
	#define BITFIELD_GFX_GLOBREG_REVISION_Minor_Rev	 0x0f10, 8, 8, 0x0000ff00
	#define BITFIELD_GFX_GLOBREG_REVISION_Maintenance_Rev	 0x0f10, 0, 8, 0x000000ff
#define ROFF_GFX_GLOBREG_DSGN_REV1	0xf20 /* MBX Designer Revision Field 1 */ 
	#define BITFIELD_GFX_GLOBREG_DSGN_REV1	 0x0f20, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_DSGN_REV1 */
	#define BLSB_GFX_GLOBREG_DSGN_REV1_USER_REV1	0
	/* Register Bit Widths for GFX_GLOBREG_DSGN_REV1 */
	#define BWID_GFX_GLOBREG_DSGN_REV1_USER_REV1	32
	/* Register Bit MASKS for GFX_GLOBREG_DSGN_REV1 */
	#define BMSK_GFX_GLOBREG_DSGN_REV1_USER_REV1	0x00000000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_DSGN_REV1 - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_DSGN_REV1_USER_REV1	 0x0f20, 0, 32, 0x00000000
#define ROFF_GFX_GLOBREG_DSGN_REV2	0xf30 /* MBX Designer Revision Field 2 */ 
	#define BITFIELD_GFX_GLOBREG_DSGN_REV2	 0x0f30, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_DSGN_REV2 */
	#define BLSB_GFX_GLOBREG_DSGN_REV2_USER_REV2	0
	/* Register Bit Widths for GFX_GLOBREG_DSGN_REV2 */
	#define BWID_GFX_GLOBREG_DSGN_REV2_USER_REV2	32
	/* Register Bit MASKS for GFX_GLOBREG_DSGN_REV2 */
	#define BMSK_GFX_GLOBREG_DSGN_REV2_USER_REV2	0x00000000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_DSGN_REV2 - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_DSGN_REV2_USER_REV2	 0x0f30, 0, 32, 0x00000000
#define ROFF_GFX_GLOBREG_MMU_PAGE0_ADDR	0x1000 /* MMU Table Page 0 Address */ 
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE0_ADDR	 0x1000, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_MMU_PAGE0_ADDR */
	#define BLSB_GFX_GLOBREG_MMU_PAGE0_ADDR_MMU_Table_0	12
	/* Register Bit Widths for GFX_GLOBREG_MMU_PAGE0_ADDR */
	#define BWID_GFX_GLOBREG_MMU_PAGE0_ADDR_MMU_Table_0	20
	/* Register Bit MASKS for GFX_GLOBREG_MMU_PAGE0_ADDR */
	#define BMSK_GFX_GLOBREG_MMU_PAGE0_ADDR_MMU_Table_0	0xfffff000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_MMU_PAGE0_ADDR - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE0_ADDR_MMU_Table_0	 0x1000, 12, 20, 0xfffff000
#define ROFF_GFX_GLOBREG_MMU_PAGE1_ADDR	0x1004 /* MMU Table Page 1 Address */ 
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE1_ADDR	 0x1004, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_MMU_PAGE1_ADDR */
	#define BLSB_GFX_GLOBREG_MMU_PAGE1_ADDR_MMU_Table_1	12
	/* Register Bit Widths for GFX_GLOBREG_MMU_PAGE1_ADDR */
	#define BWID_GFX_GLOBREG_MMU_PAGE1_ADDR_MMU_Table_1	20
	/* Register Bit MASKS for GFX_GLOBREG_MMU_PAGE1_ADDR */
	#define BMSK_GFX_GLOBREG_MMU_PAGE1_ADDR_MMU_Table_1	0xfffff000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_MMU_PAGE1_ADDR - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE1_ADDR_MMU_Table_1	 0x1004, 12, 20, 0xfffff000
#define ROFF_GFX_GLOBREG_MMU_PAGE2_ADDR	0x1008 /* MMU Table Page 2 Address */ 
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE2_ADDR	 0x1008, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_MMU_PAGE2_ADDR */
	#define BLSB_GFX_GLOBREG_MMU_PAGE2_ADDR_MMU_Table_2	12
	/* Register Bit Widths for GFX_GLOBREG_MMU_PAGE2_ADDR */
	#define BWID_GFX_GLOBREG_MMU_PAGE2_ADDR_MMU_Table_2	20
	/* Register Bit MASKS for GFX_GLOBREG_MMU_PAGE2_ADDR */
	#define BMSK_GFX_GLOBREG_MMU_PAGE2_ADDR_MMU_Table_2	0xfffff000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_MMU_PAGE2_ADDR - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE2_ADDR_MMU_Table_2	 0x1008, 12, 20, 0xfffff000
#define ROFF_GFX_GLOBREG_MMU_PAGE3_ADDR	0x100c /* MMU Table Page 3 Address */ 
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE3_ADDR	 0x100c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_MMU_PAGE3_ADDR */
	#define BLSB_GFX_GLOBREG_MMU_PAGE3_ADDR_MMU_Table_3	12
	/* Register Bit Widths for GFX_GLOBREG_MMU_PAGE3_ADDR */
	#define BWID_GFX_GLOBREG_MMU_PAGE3_ADDR_MMU_Table_3	20
	/* Register Bit MASKS for GFX_GLOBREG_MMU_PAGE3_ADDR */
	#define BMSK_GFX_GLOBREG_MMU_PAGE3_ADDR_MMU_Table_3	0xfffff000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_MMU_PAGE3_ADDR - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE3_ADDR_MMU_Table_3	 0x100c, 12, 20, 0xfffff000
#define ROFF_GFX_GLOBREG_MMU_PAGE4_ADDR	0x1010 /* MMU Table Page 4 Address */ 
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE4_ADDR	 0x1010, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_MMU_PAGE4_ADDR */
	#define BLSB_GFX_GLOBREG_MMU_PAGE4_ADDR_MMU_Table_4	12
	/* Register Bit Widths for GFX_GLOBREG_MMU_PAGE4_ADDR */
	#define BWID_GFX_GLOBREG_MMU_PAGE4_ADDR_MMU_Table_4	20
	/* Register Bit MASKS for GFX_GLOBREG_MMU_PAGE4_ADDR */
	#define BMSK_GFX_GLOBREG_MMU_PAGE4_ADDR_MMU_Table_4	0xfffff000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_MMU_PAGE4_ADDR - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE4_ADDR_MMU_Table_4	 0x1010, 12, 20, 0xfffff000
#define ROFF_GFX_GLOBREG_MMU_PAGE5_ADDR	0x1014 /* MMU Table Page 5 Address */ 
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE5_ADDR	 0x1014, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_MMU_PAGE5_ADDR */
	#define BLSB_GFX_GLOBREG_MMU_PAGE5_ADDR_MMU_Table_5	12
	/* Register Bit Widths for GFX_GLOBREG_MMU_PAGE5_ADDR */
	#define BWID_GFX_GLOBREG_MMU_PAGE5_ADDR_MMU_Table_5	20
	/* Register Bit MASKS for GFX_GLOBREG_MMU_PAGE5_ADDR */
	#define BMSK_GFX_GLOBREG_MMU_PAGE5_ADDR_MMU_Table_5	0xfffff000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_MMU_PAGE5_ADDR - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE5_ADDR_MMU_Table_5	 0x1014, 12, 20, 0xfffff000
#define ROFF_GFX_GLOBREG_MMU_PAGE6_ADDR	0x1018 /* MMU Table Page 6 Address */ 
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE6_ADDR	 0x1018, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_MMU_PAGE6_ADDR */
	#define BLSB_GFX_GLOBREG_MMU_PAGE6_ADDR_MMU_Table_6	12
	/* Register Bit Widths for GFX_GLOBREG_MMU_PAGE6_ADDR */
	#define BWID_GFX_GLOBREG_MMU_PAGE6_ADDR_MMU_Table_6	20
	/* Register Bit MASKS for GFX_GLOBREG_MMU_PAGE6_ADDR */
	#define BMSK_GFX_GLOBREG_MMU_PAGE6_ADDR_MMU_Table_6	0xfffff000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_MMU_PAGE6_ADDR - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE6_ADDR_MMU_Table_6	 0x1018, 12, 20, 0xfffff000
#define ROFF_GFX_GLOBREG_MMU_PAGE7_ADDR	0x101c /* MMU Table Page 7 Address */ 
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE7_ADDR	 0x101c, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_MMU_PAGE7_ADDR */
	#define BLSB_GFX_GLOBREG_MMU_PAGE7_ADDR_MMU_Table_7	12
	/* Register Bit Widths for GFX_GLOBREG_MMU_PAGE7_ADDR */
	#define BWID_GFX_GLOBREG_MMU_PAGE7_ADDR_MMU_Table_7	20
	/* Register Bit MASKS for GFX_GLOBREG_MMU_PAGE7_ADDR */
	#define BMSK_GFX_GLOBREG_MMU_PAGE7_ADDR_MMU_Table_7	0xfffff000 /*  */
	/* Register BITFIELD for GFX_GLOBREG_MMU_PAGE7_ADDR - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_MMU_PAGE7_ADDR_MMU_Table_7	 0x101c, 12, 20, 0xfffff000
#define ROFF_GFX_GLOBREG_MMU_ENABLE	0x1020 /* MMU Enable */ 
	#define BITFIELD_GFX_GLOBREG_MMU_ENABLE	 0x1020, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_MMU_ENABLE */
	#define BLSB_GFX_GLOBREG_MMU_ENABLE_MMU_Inval_Status	24
	#define BLSB_GFX_GLOBREG_MMU_ENABLE_MMU_Ready	16
	#define BLSB_GFX_GLOBREG_MMU_ENABLE_MMU_Invalidate	8
	#define BLSB_GFX_GLOBREG_MMU_ENABLE_MMU_Enable	0
	/* Register Bit Widths for GFX_GLOBREG_MMU_ENABLE */
	#define BWID_GFX_GLOBREG_MMU_ENABLE_MMU_Inval_Status	1
	#define BWID_GFX_GLOBREG_MMU_ENABLE_MMU_Ready	1
	#define BWID_GFX_GLOBREG_MMU_ENABLE_MMU_Invalidate	1
	#define BWID_GFX_GLOBREG_MMU_ENABLE_MMU_Enable	1
	/* Register Bit MASKS for GFX_GLOBREG_MMU_ENABLE */
	#define BMSK_GFX_GLOBREG_MMU_ENABLE_MMU_Inval_Status	(1<<24) /* == 0x01000000:  */
	#define BMSK_GFX_GLOBREG_MMU_ENABLE_MMU_Ready	(1<<16) /* == 0x00010000:  */
	#define BMSK_GFX_GLOBREG_MMU_ENABLE_MMU_Invalidate	(1<<8) /* == 0x00000100:  */
	#define BMSK_GFX_GLOBREG_MMU_ENABLE_MMU_Enable	(1<<0) /* == 0x00000001:  */
	/* Register BITFIELD for GFX_GLOBREG_MMU_ENABLE - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_MMU_ENABLE_MMU_Inval_Status	 0x1020, 24, 1, 0x01000000
	#define BITFIELD_GFX_GLOBREG_MMU_ENABLE_MMU_Ready	 0x1020, 16, 1, 0x00010000
	#define BITFIELD_GFX_GLOBREG_MMU_ENABLE_MMU_Invalidate	 0x1020, 8, 1, 0x00000100
	#define BITFIELD_GFX_GLOBREG_MMU_ENABLE_MMU_Enable	 0x1020, 0, 1, 0x00000001
#define ROFF_GFX_GLOBREG_MMU_IDX_INVAL	0x1024 /* MMU Index Invalidate */ 
	#define BITFIELD_GFX_GLOBREG_MMU_IDX_INVAL	 0x1024, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_MMU_IDX_INVAL */
	#define BLSB_GFX_GLOBREG_MMU_IDX_INVAL_MMU_Tag	8
	#define BLSB_GFX_GLOBREG_MMU_IDX_INVAL_MMU_Index	0
	/* Register Bit Widths for GFX_GLOBREG_MMU_IDX_INVAL */
	#define BWID_GFX_GLOBREG_MMU_IDX_INVAL_MMU_Tag	5
	#define BWID_GFX_GLOBREG_MMU_IDX_INVAL_MMU_Index	8
	/* Register Bit MASKS for GFX_GLOBREG_MMU_IDX_INVAL */
	#define BMSK_GFX_GLOBREG_MMU_IDX_INVAL_MMU_Tag	0x00001f00 /*  */
	#define BMSK_GFX_GLOBREG_MMU_IDX_INVAL_MMU_Index	0x000000ff /*  */
	/* Register BITFIELD for GFX_GLOBREG_MMU_IDX_INVAL - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_MMU_IDX_INVAL_MMU_Tag	 0x1024, 8, 5, 0x00001f00
	#define BITFIELD_GFX_GLOBREG_MMU_IDX_INVAL_MMU_Index	 0x1024, 0, 8, 0x000000ff
#define ROFF_GFX_GLOBREG_MMU_PHYSADD_INVAL	0x1028 /* MMU Phys Add Invalidate */ 
	#define BITFIELD_GFX_GLOBREG_MMU_PHYSADD_INVAL	 0x1028, 0, 32, 0xffffffff  /* roff, lsb, width, mask */
	/* Register Bit LSB Positions for GFX_GLOBREG_MMU_PHYSADD_INVAL */
	#define BLSB_GFX_GLOBREG_MMU_PHYSADD_INVAL_MMU_PhysAdd	0
	/* Register Bit Widths for GFX_GLOBREG_MMU_PHYSADD_INVAL */
	#define BWID_GFX_GLOBREG_MMU_PHYSADD_INVAL_MMU_PhysAdd	21
	/* Register Bit MASKS for GFX_GLOBREG_MMU_PHYSADD_INVAL */
	#define BMSK_GFX_GLOBREG_MMU_PHYSADD_INVAL_MMU_PhysAdd	0x001fffff /*  */
	/* Register BITFIELD for GFX_GLOBREG_MMU_PHYSADD_INVAL - roff, lsb, width, mask */
	#define BITFIELD_GFX_GLOBREG_MMU_PHYSADD_INVAL_MMU_PhysAdd	 0x1028, 0, 21, 0x001fffff


/* Module GFX SPECIFIC SVEN Events */




#endif /* GFX_REGOFFS_H */
