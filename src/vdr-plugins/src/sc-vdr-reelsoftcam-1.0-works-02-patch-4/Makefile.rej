--- Makefile	2014-04-29 15:09:34.253738562 +0200
+++ Makefile	2014-04-29 15:11:14.009734922 +0200
@@ -1,29 +1,15 @@
 #
-# Softcam plugin to VDR
+# Makefile for a Video Disk Recorder plugin
 #
-# This code is free software; you can redistribute it and/or
-# modify it under the terms of the GNU General Public License
-# as published by the Free Software Foundation; either version 2
-# of the License, or (at your option) any later version.
-#
-# This code is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
-# Or, point your browser to http://www.gnu.org/copyleft/gpl.html
+# $Id$
 
 # The official name of this plugin.
 # This name will be used in the '-P...' option of VDR to load the plugin.
 # By default the main source file also carries this name.
-#
-PLUGIN = sc
 
-### The version number of this plugin
+PLUGIN = sc
 
+### The version number of this plugin (taken from the main source file):
 DISTFILE = .distvers
 HGARCHIVE = .hg_archival.txt
 RELEASE := $(shell grep 'define SC_RELEASE' version.h | awk '{ print $$3 }' | sed -e 's/[";]//g')
@@ -38,212 +24,125 @@
                    fi)
 VERSION := $(RELEASE)-$(SUBREL)
 SCAPIVERS := $(shell sed -ne '/define SCAPIVERS/ s/^.[a-zA-Z ]*\([0-9]*\).*$$/\1/p' version.h)
-
 ### The directory environment:
 
-VDRDIR = ../../..
-LIBDIR = ../../lib
-SYSDIR = ./systems
-PREDIR = ./systems-pre
-TMPDIR = /tmp
-
-### The C++ compiler and options:
-
-CXX      ?= g++
-CXXFLAGS ?= -O2 -g -Wall -Woverloaded-virtual
-
-### Includes and Defines
-
-INCLUDES      = -I$(VDRDIR)/include
-DEFINES       = -DPLUGIN_NAME_I18N='"$(PLUGIN)"'
-SHAREDDEFINES = -DAPIVERSNUM=$(APIVERSNUM) -D_GNU_SOURCE
-LIBS          = -lcrypto
-SHAREDLIBS    =
+# Use package data if installed...otherwise assume we're under the VDR source directory:
+PKGCFG = $(if $(VDRDIR),$(shell pkg-config --variable=$(1) $(VDRDIR)/vdr.pc),$(shell pkg-config --variable=$(1) vdr || pkg-config --variable=$(1) ../../../vdr.pc))
+LIBDIR = $(call PKGCFG,libdir)
+LOCDIR = $(call PKGCFG,locdir)
+PLGCFG = $(call PKGCFG,plgcfg)
+#
+
+SYSDIR  = ./systems
+PREDIR  = ./systems-pre
+LIBS   := -lcrypto
+TMPDIR ?= /tmp
+
+### The compiler options:
+
+export CFLAGS   = $(call PKGCFG,cflags)
+export CXXFLAGS = $(call PKGCFG,cxxflags)
+export SCAPIVERS
+export APIVERSION
+
+### The version number of VDR's plugin API:
+
+APIVERSION = $(call PKGCFG,apiversion)
 
 ### Allow user defined options to overwrite defaults:
 
--include $(VDRDIR)/Make.global
--include $(VDRDIR)/Make.config
--include Make.config
-
-# we need this ATM because of the helper.h macros...
-CXXFLAGS += -fno-strict-aliasing
-
-### The version number of VDR (taken from VDR's "config.h"):
-
-VDRVERSION := $(shell sed -ne '/define VDRVERSION/ s/^.*"\(.*\)".*$$/\1/p' $(VDRDIR)/include/vdr/config.h)
-APIVERSION := $(shell sed -ne '/define APIVERSION/ s/^.*"\(.*\)".*$$/\1/p' $(VDRDIR)/include/vdr/config.h)
-ifeq ($(strip $(APIVERSION)),)
-   APIVERSION = $(VDRVERSION)
-endif
-VDRVERSNUM := $(shell sed -ne '/define VDRVERSNUM/ s/^.[a-zA-Z ]*\([0-9]*\) .*$$/\1/p' $(VDRDIR)/include/vdr/config.h)
-APIVERSNUM := $(shell sed -ne '/define APIVERSNUM/ s/^.[a-zA-Z ]*\([0-9]*\) .*$$/\1/p' $(VDRDIR)/include/vdr/config.h)
-ifeq ($(strip $(APIVERSNUM)),)
-   APIVERSNUM = $(VDRVERSNUM)
-endif
+-include $(PLGCFG)
 
-### The object files (add further files here):
+### The name of the distribution archive:
 
-OBJS = $(PLUGIN).o data.o filter.o system.o misc.o cam.o device.o version.o \
-       smartcard.o network.o crypto.o system-common.o parse.o log.o \
-       override.o
+ARCHIVE = $(PLUGIN)-$(VERSION)
+PACKAGE = vdr-$(ARCHIVE)
 
-### Internationalization (I18N):
+### The name of the shared object file:
 
-PODIR     = po
-I18Npot   = $(PODIR)/$(PLUGIN).pot
-I18Nmo    = vdr-$(PLUGIN).mo
-I18Nmsgs  = $(addprefix $(LOCALEDIR)/,$(addsuffix /LC_MESSAGES/$(I18Nmo),$(notdir $(foreach file, $(wildcard $(PODIR)/*.po), $(basename $(file))))))
-LOCALEDIR = $(VDRDIR)/locale
-
-### VDR version dependant
-
-# test VDR version
-BYVERS = $(strip $(shell if test $(APIVERSNUM) -ge 010703; then echo "*"; fi))
-# test if PlayTsVideo() exists (e.g. TSplay patch)
-BYTSPL = $(strip $(shell grep -l 'PlayTsVideo' $(VDRDIR)/include/vdr/device.h))
+SOFILE = libvdr-$(PLUGIN).so
 
-ifneq ($(BYVERS)$(BYTSPL),)
-  SHAREDDEFINES += -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE
-endif
+### Includes and Defines (add further entries here):
 
-#
-# generic stuff
-#
+INCLUDES +=
 
-# smartcard default port (dropped)
-ifdef DEFAULT_PORT
-  $(error DEFAULT_PORT support was removed, use cardslot.conf)
-endif
+DEFINES += -DPLUGIN_NAME_I18N='"$(PLUGIN)"'
 
-ifdef WITH_PCSC
-  DEFINES  += -DWITH_PCSC
-  LIBS     += -lpcsclite
-endif
+### The object files (add further files here):
 
-HAVE_SD := $(wildcard ../dvbsddevice/dvbsddevice.c)
-ifneq ($(strip $(HAVE_SD)),)
-  DEFINES += -DWITH_SDDVB
-  DEVPLUGTARGETS += $(LIBDIR)/libsc-dvbsddevice-$(SCAPIVERS).so.$(APIVERSION)
-endif
-DEVPLUGOBJS += device-sd.o
-HAVE_HD := $(wildcard ../dvbhddevice/dvbhddevice.c)
-ifneq ($(strip $(HAVE_HD)),)
-  HDVERS := $(shell sed -ne '/*VERSION/ s/^.*=.*"\(.*\)".*$$/\1/p' ../dvbhddevice/dvbhddevice.c)
-  ifeq ($(findstring dag,$(HDVERS)),)
-    DEFINES += -DWITH_HDDVB
-    DEVPLUGTARGETS += $(LIBDIR)/libsc-dvbhddevice-$(SCAPIVERS).so.$(APIVERSION)
-  endif
-endif
-DEVPLUGOBJS += device-hd.o
+OBJS = $(PLUGIN).o data.o filter.o system.o misc.o cam.o device.o version.o \
+       smartcard.o network.o crypto.o system-common.o parse.o log.o \
+       override.o
 
 # max number of CAIDs per slot
-MAXCAID := $(shell sed -ne '/define MAXCASYSTEMIDS/ s/^.[a-zA-Z ]*\([0-9]*\).*$$/\1/p' $(VDRDIR)/ci.c)
-ifneq ($(strip $(MAXCAID)),)
-  DEFINES += -DVDR_MAXCAID=$(MAXCAID)
-endif
+MAXCAID := 64
 
+ifndef LIBDVBCSA
 # FFdeCSA
-CPUOPT     ?= pentium
-PARALLEL   ?= PARALLEL_32_INT
-CSAFLAGS   ?= -Wall -fPIC -g -O3 -mmmx -fomit-frame-pointer -fexpensive-optimizations -funroll-loops
+PARALLEL   ?= PARALLEL_128_SSE2
+CSAFLAGS   ?= -fexpensive-optimizations -fomit-frame-pointer -funroll-loops -O3 -mmmx -msse -msse2 -msse3
 FFDECSADIR  = FFdecsa
 FFDECSA     = $(FFDECSADIR)/FFdecsa.o
-FFDECSATEST = $(FFDECSADIR)/FFdecsa_test.done
-
-# SASC
-ifdef SASC
-DEFINES += -DSASC
-FFDECSA =
-FFDECSATEST =
-endif
-
-# export for system makefiles
-export SCAPIVERS
-export APIVERSION
-export INCLUDES
-export SHAREDDEFINES
-export SHAREDLIBS
-export CXX
-export CXXFLAGS
-
-### Targets:
-
-ifdef STATIC
-BUILDTARGETS = $(LIBDIR)/libvdr-$(PLUGIN).a
-SHAREDDEFINES += -DSTATICBUILD
+DECSALIB    = $(FFDECSA)
 else
-BUILDTARGETS = $(LIBDIR)/libvdr-$(PLUGIN).so.$(APIVERSION) systems-pre $(DEVPLUGTARGETS)
+# libdvbcsa
+DECSALIB = -ldvbcsa
+DEFINES += -DLIBDVBCSA
 endif
-BUILDTARGETS += $(FFDECSATEST) systems i18n
 
-all: $(BUILDTARGETS)
-.PHONY: i18n systems systems-pre contrib clean clean-core clean-systems clean-pre dist srcdist
+### The main target:
 
-# Dependencies:
+all: $(SOFILE) systems-pre systems i18n
 
-MAKEDEP = g++ -MM -MG
-DEPFILE = .dependencies
-DEPFILES = $(subst i18n.c,,$(subst version.c,,$(OBJS:%.o=%.c)))
-$(DEPFILE): $(DEPFILES) $(wildcard *.h)
-	@$(MAKEDEP) $(DEFINES) $(SHAREDDEFINES) $(INCLUDES) $(DEPFILES) > $@
-
--include $(DEPFILE)
 
-# Rules
+### Implicit rules:
 
 %.o: %.c
-	$(CXX) $(CXXFLAGS) -c $(DEFINES) $(SHAREDDEFINES) $(INCLUDES) $<
+	$(CXX) $(CXXFLAGS) -c $(DEFINES) $(INCLUDES) -o $@ $<
 
-libvdr-$(PLUGIN).so: $(OBJS) $(FFDECSA)
-	$(CXX) $(CXXFLAGS) -shared $(OBJS) $(FFDECSA) $(LIBS) $(SHAREDLIBS) -o $@
+### Dependencies:
 
-$(LIBDIR)/libvdr-$(PLUGIN).so.$(APIVERSION): libvdr-$(PLUGIN).so
-	@cp -p $< $@
-
-$(LIBDIR)/libvdr-$(PLUGIN).a: $(OBJS)
-	$(AR) r $@ $(OBJS)
-
-libsc-dvbsddevice.so: device-sd.o
-	$(CXX) $(CXXFLAGS) -shared $< $(SHAREDLIBS) -o $@
+MAKEDEP = $(CXX) -MM -MG
+DEPFILES = $(subst i18n.c,,$(subst version.c,,$(OBJS:%.o=%.c)))
+$(DEPFILE): $(DEPFILES) $(wildcard *.h)
+	@$(MAKEDEP) $(CXXFLAGS) $(DEFINES) $(INCLUDES) $(OBJS:%.o=%.c) > $@
 
-$(LIBDIR)/libsc-dvbsddevice-$(SCAPIVERS).so.$(APIVERSION): libsc-dvbsddevice.so
-	@cp -p $< $@
+-include $(DEPFILE)
 
-libsc-dvbhddevice.so: device-hd.o
-	$(CXX) $(CXXFLAGS) -shared $< $(SHAREDLIBS) -o $@
+### Internationalization (I18N):
 
-$(LIBDIR)/libsc-dvbhddevice-$(SCAPIVERS).so.$(APIVERSION): libsc-dvbhddevice.so
-	@cp -p $< $@
+PODIR     = po
+I18Npo    = $(wildcard $(PODIR)/*.po)
+I18Nmo    = $(addsuffix .mo, $(foreach file, $(I18Npo), $(basename $(file))))
+I18Nmsgs  = $(addprefix $(DESTDIR)$(LOCDIR)/, $(addsuffix /LC_MESSAGES/vdr-$(PLUGIN).mo, $(notdir $(foreach file, $(I18Npo), $(basename $(file))))))
+I18Npot   = $(PODIR)/$(PLUGIN).pot
 
-$(FFDECSA) $(FFDECSATEST): $(FFDECSADIR)/*.c $(FFDECSADIR)/*.h
-	@$(MAKE) COMPILER="$(CXX)" FLAGS="$(CSAFLAGS) -march=$(CPUOPT)" PARALLEL_MODE=$(PARALLEL) -C $(FFDECSADIR) all
+%.mo: %.po
+	msgfmt -c -o $@ $<
 
-$(I18Npot): $(shell grep -rl '\(tr\|trNOOP\)(\".*\")' *.c $(SYSDIR))
-	xgettext -C -cTRANSLATORS --no-wrap --no-location -k -ktr -ktrNOOP --package-name=VDR-SC --package-version=$(VERSION) --msgid-bugs-address='<noone@nowhere.org>' -o $@ `ls $^`
+$(I18Npot): $(wildcard *.c)
+	xgettext -C -cTRANSLATORS --no-wrap --no-location -k -ktr -ktrNOOP --package-name=vdr-$(PLUGIN) --package-version=$(VERSION) --msgid-bugs-address='<see README>' -o $@ `ls $^`
 
 %.po: $(I18Npot)
-	msgmerge -U --no-wrap --no-location --no-fuzzy-matching --backup=none -q $@ $<
+	msgmerge -U --no-wrap --no-location --backup=none -q -N $@ $<
 	@touch $@
 
-%.mo: %.po
-	msgfmt -c -o $@ $<
+$(I18Nmsgs): $(DESTDIR)$(LOCDIR)/%/LC_MESSAGES/vdr-$(PLUGIN).mo: $(PODIR)/%.mo
+	install -D -m644 $< $@
 
-$(I18Nmsgs): $(LOCALEDIR)/%/LC_MESSAGES/$(I18Nmo): $(PODIR)/%.mo
-	@mkdir -p $(dir $@)
-	cp $< $@
+.PHONY: i18n systems systems-pre
+i18n: $(I18Nmo) $(I18Npot)
 
-i18n: $(I18Nmsgs)
-
-version.c: FORCE
+version.c:
 	@echo >$@.new "/* generated file, do not edit */"; \
-	 echo >>$@.new 'const char *ScVersion =' '"'$(VERSION)'";'; \
-	 diff $@.new $@ >$@.diff 2>&1; \
-	 if test -s $@.diff; then mv -f $@.new $@; fi; \
-	 rm -f $@.new $@.diff;
+		echo >>$@.new 'const char *ScVersion =' '"'$(VERSION)'";'; \
+		diff $@.new $@ >$@.diff 2>&1; \
+		if test -s $@.diff; then mv -f $@.new $@; fi; \
+		rm -f $@.new $@.diff;
 
 systems:
-	@for i in `ls -A -I ".*" $(SYSDIR)`; do $(MAKE) -f ../../Makefile.system -C "$(SYSDIR)/$$i" all || exit 1; done
+	@mkdir lib
+	@for i in `ls -A -I ".*" $(SYSDIR)`; do  $(MAKE) LIBDIR=../../lib -f ../../Makefile.system -C "$(SYSDIR)/$$i" all || exit 1; done
 
 systems-pre:
 	@for i in `ls -A -I ".*" $(PREDIR) | grep -- '-$(SCAPIVERS).so.$(APIVERSION)$$'`; do cp -p "$(PREDIR)/$$i" "$(LIBDIR)"; done
@@ -251,45 +150,36 @@
 contrib:
 	@$(MAKE) -C contrib all
 
-clean-systems:
-	@for i in `ls -A -I ".*" $(SYSDIR)`; do $(MAKE) -f ../../Makefile.system -C "$(SYSDIR)/$$i" clean; done
+install-i18n: $(I18Nmsgs)
+
+### Targets:
+
+$(SOFILE): $(OBJS) $(DECSALIB)
+	$(CXX) $(CXXFLAGS) $(LDFLAGS) -shared $(OBJS) $(DECSALIB) $(LIBS) -o $@
 
-clean-core:
-	@$(MAKE) -C testing clean
-	@$(MAKE) -C contrib clean
-	@if test -d $(FFDECSADIR); then $(MAKE) -C $(FFDECSADIR) clean; fi
-	@-rm -f $(LIBDIR)/libsc-*-$(SCAPIVERS).so.$(APIVERSION)
-	@-rm -f $(LIBDIR)/libvdr-$(PLUGIN).a $(LIBDIR)/libsc-*.a
-	@-rm -f $(OBJS) $(DEVPLUGOBJS) $(DEPFILE) version.c *.so *.tar.gz core* *~
-	@-rm -f $(PODIR)/*.mo
-
-clean-pre:
-	@-find "$(PREDIR)" -type f -not -name ".empty" -not -iname "*-$(SCAPIVERS).so.*" | xargs rm -f
-
-clean: clean-core clean-systems
-
-dist: ARCHIVE := $(PLUGIN)-$(RELEASE)
-dist: clean-core
-	@for i in `ls -A -I ".*" $(SYSDIR)`; do $(MAKE) -f ../../Makefile.system -C "$(SYSDIR)/$$i" dist; done
+ifndef LIBDVBCSA
+$(FFDECSA): $(FFDECSADIR)/*.c $(FFDECSADIR)/*.h
+	@$(MAKE) COMPILER="$(CXX)" FLAGS="$(CXXFLAGS) $(CSAFLAGS)" PARALLEL_MODE=$(PARALLEL) -C $(FFDECSADIR) all
+endif
+
+install-lib: $(SOFILE)
+	install -D $^ $(DESTDIR)$(LIBDIR)/$^.$(APIVERSION)
+	install -D lib/* $(DESTDIR)$(LIBDIR)/
+
+install: install-lib install-i18n
+
+dist: $(I18Npo) clean
 	@-rm -rf $(TMPDIR)/$(ARCHIVE)
 	@mkdir $(TMPDIR)/$(ARCHIVE)
 	@cp -a * $(TMPDIR)/$(ARCHIVE)
-	@echo -n "release" >$(TMPDIR)/$(ARCHIVE)/$(DISTFILE)
-	@path="$(TMPDIR)/$(ARCHIVE)/$(notdir $(SYSDIR))";\
-	 for i in `ls -A -I ".*" $$path`; do if [ -f "$$path/$$i/nonpublic.mk" ]; then rm -rf "$$path/$$i"; fi; if [ -f "$$path/$$i/nonpublic.sh" ]; then (cd $$path/$$i ; source ./nonpublic.sh ; rm ./nonpublic.sh); fi; done
-	@strip --strip-unneeded --preserve-dates $(TMPDIR)/$(ARCHIVE)/$(notdir $(PREDIR))/* || true
-	@tar czf vdr-$(ARCHIVE).tar.gz -C $(TMPDIR) $(ARCHIVE)
+	@tar czf $(PACKAGE).tgz -C $(TMPDIR) $(ARCHIVE)
 	@-rm -rf $(TMPDIR)/$(ARCHIVE)
-	@echo Distribution package created as vdr-$(ARCHIVE).tar.gz
+	@echo Distribution package created as $(PACKAGE).tgz
 
-copy: ARCHIVE := $(PLUGIN)-$(VERSION)
-copy: clean clean-pre
-	@-rm -rf $(TMPDIR)/$(ARCHIVE)
-	@mkdir $(TMPDIR)/$(ARCHIVE)
-	@cp -a .hgtags .hgignore * $(TMPDIR)/$(ARCHIVE)
-	@echo -n $(SUBREL) | sed -e 's/HG-/CP-/' >$(TMPDIR)/$(ARCHIVE)/$(DISTFILE)
-	@tar czf vdr-$(ARCHIVE).tar.gz -C $(TMPDIR) $(ARCHIVE)
-	@-rm -rf $(TMPDIR)/$(ARCHIVE)
-	@echo Full copy package created as vdr-$(ARCHIVE).tar.gz
+clean-systems:
+	@for i in `ls -A -I ".*" $(SYSDIR)`; do $(MAKE) -f ../../Makefile.system -C "$(SYSDIR)/$$i" clean; done
 
-FORCE:
+clean: clean-systems
+	@-rm -f $(PODIR)/*.mo $(PODIR)/*.pot
+	@-rm -f $(OBJS) $(DEPFILE) *.so *.tgz core* *~
+	@-rm -rf lib
