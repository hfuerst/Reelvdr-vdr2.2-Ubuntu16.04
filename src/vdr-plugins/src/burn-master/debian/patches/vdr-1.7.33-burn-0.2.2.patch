--- a/scanner.c
+++ b/scanner.c
@@ -26,7 +26,7 @@
 #include <sys/stat.h>
 #include <vdr/remux.h>
 #include <vdr/device.h>
-#include "libsi/si.h"
+#include <libsi/si.h>
 
 
 #define DEBUG(x...) isyslog(x)
@@ -390,7 +390,7 @@
 		logger::debug(format( "scanning ts positions: {0}/{1}-{2}/{3}") % start.first % start.second % end.first % end.second);
 
 		bool PmtFound = false;
-		int PatVersion, PmtVersion;
+		int PatVersion, PmtVersion, pmtPid;
 
 		PatPmtParser.Reset();
 		m_vdrFile.seek(start);
@@ -405,15 +405,17 @@
 					if ( Pid == 0)
 						PatPmtParser.ParsePat(DataPtr, TS_SIZE);
 #if VDRVERSNUM < 10733
-					else if (Pid == PatPmtParser.PmtPid())
+					else if (Pid == PatPmtParser.PmtPid()) {
 #else
-                    else if (PatPmtParser.IsPmtPid(Pid))
+					else if (PatPmtParser.IsPmtPid(Pid)) {
 #endif
+						pmtPid = Pid;
 						PatPmtParser.ParsePmt(DataPtr, TS_SIZE);
+      }
 					else if (PatPmtParser.GetVersions(PatVersion, PmtVersion)) {
 						PmtFound = true;
 						int streams = 0;
-						logger::debug(format( "PID found: Vpid=0x{1}, Vtype=0x{2}") % format::base( PatPmtParser.Vpid(), 16 ) % format::base( PatPmtParser.Vtype(), 16 ));
+						logger::debug(format( "PID found: PMT PID=0x{0}, Vpid=0x{1}, Vtype=0x{2}") % format::base( pmtPid, 16 ) % format::base( PatPmtParser.Vpid(), 16 ) % format::base( PatPmtParser.Vtype(), 16 ));
 						if ( PatPmtParser.Vpid() && (PatPmtParser.Vtype() == 2)) { // accept only MPEG2
 							track_info track( PatPmtParser.Vpid(), track_info::streamtype_video );
 							m_tracks.push_back( track );
--- a/t/common_functions.c
+++ b/t/common_functions.c
@@ -12,8 +12,8 @@
 	using namespace std;
 
 	string path = "/video0/Claire's \"Erbe\"";
-	string escaped = shell_escape(path, "'");
+	string escaped = proctools::shell_escape(path, "'");
 	BOOST_CHECK_EQUAL(escaped, "/video0/Claire\\'s \"Erbe\"");
-	escaped = shell_escape(path, "\"");
+	escaped = proctools::shell_escape(path, "\"");
 	BOOST_CHECK_EQUAL(escaped, "/video0/Claire's \\\"Erbe\\\"");
 }
--- a/Makefile
+++ b/Makefile
@@ -14,10 +14,9 @@
 
 ### The version number of this plugin (taken from the main source file):
 
-VERSION = $(shell grep 'const char\* plugin::VERSION *=' $(PLUGIN).c | awk '{ print $$5 }' | sed -e 's/[";]//g')
+VERSION = $(shell grep 'static const char \*VERSION *=' $(PLUGIN).c | awk '{ print $$6 }' | sed -e 's/[";]//g')
 
 ### The directory environment:
-#VDRDIR = ../../..
 
 # Use package data if installed...otherwise assume we're under the VDR source directory:
 PKGCFG = $(if $(VDRDIR),$(shell pkg-config --variable=$(1) $(VDRDIR)/vdr.pc),$(shell pkg-config --variable=$(1) vdr || pkg-config --variable=$(1) ../../../vdr.pc))
@@ -36,56 +35,9 @@
 
 APIVERSION = $(call PKGCFG,apiversion)
 
-
-### Backward compatibility stuff
-ifeq ($(LOCDIR),)
-### The C++ compiler and options:
-
-CXX      ?= g++
-CXXFLAGS ?= -O3 -Wall -Woverloaded-virtual -fPIC
-
-### The directory environment:
-
-VDRDIR = ../../..
-LIBDIR = ../../lib
-
-### Allow user defined options to overwrite defaults:
-
--include $(VDRDIR)/Make.config
-
-ifdef DEBUG
-	CXXFLAGS = -g -Wall -Woverloaded-virtual -fPIC
-else
-	DEFINES += -DNDEBUG
-endif
-
-### The version number of VDR's plugin API (taken from VDR's "config.h"):
-
-APIVERSION = $(shell sed -ne '/define APIVERSION/s/^.*"\(.*\)".*$$/\1/p' $(VDRDIR)/config.h)
-
-LOCDIR = $(VDRDIR)/locale
-
-### Includes and Defines (add further entries here):
-
-DEFINES += -D_GNU_SOURCE
-
-INCLUDES += -I$(VDRDIR)/include
-
-### Run 'install' for target 'all':
-
-all: install
-
-ifeq ($(shell grep 'I18N_DEFAULT_LOCALE' $(VDRDIR)/i18n.h),)
-OLD_I18N = 1
-
-i18n install-i18n:
-
-endif
-else
 ### Allow user defined options to overwrite defaults:
 
 -include $(PLGCFG)
-endif # compatibility section
 
 ### The name of the distribution archive:
 
@@ -98,24 +50,16 @@
 
 ### Includes and Defines (add further entries here):
 
-INCLUDES += -I$(VDRDIR)/include -I. $(shell gdlib-config --cflags)
+INCLUDES += $(shell gdlib-config --cflags)
 LIBS     += $(shell gdlib-config --ldflags --libs) -lgd
-DEFINES  += -DPLUGIN_NAME='"$(PLUGIN)"' -DPLUGIN_NAME_I18N='"$(PLUGIN)"' -D_LARGEFILE_SOURCE
-
-### The object files (add further files here):
-
-OBJS = burn.o chain-vdr.o chain-dvd.o jobs.o logger-vdr.o skins.o \
-	   manager.o menuburn.o menubase.o \
-	   etsi-const.o tracks.o scanner.o gdwrapper.o iconvwrapper.o \
-	   menuitems.o setup.o common.o config.o render.o \
-	   genindex/pes.o
+DEFINES += -DPLUGIN_NAME='"$(PLUGIN)"' -DPLUGIN_NAME_I18N='"$(PLUGIN)"'
 
 ifdef ENABLE_DMH_ARCHIVE
 DEFINES += -DENABLE_DMH_ARCHIVE
 OBJS += chain-archive.o
 endif
 
-SUBDIRS = proctools # tinyxml
+SUBDIRS = proctools
 SUBLIBS=$(shell for i in $(SUBDIRS); do echo $$i/lib$$i.a; done)
 
 LIBS += $(SUBLIBS)
@@ -140,9 +84,18 @@
 
 DEFINES += -DTMPDIR='"$(TMPDIR)"' -DDVDDEV='"$(DVDDEV)"' -DISODIR='"$(ISODIR)"'
 
+
+### The object files (add further files here):
+
+OBJS = $(PLUGIN).o chain-vdr.o chain-dvd.o jobs.o logger-vdr.o skins.o \
+	manager.o menuburn.o menubase.o \
+	etsi-const.o tracks.o scanner.o gdwrapper.o iconvwrapper.o \
+	menuitems.o setup.o common.o config.o render.o \
+	genindex/pes.o
+
 ### The main target:
 
-all: SUBDIRS $(SOFILE) i18n
+all: $(SUBLIBS) $(SOFILE) i18n
 
 ### Implicit rules:
 
@@ -160,7 +113,6 @@
 
 ### Internationalization (I18N):
 
-ifeq ($(OLD_I18N),)
 PODIR     = po
 I18Npo    = $(wildcard $(PODIR)/*.po)
 I18Nmo    = $(addsuffix .mo, $(foreach file, $(I18Npo), $(basename $(file))))
@@ -171,10 +123,10 @@
 	msgfmt -c -o $@ $<
 
 $(I18Npot): $(wildcard *.c)
-	xgettext -C -cTRANSLATORS --no-wrap --no-location  -k -ktr -ktrNOOP --package-name=vdr-$(PLUGIN) --package-version=$(VERSION) --msgid-bugs-address='<see README>' -o $@ `ls $^`
+	xgettext -C -cTRANSLATORS --no-wrap --no-location -k -ktr -ktrNOOP --package-name=vdr-$(PLUGIN) --package-version=$(VERSION) --msgid-bugs-address='<see README>' -o $@ `ls $^`
 
 %.po: $(I18Npot)
-	msgmerge -U --no-wrap --no-location --backup=none -q $@ $<
+	msgmerge -U --no-wrap --no-location --backup=none -q -N $@ $<
 	@touch $@
 
 $(I18Nmsgs): $(DESTDIR)$(LOCDIR)/%/LC_MESSAGES/vdr-$(PLUGIN).mo: $(PODIR)/%.mo
@@ -184,24 +136,14 @@
 i18n: $(I18Nmo) $(I18Npot)
 
 install-i18n: $(I18Nmsgs)
-endif
 
 ### Targets:
 
-.PHONY: all dist clean SUBDIRS
-
-#SUBDIRS:
 $(SUBLIBS):
 	@for dir in $(SUBDIRS); do \
 		$(MAKE) -C $$dir CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" lib$$dir.a ; \
 	done
 
-$(SOFILE): $(OBJS) Makefile $(SUBLIBS)
-	$(CXX) $(CXXFLAGS) $(LDFLAGS) -shared $(OBJS) $(LIBS) -o $@
-
-install-lib: $(SOFILE)
-	install -D $^ $(DESTDIR)$(LIBDIR)/$^.$(APIVERSION)
-
 scan-test: $(OBJS) proctools scan-test.o
 	$(CXX) $(CXXFLAGS) scan-test.o $(OBJS) -o $@ \
 		$(LIBS) -ljpeg -lpthread -ldl -lcap \
@@ -210,20 +152,25 @@
 gd-test: gdwrapper.o gdtest.o
 	$(CXX) $(CXXFLAGS) $^ -o $@ $(LIBS)
 
+$(SOFILE): $(OBJS) $(SUBLIBS)
+	$(CXX) $(CXXFLAGS) $(LDFLAGS) -shared $(OBJS) $(LIBS) -o $@
+
+install-lib: $(SOFILE)
+	install -D $^ $(DESTDIR)$(LIBDIR)/$^.$(APIVERSION)
+
 install: install-lib install-i18n
 
 dist: $(I18Npo) clean
-	@-rm -rf $(TMPDIR)/vdrdist/$(ARCHIVE)
-	@mkdir -p $(TMPDIR)/vdrdist/$(ARCHIVE)
-	@cp -a * $(TMPDIR)/vdrdist/$(ARCHIVE)
-	@tar czf $(PACKAGE).tgz -C $(TMPDIR)/vdrdist $(ARCHIVE)
-	@-rm -rf $(TMPDIR)/vdrdist
+	@-rm -rf $(TMPDIR)/$(ARCHIVE)
+	@mkdir $(TMPDIR)/$(ARCHIVE)
+	@cp -a * $(TMPDIR)/$(ARCHIVE)
+	@tar czf $(PACKAGE).tgz -C $(TMPDIR) $(ARCHIVE)
+	@-rm -rf $(TMPDIR)/$(ARCHIVE)
 	@echo Distribution package created as $(PACKAGE).tgz
 
-
 clean:
 	@-rm -f $(PODIR)/*.mo $(PODIR)/*.pot
-	@-rm -f *.o genindex/*.o $(DEPFILE) *.so *.tgz core* *~ \
+	@-rm -f $(OBJS) $(DEPFILE) *.so *.tgz core* *~ \
 		scan-test test t/*.o
 	@for dir in $(SUBDIRS); do \
 		$(MAKE) -C $$dir clean ; \
@@ -233,11 +180,11 @@
 
 TESTOBJS = t/main.o t/common_functions.o
 
-test: $(TESTOBJS) $(OBJS) proctools
-	$(CXX) $(CXXFLAGS) $(TESTOBJS) $(OBJS) -o $@ $(LIBS) \
-		-lboost_unit_test_framework -ljpeg -lpthread -ldl -lcap \
-		$(shell ls $(VDRDIR)/*.o | grep -v vdr.o) $(VDRDIR)/libsi/libsi.a
-	./test
+#test: $(TESTOBJS) $(OBJS) proctools
+#	$(CXX) $(CXXFLAGS) $(TESTOBJS) $(OBJS) -o $@ $(LIBS) \
+#		-lboost_unit_test_framework -ljpeg -lpthread -ldl -lcap \
+#		$(shell ls $(VDRDIR)/*.o | grep -v vdr.o) $(VDRDIR)/libsi/libsi.a
+#	./test
 
 env:
 	@echo "Configuration:"
@@ -245,3 +192,4 @@
 	@echo "  APIVERSION $(APIVERSION)"
 	@echo "  CXX $(CXX)  CXXFLAGS $(CXXFLAGS)"
 	@echo "  VDRDIR $(VDRDIR)  LIBDIR $(LIBDIR)  LOCDIR $(LOCDIR)"
+
