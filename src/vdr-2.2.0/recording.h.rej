--- recording.h	(revision 15412)
+++ recording.h	(revision 15413)
@@ -23,6 +23,9 @@
 #define TIMERMACRO_EPISODE  "EPISODE"
 
 extern bool VfatFileSystem;
+#ifdef USE_LIEMIEXT
+extern bool DirOrderState;
+#endif /* LIEMIEXT */
 extern int InstanceId;
 
 void RemoveDeletedRecordings(void);
@@ -111,8 +117,15 @@
   virtual int Compare(const cListObject &ListObject) const;
   const char *Name(void) const { return name; }
   const char *FileName(void) const;
+#ifdef USE_LIEMIEXT
+  const char *Title(char Delimiter = ' ', bool NewIndicator = false, int Level = -1, bool Original = true) const;
+#else
   const char *Title(char Delimiter = ' ', bool NewIndicator = false, int Level = -1) const;
+#endif /* LIEMIEXT */
   const cRecordingInfo *Info(void) const { return info; }
+#ifdef USE_CUTTIME
+  void SetStartTime(time_t Start);
+#endif /* CUTTIME */
   const char *PrefixFileName(char Prefix);
   int HierarchyLevels(void) const;
   void ResetResume(void) const;
@@ -131,6 +144,11 @@
        // Changes the file name so that it will be visible in the "Recordings" menu again and
        // not processed by cRemoveDeletedRecordingsThread.
        // Returns false in case of error
+#ifdef USE_LIEMIEXT
+  bool Rename(const char *newName);
+       // Changes the file name
+       // Returns false in case of error
+#endif /* LIEMIEXT */
   };
 
 class cRecordings : public cList<cRecording>, public cThread {
@@ -225,7 +258,11 @@
   static const char *command;
 public:
   static void SetCommand(const char *Command) { command = Command; }
+#ifdef USE_DVLRECSCRIPTADDON
+  static void InvokeCommand(const char *State, const char *RecordingFileName, char *chanName = NULL);
+#else
   static void InvokeCommand(const char *State, const char *RecordingFileName);
+#endif /* DVLRECSCRIPTADDON */
   };
 
 // The maximum size of a single frame (up to HDTV 1920x1080):
@@ -284,6 +335,10 @@
   bool StoreResume(int Index) { return resumeFile.Save(Index); }
   bool IsStillRecording(void);
   void Delete(void);
+#ifdef USE_LIEMIEXT
+  static int Length(const char *FileName, bool IsPesRecording = false);
+       ///< Calculates the recording length without reading the index.
+#endif /* LIEMIEXT */
   };
 
 class cFileName {
