--- dvbplayer.c	(revision 15412)
+++ dvbplayer.c	(revision 15413)
@@ -204,6 +204,9 @@
   cNonBlockingFileReader *nonBlockingFileReader;
   cRingBufferFrame *ringBuffer;
   cPtsIndex ptsIndex;
+#ifdef USE_JUMPPLAY
+  cMarksReload marks;
+#endif /* JUMPPLAY */
   cFileName *fileName;
   cIndexFile *index;
   cUnbufferedFile *replayFile;
@@ -250,7 +253,11 @@
 int cDvbPlayer::Speeds[] = { 0, -2, -4, -8, 1, 2, 4, 12, 0 };
 
 cDvbPlayer::cDvbPlayer(const char *FileName)
+#ifdef USE_JUMPPLAY
+:cThread("dvbplayer"), marks(FileName)
+#else
 :cThread("dvbplayer")
+#endif /* JUMPPLAY */
 {
   nonBlockingFileReader = NULL;
   ringBuffer = NULL;
@@ -360,6 +367,12 @@
   if (index) {
      int Index = ptsIndex.FindIndex(DeviceGetSTC());
      if (Index >= 0) {
+#ifdef USE_JUMPPLAY
+        // set resume position to 0 if replay stops at the first mark
+        if (Setup.PlayJump && marks.First() &&
+            abs(Index - marks.First()->position) <= int(round(RESUMEBACKUP * framesPerSecond)))
+          Index = 0;
+#endif /* JUMPPLAY */
         Index -= int(round(RESUMEBACKUP * framesPerSecond));
         if (Index > 0)
            Index = index->GetNextIFrame(Index, false);
@@ -386,11 +399,30 @@
 {
   uchar *p = NULL;
   int pc = 0;
+#ifdef USE_JUMPPLAY
+  bool cutIn = false;
+  int total = -1;
+#endif /* JUMPPLAY */
 
   readIndex = Resume();
   if (readIndex >= 0)
      isyslog("resuming replay at index %d (%s)", readIndex, *IndexToHMSF(readIndex, true, framesPerSecond));
 
+#ifdef USE_JUMPPLAY
+  if (Setup.PlayJump && readIndex <= 0 && marks.First() && index) {
+    int Index = marks.First()->position;
+    uint16_t FileNumber;
+    off_t FileOffset;
+    if (index->Get(Index, &FileNumber, &FileOffset) &&
+      NextFile(FileNumber, FileOffset)) {
+      isyslog("PlayJump: start replay at first mark %d (%s)",
+              Index, *IndexToHMSF(Index, true, framesPerSecond));
+      readIndex = Index;
+      }
+    }
+
+  bool LastMarkPause = false;
+#endif /* JUMPPLAY */
   nonBlockingFileReader = new cNonBlockingFileReader;
   int Length = 0;
   bool Sleep = false;
@@ -456,6 +492,46 @@
                    else if (index) {
                       uint16_t FileNumber;
                       off_t FileOffset;
+#ifdef USE_JUMPPLAY
+                      if (Setup.PlayJump || Setup.PauseLastMark) {
+                         // check for end mark - jump to next mark or pause
+                         readIndex++;
+                         marks.Reload();
+                         cMark *m = marks.Get(readIndex);
+                         if (m && (m->Index() & 0x01) != 0) {
+                            m = marks.Next(m);
+                            int Index;
+                            if (m)
+                               Index = m->position;
+                            else if (Setup.PauseLastMark) {
+                               // pause at last mark
+                               isyslog("PauseLastMark: pause at position %d (%s)",
+                                       readIndex, *IndexToHMSF(readIndex, true, framesPerSecond));
+                               LastMarkPause = true;
+                               Index = -1;
+                               }
+                            else if (total == index->Last())
+                               // at last mark jump to end of recording
+                               Index = index->Last() - 1;
+                            else
+                               // jump but stay off end of live-recordings
+                               Index = index->GetNextIFrame(index->Last() - int(round(MAXSTUCKATEOF * framesPerSecond)), true);
+                            // don't jump in edited recordings
+                            if (Setup.PlayJump && Index > readIndex &&
+                                Index > index->GetNextIFrame(readIndex, true)) {
+                               isyslog("PlayJump: %d frames to %d (%s)",
+                                       Index - readIndex, Index,
+                                       *IndexToHMSF(Index, true, framesPerSecond));
+                               readIndex = Index;
+                               cutIn = true;
+                               }
+                            }
+                         readIndex--;
+                      }
+                      // for detecting growing length of live-recordings
+                      if (index->Get(readIndex + 1, &FileNumber, &FileOffset, &readIndependent) && readIndependent)
+                         total = index->Last();
+#endif /* JUMPPLAY */
                       if (index->Get(readIndex + 1, &FileNumber, &FileOffset, &readIndependent, &Length) && NextFile(FileNumber, FileOffset))
                          readIndex++;
                       else
@@ -500,6 +576,15 @@
              // Store the frame in the buffer:
 
              if (readFrame) {
+#ifdef USE_JUMPPLAY
+                if (cutIn) {
+                   if (isPesRecording)
+                      cRemux::SetBrokenLink(readFrame->Data(), readFrame->Count());
+                   else
+                      TsSetTeiOnBrokenPackets(readFrame->Data(), readFrame->Count());
+                   cutIn = false;
+                   }
+#endif /* JUMPPLAY */
                 if (ringBuffer->Put(readFrame))
                    readFrame = NULL;
                 else
